{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?1dde","webpack:///./src/components/LogMor.vue?0f0f","webpack:///./src/App.vue?fef9","webpack:///./src/components/LogMor.vue?aff8","webpack:///./src/Tokens.ts","webpack:///./src/cm_modes/lcc.js","webpack:///./src/Errors.ts","webpack:///./src/Parser.ts","webpack:///./src/Variable.ts","webpack:///./src/Interpreter.ts","webpack:///./src/components/Result.vue?86f1","webpack:///./src/components/Result.vue","webpack:///./src/components/Result.vue?7f13","webpack:///./src/components/Result.vue?dcf5","webpack:///./src/components/Comp.vue?4b80","webpack:///./src/components/Comp.vue","webpack:///./src/components/LogMor.vue","webpack:///./src/components/Comp.vue?90bd","webpack:///./src/components/Comp.vue?3fa0","webpack:///./src/components/LogMor.vue?4201","webpack:///./src/components/LogMor.vue?cc7d","webpack:///./src/App.vue","webpack:///./src/App.vue?c438","webpack:///./src/App.vue?bff9","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","staticStyle","_v","staticRenderFns","themeOptions","on","themeSelected","model","callback","$$v","theme","expression","isEvaluating","submitEvaluate","submitClear","logOutput","_l","str","idx","_s","_e","solverResults","compResults","$event","abortingEval","abortEval","allTokens","createChevToken","options","newToken","pattern","group","SKIPPED","line_breaks","TKeyword","NA","TLogicalOP","TBoolLit","TMoralLit","TSolverRuleOP","THyp","categories","TRule","TSolver","TDef","TRun","TCompare","TPrint","TSim","TIs","TOr","TXor","TAnd","TImpl","TEq","TLParen","TRParen","TDot","TID","TQUOTED_STRING","matchQuotedString","start_chars_hint","text","startOffset","endOffset","char","matchedString","substring","allKeywords","undefined","CATEGORIES","cat","PATTERN","source","keywordSet","Set","atoms","builtinKeywords","atomRegex","a","keywordRegex","kw","CodeMirror","defineSimpleMode","start","regex","token","next","indent","dedent","comment","stringtpt","meta","dontIndentStates","lineComment","defineMIME","msg","type","InterpreterJSError","id","op","symbs","Error","LMParserErrorProvider","buildMismatchTokenMessage","expected","ruleName","previous","startLine","image","tokenType","buildNotAllInputParsedMessage","firstRedundant","buildNoViableAltMessage","buildEarlyExitMessage","LLexer","errorMessageProvider","parenthesizedExpression","RULE","CONSUME","SUBRULE","logicalImplExpression","primaryExpression","OR","ALT","OPTION","logicalANDExpression","MANY","SUBRULE2","logicalXORExpression","logicalORExpression","logicalEQExpression","hypDeclaration","CONSUME2","ruleDeclaration","solverDeclaration","solverStatement","compareStatement","program","MANY2","MANY3","MANY4","MANY5","script","lexResult","tokenize","input","tokens","cst","lexErrors","errors","parseErrors","parser","Parser","performSelfAnalysis","createParser","createHypVar","createRuleVar","createSolverVar","rules","pruned","solverResult","ruleFromVar","vari","dummyToken","startColumn","endLine","endColumn","isInsertedInRecovery","tokenTypeIdx","aborted","BaseCstVisitor","getBaseCstVisitorConstructor","_keywords","_varTable","Map","_hyps","_po2","_solverResults","_compResults","_consoleMessages","_ec","validateVisitor","ctx","visit","ID","_getToken","getVariable","createVarDoesNotExist","BoolLit","bToken","bStr","ruleData","or","not","And","vari2","and","XOr","xor","Or","Eq","equiv","Impl","implies","varIdToken","varId","metaToken","QUOTED_STRING","metaToken2","meta2","_checkVarName","addVariable","idToken","MoralLit","mlToken","ml","sVari","SolverRuleOP","ruleOP","idToken2","id2","rVari","Run","_runSolver","Print","res","results","sVari2","solverID1","solverMeta1","solverID2","solverMeta2","subtype","results2","Sim","goodStates","getArrsByComp","arrsAreEqual","badStates","neutralStates","hyps","val","numHyps","po2","Array","console","log","solverRes","Solver","solverCon","rule","require","solutionsRes","solve","solutionsCon","goodSolutions","set1","has","_computeAndAddResults","solverVar","neutralSolutions","solverID","solverMeta","numCases","Math","pow","numNeutralCases","numGoodBadCases","numGoodCases","numBadCases","aLevel","mBalance","mEntropy","mEntropyNorm","mEntropyScale","badVal","goodVal","log2","lowL","highL","ELow","lowH","highH","EHigh","bitSet","gs","bits","hypVar","add","cons","formulaRes","formulaToString","formulaCon","hypArr","hyp","hypID","hasVariable","createVarAlreadyExists","createReservedName","set","ec","pRes","parse","ret","err","e","errObj","eType","subType","line","isNaN","lineOffset","column","message","offset","messages","solver","solutions","done","curSol","getTrueVars","forbid","getFormula","s1","s2","size","arr1","arr2","comp","formulas","logic","operand","A","B","operands","goodState","state","idxInner","badState","neutralState","additionalInfo","round","toFixed","default","component","executionController","EDITOR_CONTENT_COOKIE","EDITOR_THEME_COOKIE","printingOutput","initTheme","THEME_OPTIONS","$cookies","label","ide","setOption","fromTextArea","document","getElementById","lineNumbers","tabSize","lineWrapping","that","setSize","cookieTxt","setValue","JERY_AND_GERGE","getValue","replace","evaluate","setTimeout","interpret","item","$nextTick","components","Comp","Result","vSelect","LogMor","CookieLaw","use","config","productionTip","render","h","$mount"],"mappings":"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","file":"js/app.9d6575db.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LogMor.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LogMor.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page-container\",attrs:{\"id\":\"app\"}},[_c('md-app',{staticStyle:{\"background-color\":\"#f1ebe6\"}},[_c('md-app-toolbar',{staticClass:\"md-primary md-large\",attrs:{\"id\":\"toolbar\"}}),_c('md-app-content',{staticStyle:{\"background-color\":\"#eae3db\"}},[_c('LogMor',{staticStyle:{\"margin-bottom\":\"2em\",\"background-color\":\"#eae3db\"},attrs:{\"md-elevation-0\":\"\"}})],1)],1),_c('footer',[_c('md-bottom-bar',{staticStyle:{\"background-color\":\"#1f2430\"}},[_c('div',{staticClass:\"footeritem\"},[_c('a',{staticClass:\"footerlink\",attrs:{\"target\":\"_blank\",\"href\":\"https://github.com/androlo/logmor\"}},[_vm._v(\"Project Page\")])]),_c('div',{staticClass:\"footeritem\"},[_c('a',{staticClass:\"footerlink\",attrs:{\"target\":\"_blank\",\"href\":\"https://github.com/androlo/logmor/blob/main/docs/tutorial.md\"}},[_vm._v(\"Tutorial\")])]),_c('div',{staticClass:\"footeritem\"},[_c('a',{staticClass:\"footerlink\",attrs:{\"target\":\"_blank\",\"href\":\"https://github.com/androlo/logmor/blob/main/docs/docs.md\"}},[_vm._v(\"Documentation\")])])]),_c('cookie-law',{attrs:{\"theme\":\"base\",\"buttonText\":\"OK\",\"storageType\":\"cookies\",\"storageName\":\"LogMor.CookieAlert\",\"message\":\"This page uses cookies for Your convenience.\"}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('md-card',{staticStyle:{\"background-color\":\"#f5f5f5\",\"margin-bottom\":\"0.5em\"}},[_c('md-card-content',[_c('div',{staticClass:\"md-display-3 mainTitle\",staticStyle:{\"margin-bottom\":\"0.3em\",\"text-align\":\"center\",\"color\":\"#474747\"}},[_vm._v(\" Logical Morality \")]),_c('div',{staticClass:\"md-headline\",staticStyle:{\"margin-bottom\":\"0.3em\",\"text-align\":\"center\",\"color\":\"#474747\"}},[_vm._v(\" νερςιοη 0.1 (βετα) \")]),_c('div',{staticClass:\"md-layout\",staticStyle:{\"margin-bottom\":\"0.5em\"}},[_c('div',{staticClass:\"md-layout-item md-size-15\"},[_c('v-select',{attrs:{\"clearable\":false,\"id\":\"theme\",\"options\":_vm.themeOptions},on:{\"input\":_vm.themeSelected},model:{value:(_vm.theme),callback:function ($$v) {_vm.theme=$$v},expression:\"theme\"}})],1)]),_c('div',[_c('textarea',{attrs:{\"id\":\"ide\"}})])]),_c('md-card-actions',[_c('md-button',{attrs:{\"disabled\":_vm.isEvaluating},on:{\"click\":_vm.submitEvaluate}},[_vm._v(\"Evaluate\")]),_c('md-button',{attrs:{\"disabled\":_vm.isEvaluating},on:{\"click\":_vm.submitClear}},[_vm._v(\"Clear\")])],1)],1),_c('md-card',{staticStyle:{\"background-color\":\"#f5f5f5\"}},[_c('md-card-header',[_c('div',{staticClass:\"md-display-1\"},[_vm._v(\"Output\")])]),_c('md-card-content',[(_vm.logOutput.length > 0)?_c('div',{staticClass:\"list\"},[_c('div',{staticClass:\"output\"},_vm._l((_vm.logOutput),function(str,idx){return _c('span',{key:idx,staticClass:\"outputItem\"},[_vm._v(\" : \"+_vm._s(str)+\" \")])}),0)]):_vm._e(),(_vm.solverResults.length > 0)?_c('div',{staticStyle:{\"padding-top\":\"1em\"}},_vm._l((_vm.solverResults),function(data,key){return _c('div',{key:key},[_c('Result',{staticStyle:{\"margin-bottom\":\"0.5em\"},attrs:{\"result\":data}})],1)}),0):_vm._e(),(_vm.compResults.length > 0)?_c('div',_vm._l((_vm.compResults),function(data,key){return _c('div',{key:key},[_c('Comp',{staticStyle:{\"margin-bottom\":\"0.5em\"},attrs:{\"result\":data}})],1)}),0):_vm._e()])],1),_c('md-dialog',{attrs:{\"md-active\":_vm.isEvaluating},on:{\"update:mdActive\":function($event){_vm.isEvaluating=$event},\"update:md-active\":function($event){_vm.isEvaluating=$event}}},[_c('md-dialog-title',[_vm._v(\"Evaluating Script\")]),_c('div',{staticStyle:{\"padding\":\"1em\"}},[(!_vm.abortingEval)?_c('p',[_vm._v(\"Running (may take a while) ... \")]):_vm._e(),(_vm.printingOutput)?_c('p',[_vm._v(\"Printing (may freeze the window for large datasets) ... \")]):_vm._e(),(_vm.abortingEval)?_c('p',[_vm._v(\"Aborting (may take a little while) ... \")]):_vm._e(),_c('md-progress-bar',{attrs:{\"md-mode\":\"indeterminate\"}})],1),_c('md-dialog-actions',[_c('md-button',{staticClass:\"md-primary\",on:{\"click\":function($event){return _vm.abortEval()}}},[_vm._v(\"Abort\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { ITokenConfig, Lexer, TokenType, createToken } from 'chevrotain';\r\n\r\nexport const allTokens: TokenType[] = [];\r\n\r\nfunction createChevToken (options: ITokenConfig) {\r\n    const newToken = createToken(options);\r\n    allTokens.push(newToken);\r\n    return newToken;\r\n}\r\n\r\ncreateChevToken({\r\n    name: 'WhiteSpace',\r\n    pattern: /\\s+/,\r\n    group: Lexer.SKIPPED\r\n});\r\n\r\ncreateChevToken({\r\n    name: 'Comment',\r\n    pattern: /\\/\\/[^\\n\\r]*/,\r\n    group: Lexer.SKIPPED\r\n});\r\n\r\ncreateChevToken({\r\n    name: 'MultiLineComment',\r\n    pattern: /\\/\\*.?\\*\\//,\r\n    group: Lexer.SKIPPED,\r\n    line_breaks: true\r\n});\r\n\r\n// Groups\r\nexport const TKeyword = createChevToken({ name: 'Keyword', pattern: Lexer.NA });\r\nexport const TLogicalOP = createChevToken({ name: 'LogicalOP', pattern: Lexer.NA });\r\nexport const TBoolLit = createChevToken({ name: 'BoolLit', pattern: Lexer.NA });\r\nexport const TMoralLit = createChevToken({ name: 'MoralLit', pattern: Lexer.NA });\r\nexport const TSolverRuleOP = createChevToken({ name: 'SolverRuleOP', pattern: Lexer.NA });\r\n\r\n// Declarations\r\nexport const THyp = createChevToken({ name: 'Hyp', pattern: /hyp/, categories: [TKeyword] });\r\nexport const TRule = createChevToken({ name: 'Rule', pattern: /rule/, categories: [TKeyword] });\r\nexport const TSolver = createChevToken({ name: 'Solver', pattern: /solver/, categories: [TKeyword] });\r\nexport const TDef = createChevToken({ name: 'Def', pattern: /=/, categories: [TKeyword] });\r\n\r\n// Rule members\r\nexport const TTrue = createChevToken({ name: 'True', pattern: /true/, categories: [TBoolLit] });\r\nexport const TPos = createChevToken({ name: 'Pos', pattern: /pos/, categories: [TBoolLit] });\r\nexport const TFalse = createChevToken({ name: 'False', pattern: /false/, categories: [TBoolLit] });\r\nexport const TNeg = createChevToken({ name: 'Neg', pattern: /neg/, categories: [TBoolLit] });\r\nexport const TEither = createChevToken({ name: 'Either', pattern: /either/, categories: [TBoolLit] });\r\n\r\n// Solver ops\r\nexport const TApply = createChevToken({ name: 'Apply', pattern: /apply/, categories: [TKeyword, TSolverRuleOP] });\r\nexport const TOmit = createChevToken({ name: 'Omit', pattern: /omit/, categories: [TKeyword, TSolverRuleOP] });\r\nexport const TRun = createChevToken({ name: 'Run', pattern: /run/, categories: [TKeyword] });\r\nexport const TCompare = createChevToken({ name: 'Compare', pattern: /compare/, categories: [TKeyword] });\r\nexport const TPrint = createChevToken({ name: 'Print', pattern: /print/, categories: [TKeyword] });\r\n\r\n// Comparison ops\r\nexport const TSim = createChevToken({ name: 'Sim', pattern: /sim/, categories: [TKeyword] });\r\n//export const TDiff = createChevToken({ name: 'Diff', pattern: /diff/, categories: [TKeyword] });\r\n\r\n// Rules, moral modifiers\r\nexport const TIs = createChevToken({ name: 'Is', pattern: /is/, categories: [TKeyword] });\r\nexport const TGood = createChevToken({ name: 'Good', pattern: /good/, categories: [TKeyword, TMoralLit] });\r\nexport const TBad = createChevToken({ name: 'Bad', pattern: /bad/, categories: [TKeyword, TMoralLit] });\r\n\r\n// Logical operators\r\nexport const TOr = createChevToken({ name: 'Or', pattern: /or/, categories: [TKeyword, TLogicalOP] });\r\nexport const TXor = createChevToken({ name: 'XOr', pattern: /xor/, categories: [TKeyword, TLogicalOP] });\r\nexport const TAnd = createChevToken({ name: 'And', pattern: /and/, categories: [TKeyword, TLogicalOP] });\r\nexport const TImpl = createChevToken({ name: 'Impl', pattern: /impl/, categories: [TKeyword, TLogicalOP] });\r\nexport const TEq = createChevToken({ name: 'Eq', pattern: /eq/, categories: [TKeyword] });\r\n\r\n// Misc\r\nexport const TLParen = createChevToken({ name: 'LParen', pattern: /\\(/ });\r\nexport const TRParen = createChevToken({ name: 'RParen', pattern: /\\)/ });\r\nexport const TLCurly = createChevToken({ name: 'LCurly', pattern: /{/ });\r\nexport const TRCurly = createChevToken({ name: 'RCurly', pattern: /}/ });\r\nexport const TDot = createChevToken({ name: 'Dot', pattern: /\\./ });\r\n\r\n// ID\r\nexport const TID = createChevToken({ name: 'ID', pattern: /[A-Za-z_]+\\w*/ });\r\n\r\n// Quoted strings\r\nexport const TQUOTED_STRING = createChevToken({\r\n    name: 'QUOTED_STRING',\r\n    // @ts-ignore\r\n    pattern: matchQuotedString,\r\n    line_breaks: true,\r\n    start_chars_hint: [`'`, '\"', '`']\r\n});\r\n\r\nfunction matchQuotedString (text: string, startOffset: number) {\r\n    let endOffset = startOffset;\r\n    const char = text[endOffset++];\r\n\r\n    if (char !== '\"' && char !== `'` && char !== '`') {\r\n        return null;\r\n    }\r\n\r\n    if (char === '`') {\r\n        while (endOffset < text.length && text[endOffset] !== char) {\r\n            endOffset++;\r\n        }\r\n    } else {\r\n        while (endOffset < text.length && text[endOffset] !== char) {\r\n            if (text[endOffset] === '\\n' || text[endOffset] === '\\r') {\r\n                return null;\r\n            }\r\n            endOffset++;\r\n        }\r\n    }\r\n\r\n    if (endOffset === text.length) {\r\n        return null;\r\n    } else {\r\n        const matchedString = text.substring(startOffset, endOffset + 1);\r\n        return [matchedString];\r\n    }\r\n}\r\n\r\nexport const allKeywords: string[] = [];\r\n\r\nfor (const token of allTokens) {\r\n    if (token.CATEGORIES !== undefined) {\r\n        for (const cat of token.CATEGORIES) {\r\n            if (cat.name === 'Keyword') {\r\n                allKeywords.push((token.PATTERN as any).source);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// TODO\r\nexport const keywordSet = (): ReadonlySet<string> => {\r\n    return new Set<string>(allKeywords);\r\n};\r\n","/* eslint-disable no-useless-escape, no-cond-assign, no-empty, no-prototype-builtins */\r\nimport CodeMirror from \"codemirror\";\r\nimport {allKeywords} from \"../Tokens\";\r\n\r\nimport 'codemirror/addon/mode/simple.js';\r\n\r\nconst atoms = [\r\n    'true',\r\n    'pos',\r\n    'false',\r\n    'neg',\r\n    'either'\r\n];\r\n\r\nconst builtinKeywords = [\r\n\r\n];\r\n\r\nlet atomRegex = () => {\r\n    let str = '';\r\n    for (const a of atoms) {\r\n        str += a + '|';\r\n    }\r\n    str = str.slice(0, str.length - 1);\r\n    return str;\r\n};\r\n\r\nlet keywordRegex = () => {\r\n    let str = '';\r\n    for (const kw of allKeywords) {\r\n        str += kw + '|';\r\n    }\r\n    for (const kw of builtinKeywords) {\r\n        str += kw + '|';\r\n    }\r\n    str = str.slice(0, str.length - 1);\r\n    return str;\r\n};\r\n\r\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\r\n// Distributed under an MIT license: https://codemirror.net/LICENSE\r\n\r\nCodeMirror.defineSimpleMode(\"lcc\", {\r\n    // The start state contains the rules that are intially used\r\n\r\n    start: [\r\n        // The regex matches the token, the token property contains the type\r\n        {regex: /\"(?:[^\\\\]|\\\\.)*?(?:\"|$)/, token: \"string\"},\r\n        {regex: /'(?:[^\\\\]|\\\\.)*?(?:'|$)/, token: \"string\"},\r\n        {regex: /`/, token: \"string\", next: \"stringtpt\"},\r\n\r\n        // Rules are matched in the order in which they appear, so there is\r\n        // no ambiguity between this one and the one above\r\n        {\r\n            regex: keywordRegex(),\r\n            token: \"keyword\"\r\n        },\r\n        {regex: atomRegex(), token: \"atom\"},\r\n        {\r\n            regex: /\\d+\\.?\\d*/,\r\n            token: \"number\"\r\n        },\r\n        {regex: /\\/\\/.*/, token: \"comment\"},\r\n        // A next property will cause the mode to move to a different state\r\n        {regex: /\\/\\*/, token: \"comment\", next: \"comment\"},\r\n        {regex: /[+\\-*&^%:=<>~!|\\/]+/, token: \"operator\"},\r\n        // indent and dedent properties guide autoindentation\r\n        {regex: /[\\{\\[\\(]/, indent: true},\r\n        {regex: /[\\}\\]\\)]/, dedent: true},\r\n        {regex: /[A-Za-z_]+\\w*/, token: \"variable\"},\r\n    ],\r\n    // The multi-line comment state.\r\n    comment: [\r\n        {regex: /.*?\\*\\//, token: \"comment\", next: \"start\"},\r\n        {regex: /.*/, token: \"comment\"}\r\n    ],\r\n    stringtpt: [\r\n        {regex: /`/, token: \"string\", next: \"start\"},\r\n        {regex: /[^`]*/, token: \"string\"}\r\n    ],\r\n    // The meta property contains global information about the mode. It\r\n    // can contain properties like lineComment, which are supported by\r\n    // all modes, and also directives like dontIndentStates, which are\r\n    // specific to simple modes.\r\n    meta: {\r\n        dontIndentStates: [\"comment\", \"stringtpt\"],\r\n        lineComment: \"//\"\r\n    }\r\n});\r\n\r\nCodeMirror.defineMIME(\"text/x-lcc\", \"lcc\");\r\n\r\n","import {defaultParserErrorProvider, IToken, TokenType} from 'chevrotain';\r\n\r\nexport type IErrorType =\r\n    'TypeError'\r\n    | 'UnsupportedError'\r\n    | 'OperatorError'\r\n    | 'EvalError'\r\n    | 'ContextError'\r\n    | 'AssignmentError'\r\n    | 'DefinitionError'\r\n    | 'MutabilityError'\r\n    | 'ArithmeticError'\r\n    | 'AssertionError'\r\n    | 'HypothesisError'\r\n    | 'RangeError'\r\n    | 'ArrayError';\r\n\r\nexport interface IErrorData {\r\n    type: IErrorType;\r\n    token: IToken;\r\n}\r\n\r\ntype NotAllInputParsedOpts = {\r\n    firstRedundant: IToken;\r\n    ruleName: string;\r\n};\r\n\r\ntype BuildMismatchTokenOpts = {\r\n    expected: TokenType;\r\n    actual: IToken;\r\n    previous: IToken;\r\n    ruleName: string;\r\n};\r\n\r\ntype NoViableAltOpts = {\r\n    expectedPathsPerAlt: TokenType[][][]\r\n    actual: IToken[]\r\n    previous: IToken\r\n    customUserDescription: string\r\n    ruleName: string\r\n};\r\n\r\ntype EarlyExitOpts = {\r\n    expectedIterationPaths: TokenType[][]\r\n    actual: IToken[]\r\n    previous: IToken\r\n    customUserDescription: string\r\n    ruleName: string\r\n};\r\n\r\nexport class InterpreterJSError extends Error {\r\n\r\n    public static create(msg: string, type: IErrorType, token: IToken): InterpreterJSError {\r\n        return new InterpreterJSError(msg, {type, token: token});\r\n    }\r\n\r\n    // Assignment, definition and evaluation\r\n\r\n    public static createVarDoesNotExist(id: string, token: IToken): InterpreterJSError {\r\n        return new InterpreterJSError(`A variable with id '${id}' does not exist.`, {\r\n            type: 'DefinitionError',\r\n            token: token\r\n        });\r\n    }\r\n\r\n    public static createVarAlreadyExists(id: string, token: IToken): InterpreterJSError {\r\n        return new InterpreterJSError(`A variable with id '${id}' already exists.`, {\r\n            type: 'DefinitionError',\r\n            token: token\r\n        });\r\n    }\r\n\r\n    public static createReservedName(id: string, token: IToken): InterpreterJSError {\r\n        return new InterpreterJSError(`'${id}' is a reserved name.`, {type: 'DefinitionError', token: token});\r\n    }\r\n\r\n    // General\r\n\r\n    public static createOpNotRecognized(op: string, symbs: string, token: IToken): InterpreterJSError {\r\n        return new InterpreterJSError(`(BUG) '${op}' operation not recognized: ${symbs}.`, {\r\n            type: 'OperatorError',\r\n            token: token\r\n        });\r\n    }\r\n\r\n    public static createOpNotSupportedForType(op: string, type: string, token: IToken): InterpreterJSError {\r\n        return new InterpreterJSError(`'${op}' operation is not supported for type: ${type}.`, {\r\n            type: 'OperatorError',\r\n            token: token\r\n        });\r\n    }\r\n\r\n    public readonly data: IErrorData;\r\n\r\n    constructor(msg: string, data: IErrorData) {\r\n        super(msg);\r\n        this.data = data;\r\n    }\r\n}\r\n\r\n// Need to clean this up.\r\nexport const LMParserErrorProvider = {\r\n\r\n    buildMismatchTokenMessage: function (options: BuildMismatchTokenOpts) {\r\n        switch (options.expected.name) {\r\n        case 'ID':\r\n            if (options.ruleName === 'hypDeclaration') {\r\n                return `Missing or malformed variable name in 'hyp' declaration on line '${options.previous.startLine}'.`;\r\n            } else if (options.ruleName === 'ruleDeclaration') {\r\n                return `Missing or malformed variable name in 'rule' declaration on line '${options.previous.startLine}'.`;\r\n            } else if (options.ruleName === 'solverStatement') {\r\n                if (options.previous.image === 'solver') {\r\n                    // Solver statement is tested first, and they look the same up to the third token.\r\n                    return `Missing or malformed solver variable name in 'solver' declaration on line '${options.previous.startLine}'.`;\r\n                } else if (options.previous.image === 'apply' || options.previous.image === 'omit') {\r\n                    // Solver statement is tested first, and they look the same up to the third token.\r\n                    return `Missing or malformed rule variable name in 'solver' declaration on line '${options.previous.startLine}'.`;\r\n                }\r\n            } else if (options.ruleName === 'compareStatement') {\r\n                if (options.previous.image === 'sim') {\r\n                    // Solver statement is tested first, and they look the same up to the third token.\r\n                    return `Missing or malformed solver variable name in 'compare' declaration on line '${options.previous.startLine}'.`;\r\n                } else {\r\n                    // Solver statement is tested first, and they look the same up to the third token.\r\n                    return `Missing or malformed solver variable name in 'compare' declaration on line '${options.previous.startLine}'.`;\r\n                }\r\n            }\r\n            break;\r\n        case 'Def':\r\n            return `Missing or malformed '=' in rule declaration on line '${options.previous.startLine}'. A rule must be on the form 'hyp X = ... ' where 'X' is the name, e.g. 'rule MyRule = ...'.`;\r\n        case 'QUOTED_STRING':\r\n            if (options.ruleName === 'hypDeclaration') {\r\n                if (options.previous.tokenType.name === 'ID') {\r\n                    return `Missing or malformed first quoted string parameter (positive statement) in 'hyp' statement on line ${options.previous.startLine}.`;\r\n                } else {\r\n                    return `Missing or malformed second quoted string parameter (negative statement) in 'hyp' statement on line ${options.previous.startLine}.`;\r\n                }\r\n            }\r\n            break;\r\n        case 'MoralLit':\r\n            return `Missing 'good' or 'bad' in rule declaration on line '${options.previous.startLine}'.`;\r\n        default:\r\n        }\r\n        return defaultParserErrorProvider.buildMismatchTokenMessage(options);\r\n    },\r\n\r\n    buildNotAllInputParsedMessage: function (options: NotAllInputParsedOpts) {\r\n        switch (options.firstRedundant.image) {\r\n        case 'hyp':\r\n            return `unexpected 'hyp'. Rule declarations must be between hyp declarations and solver declarations.`;\r\n        case 'rule':\r\n            return `unexpected 'rule'. Rule declarations must be between hyp declarations and solver declarations.`;\r\n        case 'solver':\r\n            return `unexpected 'solver'. Solver statements must be between rule declarations and comparisons, and solver declarations must come before solver statements.`;\r\n        case 'compare':\r\n            return `unexpected 'solver'. Solver statements must be between rule declarations and comparisons, and solver declarations must come before solver statements.`;\r\n        default:\r\n        }\r\n\r\n        return defaultParserErrorProvider.buildNotAllInputParsedMessage(options);\r\n    },\r\n\r\n    buildNoViableAltMessage: function (options: NoViableAltOpts) {\r\n        if (options.previous) {\r\n            switch (options.previous.tokenType.name) {\r\n            case 'Def':\r\n                return `Error in rule declaration on line '${options.previous.startLine}'. Rule declarations must be on the form 'rule <name> = <logic>' where logic is a formula.`;\r\n            case 'ID':\r\n                if (options.ruleName === 'solverStatement') {\r\n                    return `Error in solver declaration on line '${options.previous.startLine}'. Solver statements must be on the form 'solver <name>' followed by a quoted string (in declarations) or a solver command (apply/omit/run/print). Additionally, solver declarations must come before solver statements.`;\r\n                }\r\n                break;\r\n            case 'Compare':\r\n                return `Error in comparison statement on line '${options.previous.startLine}'. 'compare' must be followed with a comparison keyword (e.g. 'sim').`;\r\n            default:\r\n            }\r\n        }\r\n        return defaultParserErrorProvider.buildNoViableAltMessage(options);\r\n    },\r\n\r\n    buildEarlyExitMessage: function (options: EarlyExitOpts) {\r\n        return defaultParserErrorProvider.buildEarlyExitMessage(options);\r\n    }\r\n\r\n};\r\n","import {\r\n    CstParser,\r\n    ILexingError,\r\n    IRecognitionException,\r\n    Lexer\r\n} from 'chevrotain';\r\n\r\nimport {\r\n    allTokens,\r\n    TAnd, TDef, TEq, TID, TImpl, TLParen,\r\n    TOr, TQUOTED_STRING, TRParen, TRule, TRun,\r\n    TSolver, TXor, TSim, TCompare, TDot, TBoolLit,\r\n    TIs, TMoralLit, THyp, TSolverRuleOP, TPrint\r\n} from './Tokens';\r\nimport {LMParserErrorProvider} from \"./Errors\";\r\n\r\nexport interface ParserResult {\r\n    cst: any;\r\n    lexErrors: ILexingError[];\r\n    parseErrors: IRecognitionException[];\r\n}\r\n\r\nconst LLexer = new Lexer(allTokens);\r\n\r\nexport default class Parser extends CstParser {\r\n    public static createParser(): Parser {\r\n        const parser = new Parser();\r\n        parser.performSelfAnalysis();\r\n        return parser;\r\n    }\r\n\r\n    private constructor() {\r\n        super(allTokens, {\r\n            errorMessageProvider: LMParserErrorProvider\r\n        });\r\n    }\r\n\r\n    private readonly parenthesizedExpression = this.RULE('parenthesizedExpression', () => {\r\n        this.CONSUME(TLParen);\r\n        this.SUBRULE(this.logicalImplExpression);\r\n        this.CONSUME(TRParen);\r\n    });\r\n\r\n    private readonly primaryExpression = this.RULE('primaryExpression', () => {\r\n        this.OR([\r\n            {\r\n                ALT: () => {\r\n                    this.CONSUME(TID);\r\n                    this.OPTION(() => {\r\n                        this.CONSUME(TDot);\r\n                        this.CONSUME(TBoolLit);\r\n                    });\r\n                }\r\n            },\r\n            {ALT: () => this.SUBRULE(this.parenthesizedExpression)}\r\n        ]);\r\n    });\r\n\r\n    private readonly logicalANDExpression = this.RULE('logicalANDExpression', () => {\r\n        this.SUBRULE(this.primaryExpression);\r\n        this.MANY(() => {\r\n            this.CONSUME(TAnd);\r\n            this.SUBRULE2(this.primaryExpression);\r\n        });\r\n    });\r\n\r\n    private readonly logicalXORExpression = this.RULE('logicalXORExpression', () => {\r\n        this.SUBRULE(this.logicalANDExpression);\r\n        this.MANY(() => {\r\n            this.CONSUME(TXor);\r\n            this.SUBRULE2(this.logicalANDExpression);\r\n        });\r\n    });\r\n\r\n    private readonly logicalORExpression = this.RULE('logicalORExpression', () => {\r\n        this.SUBRULE(this.logicalXORExpression);\r\n        this.MANY(() => {\r\n            this.CONSUME(TOr);\r\n            this.SUBRULE2(this.logicalXORExpression);\r\n        });\r\n    });\r\n\r\n    private readonly logicalEQExpression = this.RULE('logicalEQExpression', () => {\r\n        this.SUBRULE(this.logicalORExpression);\r\n        this.MANY(() => {\r\n            this.CONSUME(TEq);\r\n            this.SUBRULE2(this.logicalORExpression);\r\n        });\r\n    });\r\n\r\n    private readonly logicalImplExpression = this.RULE('logicalImplExpression', () => {\r\n        this.SUBRULE(this.logicalEQExpression);\r\n        this.MANY(() => {\r\n            this.CONSUME(TImpl);\r\n            this.SUBRULE2(this.logicalEQExpression);\r\n        });\r\n    });\r\n\r\n    private readonly hypDeclaration = this.RULE('hypDeclaration', () => {\r\n        this.CONSUME(THyp);\r\n        this.CONSUME(TID);\r\n        this.CONSUME(TQUOTED_STRING);\r\n        this.CONSUME2(TQUOTED_STRING);\r\n    });\r\n\r\n    private readonly ruleDeclaration = this.RULE('ruleDeclaration', () => {\r\n        this.CONSUME(TRule);\r\n        this.CONSUME(TID);\r\n        this.CONSUME(TDef);\r\n        this.SUBRULE(this.logicalImplExpression);\r\n        this.OPTION(() => {\r\n            this.CONSUME(TIs);\r\n            this.CONSUME(TMoralLit);\r\n        });\r\n    });\r\n\r\n    private readonly solverDeclaration = this.RULE('solverDeclaration', () => {\r\n        this.CONSUME(TSolver);\r\n        this.CONSUME(TID);\r\n        this.CONSUME(TQUOTED_STRING);\r\n    });\r\n\r\n    private readonly solverStatement = this.RULE('solverStatement', () => {\r\n        this.CONSUME(TSolver);\r\n        this.CONSUME(TID);\r\n        this.OR([\r\n            {\r\n                ALT: () => {\r\n                    this.CONSUME(TSolverRuleOP);\r\n                    this.CONSUME2(TID);\r\n                }\r\n            },\r\n            {\r\n                ALT: () => {\r\n                    this.CONSUME(TRun);\r\n                }\r\n            },\r\n            {\r\n                ALT: () => {\r\n                    this.CONSUME(TPrint);\r\n                }\r\n            }\r\n        ]);\r\n\r\n    });\r\n\r\n    private readonly compareStatement = this.RULE('compareStatement', () => {\r\n        this.CONSUME(TCompare);\r\n        this.OR([\r\n            {ALT: () => this.CONSUME(TSim)}\r\n        ]);\r\n        this.CONSUME(TID);\r\n        this.CONSUME2(TID);\r\n    });\r\n\r\n    private readonly program = this.RULE('program', () => {\r\n\r\n        this.MANY(() => {\r\n            this.SUBRULE(this.hypDeclaration);\r\n        });\r\n\r\n        this.MANY2(() => {\r\n            this.SUBRULE(this.ruleDeclaration);\r\n        });\r\n\r\n        this.MANY3(() => {\r\n            this.SUBRULE(this.solverDeclaration);\r\n        });\r\n\r\n        this.MANY4(() => {\r\n            this.SUBRULE(this.solverStatement);\r\n        });\r\n\r\n        this.MANY5(() => {\r\n            this.SUBRULE(this.compareStatement);\r\n        });\r\n\r\n    });\r\n\r\n    parse(script: string): ParserResult {\r\n        const lexResult = LLexer.tokenize(script);\r\n\r\n        // setting a new input will RESET the parser instance's state.\r\n        this.input = lexResult.tokens;\r\n\r\n        // any top level rule may be used as an entry point\r\n        const cst = this.program();\r\n\r\n        return {\r\n            cst: cst,\r\n            lexErrors: lexResult.errors,\r\n            parseErrors: parser.errors\r\n        };\r\n    }\r\n}\r\n\r\nexport const parser = Parser.createParser();\r\n","import {ResultDataSolver} from \"./Interpreter\";\r\nimport {Operand, Operands, Solution} from \"logic-solver\";\r\n\r\nexport type RuleType = 'neutral' | 'moral' | 'undiff';\r\n\r\nexport type TypeID = 'hyp' | 'rule' | 'solver';\r\n\r\nexport type VariableBase = {\r\n    readonly id: string;\r\n}\r\n\r\nexport type HypVariable = {\r\n    readonly type: 'hyp';\r\n    readonly meta: [string, string];\r\n} & VariableBase;\r\n\r\nexport type RuleVariable = {\r\n    readonly type: 'rule';\r\n    readonly data: Operand;\r\n} & VariableBase;\r\n\r\nexport type SolverResult = {\r\n    solverRes: Solution;\r\n    solverCon: Solution;\r\n    results: ResultDataSolver\r\n};\r\n\r\nexport type SolverVariable = {\r\n    readonly type: 'solver';\r\n    readonly meta: string;\r\n    rules: Operands[];\r\n    pruned: Operands[];\r\n    solverResult: SolverResult | undefined;\r\n} & VariableBase;\r\n\r\nexport type Variable = HypVariable | RuleVariable | SolverVariable;\r\n\r\nexport const createHypVar = (id: string, meta: [string, string]): HypVariable => {\r\n    return {\r\n        id,\r\n        type: 'hyp',\r\n        meta\r\n    };\r\n};\r\n\r\nexport const createRuleVar = (id: string, data: Operand): RuleVariable => {\r\n    return {\r\n        id,\r\n        type: 'rule',\r\n        data\r\n    };\r\n};\r\n\r\nexport const createSolverVar = (id: string, meta: string): SolverVariable => {\r\n    return {\r\n        id,\r\n        type: 'solver',\r\n        meta,\r\n        rules: [],\r\n        pruned: [],\r\n        solverResult: undefined\r\n    };\r\n};\r\n\r\nexport const ruleFromVar = (vari: Variable): Operand => {\r\n    if (vari.type === 'hyp') {\r\n        return vari.id;\r\n    } else if (vari.type === 'rule') {\r\n        return vari.data;\r\n    } else {\r\n        throw new Error(`BUG: Variable ${vari.id} is not an atom or rule variable.`);\r\n    }\r\n};\r\n","/* eslint @typescript-eslint/no-explicit-any: 0 */\r\n/* eslint @typescript-eslint/explicit-module-boundary-types: 0 */\r\nimport {parser} from './Parser';\r\n\r\nimport {IToken} from 'chevrotain';\r\nimport {keywordSet} from './Tokens';\r\nimport {InterpreterJSError} from './Errors';\r\nimport {\r\n    createHypVar,\r\n    createRuleVar,\r\n    createSolverVar, HypVariable,\r\n    ruleFromVar, RuleVariable,\r\n    SolverVariable,\r\n    Variable\r\n} from \"./Variable\";\r\n\r\nimport Logic from 'logic-solver';\r\n\r\nexport type IMessageType = 'warning' | 'error' | 'solver';\r\nexport type IErrorCType = 'LexerError' | 'ParserError' | 'InterpreterError' | 'JSError';\r\n\r\n// Returned from interpret method.\r\nexport interface InterpreterResult {\r\n    ret: boolean;\r\n    messages: ConsoleMessage[];\r\n    solverResults: ResultDataSolver[];\r\n    compResults: ResultDataComp[];\r\n}\r\n\r\n// A console message. Returned in interpret method.\r\nexport interface ConsoleMessage {\r\n    type: IMessageType;\r\n    message: string;\r\n    eType?: IErrorCType;\r\n    subType?: string;\r\n    line?: number;\r\n    lineOffset?: number;\r\n    column?: number;\r\n}\r\n\r\n// Comparisons. Only supports 'similarity' atm.\r\nexport type CompDataTypeID = 'similarity';\r\n\r\n// Result from running a solver.\r\nexport type ResultDataSolver = {\r\n    solverID: string;\r\n    solverMeta: string;\r\n    hyps: [string, string, string][];\r\n    numHyps: number;\r\n    numCases: number;\r\n    goodStates: string[][];\r\n    neutralStates: string[][];\r\n    badStates: string[][];\r\n    formulaRes: any;\r\n    formulaCon: any;\r\n    aLevel: [number, number];\r\n    mBalance: [number, number] | undefined;\r\n    mEntropy: number | undefined;\r\n    mEntropyNorm: number | undefined;\r\n    mEntropyScale: [number, number] | undefined;\r\n};\r\n\r\n// Result from running a comparison.\r\nexport type ResultDataComp = {\r\n    subtype: CompDataTypeID;\r\n    solverID1: string;\r\n    solverMeta1: string;\r\n    solverID2: string;\r\n    solverMeta2: string;\r\n    goodStates: string[][];\r\n    badStates: string[][];\r\n    neutralStates: string[][];\r\n};\r\n\r\n// Dummy token for errors.\r\nexport const dummyToken = {\r\n    image: '',\r\n    startOffset: 0,\r\n    startLine: 0,\r\n    startColumn: 0,\r\n    endOffset: 0,\r\n    endLine: 0,\r\n    endColumn: 0,\r\n    isInsertedInRecovery: false,\r\n    tokenTypeIdx: 0,\r\n    tokenType: {\r\n        name: 'dummy'\r\n    }\r\n};\r\n\r\nconst SC_NAMES = [\r\n    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',\r\n    'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T',\r\n    'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd'\r\n];\r\n\r\n// For aborting the execution of a solver.\r\nexport class ExecutionController {\r\n    public aborted = false;\r\n}\r\n\r\nconst BaseCstVisitor = parser.getBaseCstVisitorConstructor();\r\n\r\nexport default class Interpreter extends BaseCstVisitor {\r\n\r\n    private _keywords: ReadonlySet<string> = keywordSet();\r\n    private _varTable: Map<string, Variable> = new Map();\r\n    private _hyps: HypVariable[] = [];\r\n    private _po2: number[] = [];\r\n\r\n    private _solverResults: ResultDataSolver[] = [];\r\n    private _compResults: ResultDataComp[] = [];\r\n\r\n    private _consoleMessages: ConsoleMessage[] = [];\r\n\r\n    private _ec: ExecutionController = new ExecutionController();\r\n\r\n    constructor() {\r\n        super();\r\n        // This helper will detect any missing or redundant methods on this visitor\r\n        this.validateVisitor();\r\n    }\r\n\r\n    parenthesizedExpression(ctx: any): RuleVariable {\r\n        return this.visit(ctx.logicalImplExpression[0]) as RuleVariable;\r\n    }\r\n\r\n    primaryExpression(ctx: any): RuleVariable {\r\n        // A hypothetical or a rule\r\n        if (ctx.ID !== undefined) {\r\n            const token = this._getToken(ctx.ID[0]);\r\n            const id = token.image;\r\n            const vari = this.getVariable(id);\r\n            if (vari === undefined) {\r\n                throw InterpreterJSError.createVarDoesNotExist(id, token);\r\n            } else {\r\n                // Must be 'rule' or 'hyp'\r\n                if (vari.type !== 'rule' && vari.type !== 'hyp') {\r\n                    throw InterpreterJSError.create(`Variable ${vari.id} is not a rule or a hypothetical.`, 'TypeError', token);\r\n                }\r\n                // If there is member access, i.e. \"var.member\".\r\n                if (ctx.BoolLit !== undefined) {\r\n                    const bToken = this._getToken(ctx.BoolLit[0]);\r\n                    const bStr = bToken.image;\r\n\r\n                    // This means \"P.pos or P.neg\".\r\n                    if (bStr === 'either') {\r\n                        // We turn the variable into a rule variable, meaning hypotheticals will be converted.\r\n                        // Same in all cases here.\r\n                        const ruleData = ruleFromVar(vari);\r\n                        return createRuleVar('', Logic.or(ruleData, Logic.not(ruleData)));\r\n                    } else if (bStr === 'false' || bStr === 'neg') {\r\n                        return createRuleVar('', Logic.not(ruleFromVar(vari)));\r\n                    } else {\r\n                        // 'pos' or 'true'\r\n                        return createRuleVar('', ruleFromVar(vari));\r\n                    }\r\n                } else {\r\n                    // Defaults to pos/true.\r\n                    return createRuleVar('', ruleFromVar(vari));\r\n                }\r\n            }\r\n        } else {\r\n            // Parenthesized expression is the only choice other than a variable ID.\r\n            return this.visit(ctx.parenthesizedExpression[0]) as RuleVariable;\r\n        }\r\n    }\r\n\r\n    logicalANDExpression(ctx: any): RuleVariable {\r\n        // Get the first variable.\r\n        const vari = this.visit(ctx.primaryExpression[0]) as RuleVariable;\r\n        // If there is at least one 'and', we gather all variables and 'and's and evaluate.\r\n        if (ctx.And !== undefined) {\r\n            // const token = this._getToken(ctx.And[0]);\r\n            // for keeping all operands (Logic objects and variable names).\r\n            const data = [];\r\n            data.push(ruleFromVar(vari));\r\n            for (let i = 0; i < ctx.And.length; i++) {\r\n                // Get all variables and push the rule to the array.\r\n                const vari2 = this.visit(ctx.primaryExpression[i + 1]) as RuleVariable;\r\n                data.push(ruleFromVar(vari2));\r\n            }\r\n            // Take all data and pass it to a Logic object.\r\n            return createRuleVar('', Logic.and(data));\r\n        } else {\r\n            return vari;\r\n        }\r\n    }\r\n\r\n    logicalXORExpression(ctx: any): RuleVariable {\r\n        // See docs for 'and'\r\n        const vari = this.visit(ctx.logicalANDExpression[0]) as RuleVariable;\r\n        if (ctx.XOr !== undefined) {\r\n            // const token = this._getToken(ctx.XOr[0]);\r\n            const data = [];\r\n            data.push(ruleFromVar(vari));\r\n            for (let i = 0; i < ctx.XOr.length; i++) {\r\n                const vari2 = this.visit(ctx.logicalANDExpression[i + 1]) as RuleVariable;\r\n                data.push(ruleFromVar(vari2));\r\n            }\r\n            return createRuleVar('', Logic.xor(data));\r\n        } else {\r\n            return vari;\r\n        }\r\n    }\r\n\r\n    logicalORExpression(ctx: any): RuleVariable {\r\n        // See docs for 'and'\r\n        const vari = this.visit(ctx.logicalXORExpression[0]) as RuleVariable;\r\n        if (ctx.Or !== undefined) {\r\n            // const token = this._getToken(ctx.Or[0]);\r\n            const data = [];\r\n            data.push(ruleFromVar(vari));\r\n            for (let i = 0; i < ctx.Or.length; i++) {\r\n                const vari2 = this.visit(ctx.logicalXORExpression[i + 1]) as RuleVariable;\r\n                data.push(ruleFromVar(vari2));\r\n            }\r\n            return createRuleVar('', Logic.or(data));\r\n        } else {\r\n            return vari;\r\n        }\r\n    }\r\n\r\n    logicalEQExpression(ctx: any): RuleVariable {\r\n        // See docs for 'and'\r\n        let vari = this.visit(ctx.logicalORExpression[0]) as RuleVariable;\r\n        if (ctx.Eq !== undefined) {\r\n            // const token = this._getToken(ctx.Eq[0]);\r\n            for (let i = 0; i < ctx.Eq.length; i++) {\r\n                const vari2 = this.visit(ctx.logicalORExpression[i + 1]) as RuleVariable;\r\n                vari = createRuleVar('', Logic.equiv(vari.data, vari2.data));\r\n            }\r\n        }\r\n        return vari;\r\n    }\r\n\r\n    logicalImplExpression(ctx: any): RuleVariable {\r\n        // See docs for 'and', except we do these as nested \"(((A -> B) -> C) -> ... ) \".\r\n        let vari = this.visit(ctx.logicalEQExpression[0]) as RuleVariable;\r\n        if (ctx.Impl !== undefined) {\r\n            // const token = this._getToken(ctx.Impl[0]);\r\n            for (let i = 0; i < ctx.Impl.length; i++) {\r\n                const vari2 = this.visit(ctx.logicalEQExpression[i + 1]) as RuleVariable;\r\n                vari = createRuleVar('', Logic.implies(vari.data, vari2.data));\r\n            }\r\n        }\r\n        return vari;\r\n    }\r\n\r\n    hypDeclaration(ctx: any): void {\r\n        // Get the variable ID and check that it does not already exist.\r\n        const varIdToken = this._getToken(ctx.ID[0]);\r\n        const varId = varIdToken.image;\r\n        // The string for when the hypothetical is true\r\n        const metaToken = this._getToken(ctx.QUOTED_STRING[0]);\r\n        const meta = metaToken.image;\r\n        if (meta === '\"\"') {\r\n            throw InterpreterJSError.create(`The quoted strings in 'hyp' declarations must not be empty.`, 'DefinitionError', varIdToken);\r\n        }\r\n        // The string for when the hypothetical is false\r\n        const metaToken2 = this._getToken(ctx.QUOTED_STRING[1]);\r\n        const meta2 = metaToken2.image;\r\n        if (meta2 === '\"\"') {\r\n            throw InterpreterJSError.create(`The quoted strings in 'hyp' declarations must not be empty.`, 'DefinitionError', varIdToken);\r\n        }\r\n        // Check that the variable id is available.\r\n        this._checkVarName(varId, varIdToken);\r\n        // Add to variable table.\r\n        this.addVariable(varId, createHypVar(varId, [meta.slice(1, -1), meta2.slice(1, -1)]));\r\n    }\r\n\r\n    ruleDeclaration(ctx: any): void {\r\n        // Get the variable ID and check that it does not already exist.\r\n        const idToken = this._getToken(ctx.ID[0]);\r\n        const id = idToken.image;\r\n        this._checkVarName(id, idToken);\r\n        // Get the logical expression (everything after the '=' sign until optional 'is good/bad')\r\n        let vari = this.visit(ctx.logicalImplExpression[0]) as RuleVariable;\r\n        // If there is an 'is good' or 'is bad'.\r\n        if (ctx.MoralLit !== undefined) {\r\n            const mlToken = this._getToken(ctx.MoralLit[0]);\r\n            const ml = mlToken.image;\r\n            if (ml === 'bad') {\r\n                // Negate the rule.\r\n                vari = createRuleVar(vari.id, Logic.not(vari.data));\r\n            }\r\n            // 'is good' changes nothing.\r\n        } else {\r\n            // defaults to 'is good'.\r\n            vari = createRuleVar(vari.id, vari.data);\r\n        }\r\n        // Add to variable table.\r\n        this.addVariable(id, vari);\r\n    }\r\n\r\n    solverDeclaration(ctx: any): void {\r\n        // Get the variable ID and check that it does not already exist.\r\n        const varIdToken = this._getToken(ctx.ID[0]);\r\n        const varId = varIdToken.image;\r\n        // The description of the solver (as a quoted string).\r\n\r\n        const metaToken = this._getToken(ctx.QUOTED_STRING[0]);\r\n        const meta = metaToken.image;\r\n\r\n        // Check that the variable id is available.\r\n        this._checkVarName(varId, varIdToken);\r\n        this.addVariable(varId, createSolverVar(varId, meta.slice(1, -1)));\r\n    }\r\n\r\n    solverStatement(ctx: any): void {\r\n        // Get variable and make sure it is of type solver.\r\n        const idToken = this._getToken(ctx.ID[0]);\r\n        const id = idToken.image;\r\n        const sVari = this.getVariable(id);\r\n        if (sVari === undefined) {\r\n            throw InterpreterJSError.createVarDoesNotExist(id, idToken);\r\n        }\r\n        if (sVari.type !== 'solver') {\r\n            throw InterpreterJSError.create(`Variable ${sVari.id} is not a solver.`, 'TypeError', idToken);\r\n        }\r\n        // If the command is either 'apply' or 'omit', meaning it relates to a rule.\r\n        if (ctx.SolverRuleOP !== undefined) {\r\n            // Get var and check that it is a rule.\r\n            const ruleOP = this._getToken(ctx.SolverRuleOP[0]).image;\r\n            const idToken2 = this._getToken(ctx.ID[1]);\r\n            const id2 = idToken2.image;\r\n            const rVari = this.getVariable(id2);\r\n            if (rVari === undefined) {\r\n                throw InterpreterJSError.createVarDoesNotExist(id2, idToken2);\r\n            }\r\n            if (rVari.type !== 'rule') {\r\n                throw InterpreterJSError.create(`Variable ${rVari.id} is not a rule.`, 'TypeError', idToken2);\r\n            }\r\n            // If it is 'apply', add the rule to 'rules', otherwise for 'omit' add it to 'pruned'.\r\n            if (ruleOP === 'apply') {\r\n                sVari.rules.push(rVari.data);\r\n            } else {\r\n                sVari.pruned.push(rVari.data);\r\n            }\r\n        } else if (ctx.Run !== undefined) {\r\n            // Run.\r\n            this._runSolver(sVari, idToken);\r\n        } else if (ctx.Print !== undefined) {\r\n            // If the command is 'print', make sure that the solver has been run first,\r\n            // so there is something to print.\r\n            const res = sVari.solverResult;\r\n            if (res === undefined) {\r\n                throw InterpreterJSError.create(`Variable ${sVari.id} has no results. It must be run first: 'solver ${sVari.id} run'.`, 'TypeError', idToken);\r\n            }\r\n            // If the solver has been run, push the results to the result list.\r\n            this._solverResults.push(res.results);\r\n        }\r\n    }\r\n\r\n    compareStatement(ctx: any): void {\r\n        // Get first variable. Check that it exists, that the variable is a solver,\r\n        // and that the solutions has been computed.\r\n        const idToken = this._getToken(ctx.ID[0]);\r\n        const id = idToken.image;\r\n        const sVari = this.getVariable(id);\r\n        if (sVari === undefined) {\r\n            throw InterpreterJSError.createVarDoesNotExist(id, idToken);\r\n        }\r\n        if (sVari.type !== 'solver') {\r\n            throw InterpreterJSError.create(`Variable ${sVari.id} is not a solver.`, 'TypeError', idToken);\r\n        }\r\n        if (sVari.solverResult === undefined) {\r\n            throw InterpreterJSError.create(`Variable ${sVari.id} has no results, it must be run: 'solver ${sVari.id} run'.`, 'TypeError', idToken);\r\n        }\r\n\r\n        // Same thing for second variable.\r\n        const idToken2 = this._getToken(ctx.ID[1]);\r\n        const id2 = idToken2.image;\r\n        const sVari2 = this.getVariable(id2);\r\n        if (sVari2 === undefined) {\r\n            throw InterpreterJSError.createVarDoesNotExist(id2, idToken2);\r\n        }\r\n        if (sVari2.type !== 'solver') {\r\n            throw InterpreterJSError.create(`Variable ${sVari2.id} is not a solver.`, 'TypeError', idToken);\r\n        }\r\n        if (sVari2.solverResult === undefined) {\r\n            throw InterpreterJSError.create(`Variable ${sVari2.id} has no results. It must be run first: 'solver ${sVari2.id} run'.`, 'TypeError', idToken2);\r\n        }\r\n\r\n        // Solver variable names and meta.\r\n        const solverID1 = sVari.id;\r\n        const solverMeta1 = sVari.meta;\r\n        const solverID2 = sVari2.id;\r\n        const solverMeta2 = sVari2.meta;\r\n\r\n        // Subtype, e.g. 'similarity', 'difference' (only 'similarity' works for now).\r\n        let subtype: CompDataTypeID = 'similarity';\r\n\r\n        // The results from each solver.\r\n        const results = sVari.solverResult.results;\r\n        const results2 = sVari2.solverResult.results;\r\n\r\n        // if it is a 'similarity' (which it must be for now).\r\n        if (ctx.Sim !== undefined) {\r\n            subtype = 'similarity';\r\n\r\n            // Get all the good, bad, and netural states that are common to both solvers.\r\n            const goodStates = getArrsByComp(results.goodStates, results2.goodStates, arrsAreEqual);\r\n            const badStates = getArrsByComp(results.badStates, results2.badStates, arrsAreEqual);\r\n            const neutralStates = getArrsByComp(results.neutralStates, results2.neutralStates, arrsAreEqual);\r\n\r\n            // push the data to the comparison list.\r\n            this._compResults.push({\r\n                subtype,\r\n                solverID1,\r\n                solverMeta1,\r\n                solverID2,\r\n                solverMeta2,\r\n                goodStates,\r\n                badStates,\r\n                neutralStates\r\n            });\r\n        } else {\r\n            throw InterpreterJSError.create(`The only supported comparison type is similarity ('sim').`, 'UnsupportedError', idToken);\r\n        }\r\n    }\r\n\r\n    program(ctx: any): void {\r\n        // Get all hyp declarations and process them.\r\n        if (ctx.hypDeclaration !== undefined) {\r\n            for (let i = 0; i < ctx.hypDeclaration.length; i++) {\r\n                this.visit(ctx.hypDeclaration[i]);\r\n            }\r\n\r\n            // Create an array of all hyp variables for quick access.\r\n            const hyps = [];\r\n            for (const [key, val] of this._varTable) {\r\n                if (val.type === 'hyp') {\r\n                    hyps.push(val);\r\n                }\r\n            }\r\n\r\n            // Very unlikely that someone will use 30+ hypotheticals, and Bigints are annoying\r\n            // and slow, and doesn't go well with typescript, so we will restrict this to 30 hyps\r\n            // for now so that we can use safe bit operations.\r\n            // More notes about this in the methods 'this._runSolver' and\r\n            // 'this._computeAndAddResults' below.\r\n            if (hyps.length > 30) {\r\n                throw InterpreterJSError.create(`The maximum number of hypotheticals supported is 30`, 'UnsupportedError', dummyToken);\r\n            }\r\n\r\n            this._hyps = hyps;\r\n            const numHyps = hyps.length;\r\n            // Create power-of-two array for doing some math later on.\r\n            const po2: number[] = new Array(numHyps);\r\n            for (let i = 0; i < numHyps; i++) {\r\n                po2[i] = 1 << i;\r\n            }\r\n            this._po2 = po2;\r\n        } else {\r\n            // If there are no hyps, the system will not work.\r\n            throw InterpreterJSError.create(`A system must consist of at least one hypothetical.`, 'EvalError', dummyToken);\r\n        }\r\n\r\n        // Rule declarations.\r\n        if (ctx.ruleDeclaration !== undefined) {\r\n            for (let i = 0; i < ctx.ruleDeclaration.length; i++) {\r\n                this.visit(ctx.ruleDeclaration[i]);\r\n            }\r\n        }\r\n\r\n        // Solver declarations\r\n        if (ctx.solverDeclaration !== undefined) {\r\n            for (let i = 0; i < ctx.solverDeclaration.length; i++) {\r\n                this.visit(ctx.solverDeclaration[i]);\r\n            }\r\n        }\r\n\r\n        // Solver statements ('solver run', 'solver apply', etc.)\r\n        if (ctx.solverStatement !== undefined) {\r\n            for (let i = 0; i < ctx.solverStatement.length; i++) {\r\n                this.visit(ctx.solverStatement[i]);\r\n            }\r\n        }\r\n\r\n        // Comparison statements.\r\n        if (ctx.compareStatement !== undefined) {\r\n            for (let i = 0; i < ctx.compareStatement.length; i++) {\r\n                this.visit(ctx.compareStatement[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Run a solver. TODO split up better\r\n    _runSolver(vari: SolverVariable, token: IToken): void {\r\n        // Check that it hasn't already been run.\r\n        if (vari.solverResult !== undefined) {\r\n            throw InterpreterJSError.create(`Solver '${vari.id}' has already been run.`, 'OperatorError', token);\r\n        }\r\n        console.log(vari.rules.length);\r\n        // Check that at least one rule has been applied.\r\n        if (vari.rules.length === 0) {\r\n            throw InterpreterJSError.create(`Solver '${vari.id}' has no applied rules.`, 'OperatorError', token);\r\n        }\r\n        // Instantiate two Solvers\r\n        const solverRes = new Logic.Solver();\r\n        const solverCon = new Logic.Solver();\r\n\r\n        // Add the list of rules.\r\n        for (let i = 0; i < vari.rules.length; i++) {\r\n            const rule = vari.rules[i];\r\n            solverRes.require(rule);\r\n        }\r\n\r\n        // If there are any neutral rules, load up the neutral solver as well.\r\n        if (vari.pruned.length > 0) {\r\n            for (let i = 0; i < vari.pruned.length; i++) {\r\n                const rule = vari.pruned[i];\r\n                solverCon.require(rule);\r\n            }\r\n        }\r\n\r\n        // First run the solver for the good/bad solutions unconstrained.\r\n        const solutionsRes = solve(solverRes, this._ec);\r\n        // TODO\r\n        if (this._ec.aborted) {\r\n            throw InterpreterJSError.create(`Execution of solver aborted`, 'EvalError', token);\r\n        }\r\n        // The run the one for the neutral constraints.\r\n        let solutionsCon: Set<string>[] = [];\r\n        if (vari.pruned.length > 0) {\r\n            solutionsCon = solve(solverCon, this._ec);\r\n        }\r\n\r\n        // TODO\r\n        if (this._ec.aborted) {\r\n            throw InterpreterJSError.create(`Execution of solver aborted`, 'EvalError', token);\r\n        }\r\n\r\n        // Now we figure out what the good solutions are within the given constraints.\r\n        // To get full information about which solutions are removed by the neutral\r\n        // rules we ran two solvers:\r\n        // 'solutionsRes' was run with the normal rules.\r\n        // 'solutionsCon' was run with the neutral rules.\r\n        //\r\n        // The reason is that if we ran it with normal rules using 'Solver.require' and added\r\n        // the neutral constraints using 'Solver.forbid' and we would not know how many\r\n        // states are actually neutral, and how many good/bad rules were actually filtered\r\n        // out by the neutral rules.\r\n        //\r\n        // By running a solver with the neutral rules only, we find all the states (solutions)\r\n        // that are produced by those rules. The set of those solutions we can call 'N'.\r\n        // Then we run a solver with the normal rules and see what those states are: 'R'.\r\n        // The good states that would be filtered out by the neutral states must then be the\r\n        // intersection of those two sets, meaning the good states that would remain after\r\n        // filtering is: 'G = R \\ (R ∩ N)'\r\n        // Finally, if the set of all possible states is 'U' we get the bad states as: 'B = U \\ G \\ N'\r\n        // (G and N always being disjoint because of how 'G' is computed).\r\n        //\r\n        // Some of these computations are done in this method, and some in a method that this\r\n        // method calls in turn.\r\n\r\n        let goodSolutions: Set<string>[] = [];\r\n\r\n        // If there are no neutral solutions, the good states will be\r\n        // exactly those produced from 'solutionsRes'.\r\n        if (solutionsCon.length === 0) {\r\n            goodSolutions = solutionsRes;\r\n        } else {\r\n            // Add all solutions from 'solutionsRes' to 'goodSolutions', except\r\n            // those that appear in 'solutionsCon' (i.e. the set of neutral constraints).\r\n            for (let i = 0; i < solutionsRes.length; i++) {\r\n                const set1 = solutionsRes[i];\r\n                let has = false;\r\n                for (let j = 0; j < solutionsCon.length; j++) {\r\n                    if (setsAreEqual(set1, solutionsCon[j])) {\r\n                        has = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!has) {\r\n                    goodSolutions.push(set1);\r\n                }\r\n            }\r\n        }\r\n\r\n        // The rest of the computation is done in a separate method. We pass it the\r\n        // solver variable, the two solver objects, and the good and neutral solutions.\r\n        this._computeAndAddResults(vari, solverRes, solverCon, goodSolutions, solutionsCon);\r\n    }\r\n\r\n    // TODO split up\r\n    private _computeAndAddResults(\r\n        solverVar: SolverVariable,\r\n        solverRes: any,\r\n        solverCon: any,\r\n        goodSolutions: Set<string>[],\r\n        // previously 'solutionsCon'.\r\n        neutralSolutions: Set<string>[]): void {\r\n\r\n        const hyps = this._hyps;\r\n\r\n        const solverID = solverVar.id;\r\n        const solverMeta = solverVar.meta;\r\n\r\n        // Total number of hypotheticals.\r\n        const numHyps = hyps.length;\r\n\r\n        // Total number of possible states/cases.\r\n        const numCases = Math.pow(2, numHyps);\r\n\r\n        const numNeutralCases = neutralSolutions.length;\r\n        const numGoodBadCases = numCases - numNeutralCases;\r\n        const numGoodCases = goodSolutions.length;\r\n        const numBadCases = numGoodBadCases - numGoodCases;\r\n\r\n        const aLevel: [number, number] = [numNeutralCases, numCases];\r\n        let mBalance: [number, number] | undefined = undefined;\r\n        let mEntropy: number | undefined = undefined;\r\n        let mEntropyNorm: number | undefined = undefined;\r\n        let mEntropyScale: [number, number] | undefined = undefined;\r\n\r\n        // Balance of good and bad, and entropy.\r\n\r\n        // 'numGoodBadCases === 0' is already taken care of by setting all values to 'undefined'\r\n        if (numGoodBadCases > 1) {\r\n            // This case automatically ensures that\r\n            mBalance = [numGoodCases, numGoodBadCases];\r\n\r\n            if (numGoodCases !== 0 && numBadCases !== 0) {\r\n                const badVal = numBadCases / numGoodBadCases;\r\n                const goodVal = numGoodCases / numGoodBadCases;\r\n                mEntropy = -badVal * Math.log2(badVal) - goodVal * Math.log2(goodVal);\r\n\r\n                const lowL = 1 / numGoodBadCases;\r\n                const highL = 1 - lowL;\r\n                const ELow = -lowL * Math.log2(lowL) - highL * Math.log2(highL);\r\n\r\n                if (numGoodBadCases % 2 === 0) {\r\n                    mEntropyScale = [ELow, 1];\r\n                } else {\r\n                    const lowH = (numGoodBadCases - 1) / 2 / numGoodBadCases;\r\n                    const highH = (numGoodBadCases + 1) / 2 / numGoodBadCases;\r\n                    const EHigh = -lowH * Math.log2(lowH) - highH * Math.log2(highH);\r\n                    mEntropyScale = [ELow, EHigh];\r\n                }\r\n\r\n                if (mEntropyScale[0] === mEntropyScale[1]) {\r\n                    mEntropyNorm = 0;\r\n                } else {\r\n                    mEntropyNorm = (mEntropy - mEntropyScale[0]) / (mEntropyScale[1] - mEntropyScale[0]);\r\n                }\r\n            }\r\n        }\r\n\r\n        // From here on we will convert the solutions (good and neutral) to 2d string\r\n        // arrays rather then arrays of sets of strings, and replace the variable names\r\n        // with their meta text (for true or false), which is how they will be presented.\r\n        // We will also use the good and neutral solutions to find what the bad solutions\r\n        // are.\r\n        const goodStates: string[][] = [];\r\n        const neutralStates: string[][] = [];\r\n        const badStates: string[][] = [];\r\n\r\n        // Used to track which of the possible states are good or neutral, so we can find\r\n        // out which states are left (which would be the bad ones).\r\n        const bitSet: Set<number> = new Set();\r\n        // Pre-computed powers of 2\r\n        const po2 = this._po2;\r\n\r\n        // Create the good states from the hyp metas.\r\n        for (let i = 0; i < goodSolutions.length; i++) {\r\n            const res: string[] = new Array(numHyps);\r\n            const gs = goodSolutions[i];\r\n            let bits = 0;\r\n            for (let j = 0; j < hyps.length; j++) {\r\n                const hypVar = hyps[j];\r\n                if (gs.has(hypVar.id)) {\r\n                    res[j] = hypVar.meta[0];\r\n                    // Also add this state to the bitset as occupied.\r\n                    bits |= po2[j];\r\n                } else {\r\n                    res[j] = hypVar.meta[1];\r\n                }\r\n            }\r\n            bitSet.add(bits);\r\n            goodStates.push(res);\r\n        }\r\n\r\n        // Create the neutral cases. Same as for good states.\r\n        for (let i = 0; i < neutralSolutions.length; i++) {\r\n            const res: string[] = new Array(numHyps);\r\n            const cons = neutralSolutions[i];\r\n            let bits = 0;\r\n            for (let j = 0; j < hyps.length; j++) {\r\n                const hypVar = hyps[j];\r\n                if (cons.has(hypVar.id)) {\r\n                    res[j] = hypVar.meta[0];\r\n                    bits |= po2[j];\r\n                } else {\r\n                    res[j] = hypVar.meta[1];\r\n                }\r\n            }\r\n            neutralStates.push(res);\r\n            bitSet.add(bits);\r\n        }\r\n\r\n        // Create the bad cases. Just go over all possible states, check if\r\n        // the state is taken (i.e. good or neutral), and if not, add it to\r\n        // the list of bad states.\r\n        for (let i = 0; i < numCases; i++) {\r\n            const res: string[] = [];\r\n            if (!bitSet.has(i)) {\r\n                for (let j = 0; j < numHyps; j++) {\r\n                    if (i & po2[j]) {\r\n                        res[j] = hyps[j].meta[0];\r\n                    } else {\r\n                        res[j] = hyps[j].meta[1];\r\n                    }\r\n                }\r\n                badStates.push(res);\r\n            }\r\n        }\r\n\r\n\r\n        // Get string representation of the rules - both ordinary rules and neutrals.\r\n        const formulaRes = formulaToString(solverVar.rules, 'and');\r\n        const formulaCon = formulaToString(solverVar.pruned, 'and');\r\n\r\n        // We convert the variable mappings to an array since the solver results\r\n        // is a presentation object, and we want it to map directly to JSON.\r\n        // Also we want the hyps themselves as a plain array of strings.\r\n        const hypArr: [string, string, string][] = new Array(hyps.length);\r\n        for (let i = 0; i < hyps.length; i++) {\r\n            const hyp = hyps[i];\r\n            const hypID = hyp.id;\r\n            hypArr[i] = [hypID, hyp.meta[0], hyp.meta[1]];\r\n        }\r\n\r\n        // Finally we create the results object.\r\n\r\n        const results: ResultDataSolver = {\r\n            solverID,\r\n            solverMeta,\r\n            mBalance,\r\n            aLevel,\r\n            mEntropy,\r\n            mEntropyNorm,\r\n            mEntropyScale,\r\n            numHyps,\r\n            numCases,\r\n            goodStates,\r\n            neutralStates,\r\n            badStates,\r\n            hyps: hypArr,\r\n            formulaRes,\r\n            formulaCon\r\n        };\r\n\r\n        solverVar.solverResult = {solverRes, solverCon, results};\r\n    }\r\n\r\n    private _checkVarName(varId: string, token: IToken): void {\r\n        if (this.hasVariable(varId)) {\r\n            throw InterpreterJSError.createVarAlreadyExists(varId, token);\r\n        }\r\n        if (this._keywords.has(varId)) {\r\n            throw InterpreterJSError.createReservedName(varId, token);\r\n        }\r\n    }\r\n\r\n    private _getToken(ctx: any): IToken {\r\n        if (ctx.tokenType === undefined) {\r\n            throw new Error('BUG: Trying to use a non-token as a token.');\r\n        }\r\n        return ctx;\r\n    }\r\n\r\n    public addVariable(id: string, vari: Variable): boolean {\r\n        if (this._varTable.has(id)) {\r\n            return false;\r\n        }\r\n        this._varTable.set(id, vari);\r\n        return true;\r\n    }\r\n\r\n    public getVariable(id: string): Variable | undefined {\r\n        return this._varTable.get(id);\r\n    }\r\n\r\n    public hasVariable(id: string): boolean {\r\n        return this._varTable.has(id);\r\n    }\r\n\r\n    public varTable(): Map<string, Variable> {\r\n        return this._varTable;\r\n    }\r\n\r\n    interpret(script: string, ec: ExecutionController): InterpreterResult {\r\n        this._varTable = new Map<string, Variable>();\r\n        this._consoleMessages = [];\r\n        this._hyps = [];\r\n        this._solverResults = [];\r\n        this._compResults = [];\r\n        this._ec = ec;\r\n\r\n        const pRes = parser.parse(script);\r\n        let ret = false;\r\n        if (pRes.parseErrors.length === 0 && pRes.lexErrors.length === 0) {\r\n            try {\r\n                ret = this.visit(pRes.cst) as boolean;\r\n            } catch (err) {\r\n                console.log(err);\r\n                if ('data' in err) {\r\n                    const e = err as InterpreterJSError;\r\n                    const errObj: ConsoleMessage = {\r\n                        type: 'error',\r\n                        eType: 'InterpreterError',\r\n                        subType: e.data.type,\r\n                        line: e.data.token && e.data.token.startLine && !isNaN(e.data.token.startLine) ? e.data.token.startLine : undefined,\r\n                        lineOffset: e.data.token && e.data.token.startOffset && !isNaN(e.data.token.startOffset) ? e.data.token.startOffset : undefined,\r\n                        column: e.data.token && e.data.token.startColumn && !isNaN(e.data.token.startColumn) ? e.data.token.startColumn : undefined,\r\n                        message: err.message\r\n                    };\r\n                    this._consoleMessages.push(errObj);\r\n                } else {\r\n                    const errObj: ConsoleMessage = {\r\n                        type: 'error',\r\n                        eType: 'JSError',\r\n                        subType: err.name,\r\n                        line: -1,\r\n                        lineOffset: -1,\r\n                        column: -1,\r\n                        message: err.message\r\n                    };\r\n                    this._consoleMessages.push(errObj);\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0; i < pRes.lexErrors.length; i++) {\r\n                const err = pRes.lexErrors[i];\r\n                const errObj: ConsoleMessage = {\r\n                    type: 'error',\r\n                    eType: 'LexerError',\r\n                    subType: 'TokenizationError',\r\n                    line: err.line,\r\n                    lineOffset: err.offset,\r\n                    column: err.column,\r\n                    message: err.message\r\n                };\r\n                this._consoleMessages.push(errObj);\r\n            }\r\n            for (let i = 0; i < pRes.parseErrors.length; i++) {\r\n                const err = pRes.parseErrors[i];\r\n                const errObj: ConsoleMessage = {\r\n                    type: 'error',\r\n                    eType: 'ParserError',\r\n                    subType: err.name,\r\n                    line: err.token.startLine,\r\n                    lineOffset: err.token.startOffset,\r\n                    column: err.token.startColumn,\r\n                    message: err.message\r\n                };\r\n                this._consoleMessages.push(errObj);\r\n            }\r\n        }\r\n        return {\r\n            ret,\r\n            messages: this._consoleMessages,\r\n            solverResults: this._solverResults,\r\n            compResults: this._compResults\r\n        };\r\n    }\r\n}\r\n\r\nconst solve = (solver: any, ec: ExecutionController): Set<string>[] => {\r\n\r\n    const solutions: Set<string>[] = [];\r\n    let done = false;\r\n    do {\r\n        const curSol = solver.solve();\r\n\r\n        if (curSol === null) {\r\n            done = true;\r\n        } else {\r\n            solutions.push(new Set(curSol.getTrueVars()));\r\n            solver.forbid(curSol.getFormula());\r\n        }\r\n    } while (!done && !ec.aborted);\r\n    return solutions;\r\n};\r\n\r\nexport const setsAreEqual = (s1: Set<string>, s2: Set<string>) => {\r\n    if (s1.size !== s2.size) {\r\n        return false;\r\n    }\r\n    for (const e of s1) {\r\n        if (!s2.has(e)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n\r\nexport const arrsAreEqual = (arr1: string[], arr2: string[]): boolean => {\r\n    if (arr1.length !== arr2.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < arr1.length; i++) {\r\n        if (arr1[i] !== arr2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n\r\nexport const getArrsByComp = (arr1: string[][], arr2: string[][], comp: (a1: string[], a2: string[]) => boolean): string[][] => {\r\n    const res: string[][] = [];\r\n    for (let i = 0; i < arr1.length; i++) {\r\n        const e = arr1[i];\r\n        for (let j = 0; j < arr2.length; j++) {\r\n            if (comp(e, arr2[j])) {\r\n                res.push(e);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return res;\r\n};\r\n\r\nexport const formulaToString = (formulas: any, logic: string): string => {\r\n    let str = '(';\r\n\r\n    for (let i = 0; i < formulas.length; i++) {\r\n        let op = formulas[i];\r\n        if (typeof op === 'string') {\r\n            let idx = 0;\r\n            while (op[idx] === '-' && idx < op.length) {\r\n                idx++;\r\n            }\r\n            op = `${idx % 2 === 1 ? 'not ' : ''}${op.slice(idx)}`;\r\n            str += op;\r\n        } else if (op instanceof Array) {\r\n            str += ` ${formulaToString(op, 'and')} `;\r\n        } else { // Must be an object of type Logic.xxx\r\n            // TODO go over all cases.\r\n            if (op.type === 'not') {\r\n                str += 'not';\r\n                console.log(op);\r\n                str += ` ${formulaToString([op.operand], 'not')} `;\r\n            } else if (op.type === 'implies' || op.type === 'equiv') {\r\n                str += `${formulaToString([op.A, op.B], op.type)}`;\r\n            } else {\r\n                str += `${formulaToString(op.operands, op.type)}`;\r\n            }\r\n        }\r\n\r\n        if (i + 1 < formulas.length) {\r\n            str += ` ${logic} `;\r\n        }\r\n\r\n    }\r\n\r\n    str += ')';\r\n    // Trim superfluous parantheses (TODO).\r\n    while (str.length >= 4 && str[0] === '(' && str[1] == '(' && str[str.length - 1] === ')' && str[str.length - 2] === ')') {\r\n        str = str.slice(1, -1);\r\n    }\r\n    return str;\r\n};\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('md-card',[_c('md-card-header',[_c('md-card-header-text',[_c('div',{staticClass:\"md-title\"},[_vm._v(_vm._s(_vm.result.solverID))]),_c('div',{staticClass:\"md-subhead\"},[_vm._v(_vm._s(_vm.result.solverMeta))])])],1),_c('md-card-content',[_c('div',{staticClass:\"md-body-2\"},[_vm._v(\"Morally Good States\")]),_c('md-list',_vm._l((_vm.result.goodStates),function(goodState,idx){return _c('md-list-item',{key:idx,staticStyle:{\"border-width\":\"1px\",\"border-color\":\"lightgrey\",\"border-style\":\"solid\",\"overflow-x\":\"scroll\"}},[_c('div',{staticStyle:{\"display\":\"block\"}},_vm._l((goodState),function(state,idxInner){return _c('md-chip',{key:idxInner,staticClass:\"md-primary greenchip\"},[_vm._v(\" \"+_vm._s(state)+\" \")])}),1)])}),1),_c('div',{staticClass:\"md-body-2\"},[_vm._v(\"Morally Bad States\")]),_c('md-list',_vm._l((_vm.result.badStates),function(badState,idx){return _c('md-list-item',{key:idx,staticStyle:{\"border-width\":\"1px\",\"border-color\":\"lightgrey\",\"border-style\":\"solid\",\"overflow-x\":\"scroll\"}},[_c('div',{staticStyle:{\"display\":\"block\"}},_vm._l((badState),function(state,idxInner){return _c('md-chip',{key:idxInner,staticClass:\"md-primary redchip\"},[_vm._v(\" \"+_vm._s(state)+\" \")])}),1)])}),1),_c('div',{staticClass:\"md-body-2\"},[_vm._v(\"Morally Neutral States\")]),_c('md-list',_vm._l((_vm.result.neutralStates),function(neutralState,idx){return _c('md-list-item',{key:idx,staticStyle:{\"border-width\":\"1px\",\"border-color\":\"lightgrey\",\"border-style\":\"solid\",\"overflow-x\":\"scroll\"}},[_c('div',{staticStyle:{\"display\":\"block\"}},_vm._l((neutralState),function(state,idxInner){return _c('md-chip',{key:idxInner,staticClass:\"md-primary bluechip\"},[_vm._v(\" \"+_vm._s(state)+\" \")])}),1)])}),1),_c('md-switch',{staticClass:\"md-primary\",model:{value:(_vm.additionalInfo),callback:function ($$v) {_vm.additionalInfo=$$v},expression:\"additionalInfo\"}},[_vm._v(\"Additional information\")])],1),(_vm.additionalInfo)?_c('div',[_c('md-card',{staticClass:\"datacard\"},[_c('md-card-header',[_c('md-card-header-text',[_c('div',{staticClass:\"md-title\"},[_vm._v(_vm._s(_vm.result.numCases))]),_c('div',{staticClass:\"md-subhead\"},[_vm._v(\"Total number of states\")])])],1),_c('md-card-content',[_c('p',[_vm._v(\" The total number of states is the number of possible combinations of hypotheticals. It is also the sum of the amount of good, bad, and neutral states. \")])])],1),_c('md-card',{staticClass:\"datacard\"},[_c('md-card-header',[_c('md-card-header-text',[_c('div',{staticClass:\"md-title\"},[_vm._v(_vm._s(Math.round(100*(_vm.result.aLevel[0] / _vm.result.aLevel[1])) + '%')+\" \")]),_c('div',{staticClass:\"md-subhead\"},[_vm._v(\"Level of amorality \")])])],1),_c('md-card-content',[_c('p',[_vm._v(\" The level of amorality is the percentage of all states that are neutral. Here, \"+_vm._s(_vm.result.aLevel[0] + '/' + _vm.result.aLevel[1])+\" states are neutral. \")])])],1),_c('md-card',{staticClass:\"datacard\"},[_c('md-card-header',[_c('md-card-header-text',[_c('div',{staticClass:\"md-title\"},[_vm._v(_vm._s(_vm.result.mBalance === undefined ? '-' : Math.round(100*(_vm.result.mBalance[0] / _vm.result.mBalance[1])) + '%')+\" \")]),_c('div',{staticClass:\"md-subhead\"},[_vm._v(\"Permissiveness \")])])],1),_c('md-card-content',[_c('p',[_vm._v(\" The permissiveness is the percentage of good cases among the total number of good and bad cases. Here, \"+_vm._s(_vm.result.mBalance === undefined ? \"the value can't be computed because there are 0 good or bad cases combined.\" : _vm.result.mBalance[0] + '/' + _vm.result.mBalance[1] + ' states are good.')+\". \")])])],1),_c('md-card',{staticClass:\"datacard\"},[_c('md-card-header',[_c('md-card-header-text',[_c('div',{staticClass:\"md-title\"},[_vm._v(_vm._s(_vm.result.mEntropyNorm === undefined ? '-' : Math.round(100 * (1 - _vm.result.mEntropyNorm) * (1 - _vm.result.aLevel[0] / _vm.result.aLevel[1])) + '%')+\" \")]),_c('div',{staticClass:\"md-subhead\"},[_vm._v(\"Moral sophistication\")])])],1),_c('md-card-content',[_c('p',[_vm._v(\" Moral sophistication is a measure of how selective a rule is about what's good and bad. It can be seen as a measure of the imbalance between the number of good and bad cases, that also takes the proportion of choices that are non-neutral into account. An even 50/50 split between good and bad means 0 sophistication, whereas more uneven splits leads to higher values (0/all splits are regarded as a special cases). Generally, a higher number of neutral cases will lead to a lower sophistication as well. \")]),_c('p',[_vm._v(\" Mathematically, the moral sophistication value 'S' is computed as 'S = (1 - E)*P' where 'E' is the normalized entropy value (found below), and 'P = N/T' is the number of non-neutral cases (N) divided by the total number of cases (T). \")])])],1),_c('md-card',{staticClass:\"datacard\"},[_c('md-card-header',[_c('md-card-header-text',[_c('div',{staticClass:\"md-title\"},[_vm._v(_vm._s(_vm.result.mEntropy === undefined ? '-' : _vm.result.mEntropy.toFixed(2))+\" \")]),_c('div',{staticClass:\"md-subhead\"},[_vm._v(\"Moral entropy\")])])],1),_c('md-card-content',[_c('p',[_vm._v(\" Moral entropy is a measure of bias that takes the total number of choices and the balance between good and bad choices into account. A lower value means a higher bias. For any number of states, the highest entropy is for an even split between good and bad, and the lowest is with only 1 good (or bad) choice because the extremes (0 and all choices) are treated as special cases. The entropy also gets a larger spread the more possible states there are, e.g. 1 good choice out of 5 states has a higher entropy (less bias) than 1 good out of 10. \")])])],1),_c('md-card',{staticClass:\"datacard\"},[_c('md-card-header',[_c('md-card-header-text',[_c('div',{staticClass:\"md-title\"},[_vm._v(_vm._s(_vm.result.mEntropyScale === undefined ? '-' : '[' + _vm.result.mEntropyScale[0].toFixed(2) + ', ' + _vm.result.mEntropyScale[1].toFixed(2) + ']')+\" \")]),_c('div',{staticClass:\"md-subhead\"},[_vm._v(\"Local entropy scale\")])])],1),_c('md-card-content',[_c('p',[_vm._v(\" The local entropy scale is the minimum and maximum possible entropy for this system. \")])])],1),_c('md-card',{staticClass:\"datacard\"},[_c('md-card-header',[_c('md-card-header-text',[_c('div',{staticClass:\"md-title\"},[_vm._v(_vm._s(_vm.result.mEntropyNorm === undefined ? '-' : _vm.result.mEntropyNorm.toFixed(2))+\" \")]),_c('div',{staticClass:\"md-subhead\"},[_vm._v(\"Normalized moral entropy\")])])],1),_c('md-card-content',[_c('p',[_vm._v(\" The normalized moral entropy is the moral entropy scaled to [0, 1] using the local scale. If the upper and lower end of the scale is the same number, the normalized moral entropy is set to 0. \")])])],1),_c('md-card',{staticClass:\"datacard\"},[_c('md-card-header',[_c('md-card-header-text',[_c('div',{staticClass:\"md-title\"},[_vm._v(\"Formulas\")])])],1),_c('md-card-content',[_c('h3',[_vm._v(\"Formula for Good/Bad\")]),_c('div',{staticStyle:{\"overflow-x\":\"auto\"}},[_vm._v(_vm._s(_vm.result.formulaRes))]),_c('h3',[_vm._v(\"Formula for Neutral\")]),_c('div',{staticStyle:{\"overflow-x\":\"auto\"}},[_vm._v(_vm._s(_vm.result.formulaCon))])])],1)],1):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Component from \"vue-class-component\";\r\nimport Vue from \"vue\";\r\nimport {Prop} from \"vue-property-decorator\";\r\nimport {ResultDataSolver} from \"../Interpreter\";\r\n\r\n@Component\r\nexport default class Result extends Vue {\r\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\n    @Prop({\r\n        default: () => {\r\n        }\r\n    }) result: ResultDataSolver | undefined;\r\n\r\n    private additionalInfo = false;\r\n}\r\n\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Result.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Result.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Result.vue?vue&type=template&id=663d8cb4&scoped=true&\"\nimport script from \"./Result.vue?vue&type=script&lang=ts&\"\nexport * from \"./Result.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"663d8cb4\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('md-card',[_c('md-card-header',[_c('div',{staticClass:\"md-title\"},[_vm._v(\"Comparison\")]),_c('div',{staticClass:\"md-subhead\"},[_vm._v(_vm._s(_vm.result.subtype))])]),_c('md-card-content',[_c('h3',[_vm._v(\"Solver 1: \"+_vm._s(_vm.result.solverID1)+\" (\"+_vm._s(_vm.result.solverMeta1.slice(1, -1))+\")\")]),_c('h3',[_vm._v(\"Solver 2: \"+_vm._s(_vm.result.solverID2)+\" (\"+_vm._s(_vm.result.solverMeta2.slice(1, -1))+\")\")]),_c('h3',[_vm._v(\"Good States\")]),_c('md-list',_vm._l((_vm.result.goodStates),function(goodState,idx){return _c('md-list-item',{key:idx,staticStyle:{\"border-width\":\"1px\",\"border-color\":\"lightgrey\",\"border-style\":\"solid\",\"overflow-x\":\"scroll\"}},[_c('div',{staticStyle:{\"display\":\"block\"}},_vm._l((goodState),function(state,idxInner){return _c('md-chip',{key:idxInner,staticClass:\"md-primary greenchip\"},[_vm._v(\" \"+_vm._s(state)+\" \")])}),1)])}),1),_c('h3',[_vm._v(\"Bad States\")]),_c('md-list',_vm._l((_vm.result.badStates),function(badState,idx){return _c('md-list-item',{key:idx,staticStyle:{\"border-width\":\"1px\",\"border-color\":\"lightgrey\",\"border-style\":\"solid\",\"overflow-x\":\"scroll\"}},[_c('div',{staticStyle:{\"display\":\"block\"}},_vm._l((badState),function(state,idxInner){return _c('md-chip',{key:idxInner,staticClass:\"md-primary redchip\"},[_vm._v(\" \"+_vm._s(state)+\" \")])}),1)])}),1),_c('h3',[_vm._v(\"Neutral States\")]),_c('md-list',_vm._l((_vm.result.neutralStates),function(neutralState,idx){return _c('md-list-item',{key:idx,staticStyle:{\"border-width\":\"1px\",\"border-color\":\"lightgrey\",\"border-style\":\"solid\",\"overflow-x\":\"scroll\"}},[_c('div',{staticStyle:{\"display\":\"block\"}},_vm._l((neutralState),function(state,idxInner){return _c('md-chip',{key:idxInner,staticClass:\"md-primary bluechip\"},[_vm._v(\" \"+_vm._s(state)+\" \")])}),1)])}),1)],1),_c('md-card-actions')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Component from \"vue-class-component\";\r\nimport Vue from \"vue\";\r\nimport {Prop} from \"vue-property-decorator\";\r\nimport {ResultDataComp} from \"../Interpreter\";\r\n\r\n@Component\r\nexport default class Result extends Vue {\r\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\n    @Prop({\r\n        default: () => {\r\n        }\r\n    }) result: ResultDataComp | undefined;\r\n}\r\n\r\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n\r\nimport Vue from 'vue';\r\nimport Component from \"vue-class-component\";\r\nimport CodeMirror from 'codemirror';\r\nimport '../cm_modes/lcc';\r\nimport Interpreter, {ResultDataSolver, ResultDataComp, ExecutionController} from \"../Interpreter\";\r\nimport Result from \"./Result.vue\";\r\nimport Comp from \"./Comp.vue\";\r\nimport vSelect from 'vue-select';\r\n\r\ntype Theme = {\r\n    name: string,\r\n    label: string\r\n}\r\n\r\nconst EDITOR_CONTENT_COOKIE = \"LogMor.EditorContent\";\r\nconst EDITOR_THEME_COOKIE = \"LogMor.EditorTheme\";\r\n\r\nlet executionController: ExecutionController | undefined;\r\n\r\n@Component({\r\n    components: {\r\n        Comp,\r\n        Result,\r\n        vSelect\r\n    }\r\n})\r\nexport default class LogMor extends Vue {\r\n\r\n    private logOutput: string[] = [];\r\n    private solverResults: ResultDataSolver[] = [];\r\n    private compResults: ResultDataComp[] = [];\r\n    private ide: any;\r\n    private isEvaluating = false;\r\n    private abortingEval = false;\r\n    private printingOutput = false;\r\n    private theme = this.initTheme();\r\n    readonly themeOptions = THEME_OPTIONS;\r\n\r\n    private initTheme(): Theme {\r\n        const theme = Vue.$cookies.get(EDITOR_THEME_COOKIE);\r\n        if (theme && 'name' in theme) {\r\n            return theme;\r\n        } else {\r\n            return {name: 'mbo', label: 'MBO'};\r\n        }\r\n    }\r\n\r\n    themeSelected(theme: Theme) {\r\n        this.ide.setOption('theme', theme.name);\r\n        Vue.$cookies.set(EDITOR_THEME_COOKIE, theme);\r\n    }\r\n\r\n    mounted() {\r\n        this.ide = CodeMirror.fromTextArea(document.getElementById(\"ide\"),\r\n            {\r\n                lineNumbers: true,\r\n                tabSize: 2,\r\n                lineWrapping: true,\r\n                theme: this.theme.name,\r\n                mode: \"lcc\"\r\n            });\r\n        const that = this;\r\n        this.ide.setOption(\"extraKeys\", {\r\n            'Ctrl-Enter': function () {\r\n                that.submitEvaluate();\r\n            }\r\n        });\r\n        this.ide.setSize(null, 500);\r\n        const cookieTxt = Vue.$cookies.get(EDITOR_CONTENT_COOKIE);\r\n        if (cookieTxt && typeof cookieTxt === 'string') {\r\n            this.ide.setValue(cookieTxt);\r\n        } else {\r\n            this.ide.setValue(JERY_AND_GERGE);\r\n            Vue.$cookies.set(EDITOR_CONTENT_COOKIE, JERY_AND_GERGE);\r\n        }\r\n    }\r\n\r\n    submitEvaluate() {\r\n        if (this.isEvaluating) {\r\n            return;\r\n        }\r\n        this.isEvaluating = true;\r\n        executionController = new ExecutionController();\r\n        this.abortingEval = false;\r\n\r\n        this.logOutput = [];\r\n        this.solverResults = [];\r\n        this.compResults = [];\r\n\r\n        const text = this.ide.getValue();\r\n        if (text.replace(/\\s/g, '') === '') {\r\n            return;\r\n        }\r\n        this.evaluate(text);\r\n        Vue.$cookies.set(EDITOR_CONTENT_COOKIE, this.ide.getValue());\r\n    }\r\n\r\n    evaluate(text: string) {\r\n        // TODO maybe some webworker stuff...\r\n        setTimeout(() => {\r\n            const ret = new Interpreter().interpret(text, executionController as ExecutionController);\r\n            let str: string[] = [];\r\n            for (const item of ret.messages) {\r\n                if (item.type === 'solver') {\r\n                    str.push(item.message);\r\n                } else {\r\n                    if (item.line) {\r\n                        str.push(`${item.subType} (line: ${item.line}): ${item.message}`);\r\n                    } else {\r\n                        str.push(`${item.subType}: ${item.message}`);\r\n                    }\r\n                }\r\n            }\r\n            this.logOutput = str;\r\n            this.solverResults = ret.solverResults;\r\n            this.compResults = ret.compResults;\r\n            this.printingOutput = true;\r\n            this.$nextTick(() => {\r\n                executionController = undefined;\r\n                this.abortingEval = false;\r\n                this.printingOutput = false;\r\n                this.isEvaluating = false;\r\n            });\r\n        }, 100);\r\n    }\r\n\r\n    submitClear() {\r\n        if (this.isEvaluating) {\r\n            return;\r\n        }\r\n        this.logOutput = [];\r\n        this.solverResults = [];\r\n        this.compResults = [];\r\n        this.ide.setValue('');\r\n        Vue.$cookies.set(EDITOR_CONTENT_COOKIE, '');\r\n    }\r\n\r\n    abortEval() {\r\n        if (this.isEvaluating && !this.abortingEval) {\r\n            console.log(\"(abort successful)\");\r\n            this.abortingEval = true;\r\n            (executionController as ExecutionController).aborted = true;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst THEME_OPTIONS = [\r\n    {name: '3024-day', label: '3024 (day)'},\r\n    {name: '3024-night', label: '3024 (night)'},\r\n    {name: 'abcdef', label: 'Abcdef'},\r\n    {name: 'ambiance', label: 'Ambiance'},\r\n    {name: 'ambiance-mobile', label: 'Ambiance (mobile)'},\r\n    {name: 'ayu-dark', label: 'Ayu (dark)'},\r\n    {name: 'ayu-mirage', label: 'Ayu (mirage)'},\r\n    {name: 'base16-dark', label: 'Base16 (dark)'},\r\n    {name: 'base16-light', label: 'Base16 (light)'},\r\n    {name: 'bespin', label: 'Bespin'},\r\n    {name: 'blackboard', label: 'Blackboard'},\r\n    {name: 'cobalt', label: 'Cobalt'},\r\n    {name: 'colorforth', label: 'Color-forth'},\r\n    {name: 'darcula', label: 'Darcula'},\r\n    {name: 'dracula', label: 'Dracula'},\r\n    {name: 'duotone-dark', label: 'Duotone (dark)'},\r\n    {name: 'duotone-light', label: 'Duotone (light)'},\r\n    {name: 'eclipe', label: 'Eclipse'},\r\n    {name: 'elegant', label: 'Elegant'},\r\n    {name: 'erlang-dark', label: 'Erlang (dark)'},\r\n    {name: 'gruvbox-dark', label: 'Gruvbox (dark)'},\r\n    {name: 'hopscotch', label: 'Hopscotch'},\r\n    {name: 'icecoder', label: 'Icecoder'},\r\n    {name: 'idea', label: 'IDEA'},\r\n    {name: 'isotope', label: 'Isotope'},\r\n    {name: 'lesser-dark', label: 'Lesser (dark)'},\r\n    {name: 'liquibyte', label: 'Liquibyte'},\r\n    {name: 'lucario', label: 'Lucario'},\r\n    {name: 'material', label: 'Material'},\r\n    {name: 'material-darker', label: 'Material (darker)'},\r\n    {name: 'material-ocean', label: 'Material (ocean)'},\r\n    {name: 'material-palenight', label: 'Material (pale night)'},\r\n    {name: 'mbo', label: 'MBO'},\r\n    {name: 'mdn-like', label: 'MDN-like'},\r\n    {name: 'midnight', label: 'Midnight'},\r\n    {name: 'monokai', label: 'Monokai'},\r\n    {name: 'moxer', label: 'Moxer'},\r\n    {name: 'neat', label: 'Neat'},\r\n    {name: 'neo', label: 'Neo'},\r\n    {name: 'night', label: 'Night'},\r\n    {name: 'nord', label: 'Nord'},\r\n    {name: 'oceanic-next', label: 'Oceanic Next'},\r\n    {name: 'panda-syntax', label: 'Panda Syntax'},\r\n    {name: 'paraiso-dark', label: 'Paraiso (dark)'},\r\n    {name: 'paraiso-light', label: 'Paraiso (light)'},\r\n    {name: 'pastel-on-dark', label: 'Pastel-on-dark'},\r\n    {name: 'railscasts', label: 'Railscasts'},\r\n    {name: 'rubyblue', label: 'Ruby Blue'},\r\n    {name: 'seti', label: 'SETI'},\r\n    {name: 'shadowfox', label: 'Shadowfox'},\r\n    {name: 'solarized', label: 'Solarized'},\r\n    {name: 'ssms', label: 'SSMS'},\r\n    {name: 'the-matrix', label: 'The Matrix'},\r\n    {name: 'tomorrow-night-bright', label: 'Tomorrow Night (bright)'},\r\n    {name: 'tomorrow-night-eighties', label: 'Tomorrow Night (eighties)'},\r\n    {name: 'ttcn', label: 'TTCN'},\r\n    {name: 'twilight', label: 'Twilight'},\r\n    {name: 'vibrant-ink', label: 'Vibrant Ink'},\r\n    {name: 'xq-dark', label: 'XQ (dark)'},\r\n    {name: 'xq-light', label: 'XQ (light)'},\r\n    {name: 'yeti', label: 'Yeti'},\r\n    {name: 'yonce', label: 'Yonce'},\r\n    {name: 'zenburn', label: 'Zenburn'}\r\n];\r\n\r\nconst JERY_AND_GERGE = `// Fairness in receiving gifts.\r\n\r\n// 1. Gerge and Jery may or may not receive IPADS\r\nhyp GergeIPAD \"Gerge get IPAD\" \"Gerge don't get IPAD\"\r\nhyp JeryIPAD \\t\"Jery get IPAD\"  \"Jery don't get IPAD\"\r\n\r\n// 2. Gerges reaction to him and Jery receiving, or not receiving, IPADs.\r\nhyp GergeMood \"Gerge becomes happy\" \"Gerge becomes sad\"\r\n\r\n// If both gets an IPAD, Gerge should be happy.\r\nrule BothGetRule = GergeIPAD.pos and JeryIPAD.pos and GergeMood.pos is good\r\n\r\n// If one of them gets an IPAD but not the other, Gerge should be sad.\r\nrule MoodRuleOnlyOne = (GergeIPAD.pos xor JeryIPAD.pos) and GergeMood.neg is good\r\n\r\n// The two rules above combined into one.\r\nrule MoodRule = BothGetRule or MoodRuleOnlyOne\r\n\r\n// If neither of the two gets an IPAD we will be indifferent - regardless of Gerge's mood.\r\nrule IPADIndifferenceRule = GergeIPAD.neg and JeryIPAD.neg and GergeMood.either\r\n\r\nsolver GergeSolver \"My Gerge solver\"\r\n\r\n// Apply the fairness rule.\r\nsolver GergeSolver apply MoodRule\r\n\r\n// Omit the cases that we are indifferent to.\r\nsolver GergeSolver omit IPADIndifferenceRule\r\n\r\n// Run the solver\r\nsolver GergeSolver run\r\n\r\n// Print the results\r\nsolver GergeSolver print`;\r\n\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Comp.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Comp.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Comp.vue?vue&type=template&id=605956c5&scoped=true&\"\nimport script from \"./Comp.vue?vue&type=script&lang=ts&\"\nexport * from \"./Comp.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"605956c5\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LogMor.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LogMor.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./LogMor.vue?vue&type=template&id=32802a7f&\"\nimport script from \"./LogMor.vue?vue&type=script&lang=ts&\"\nexport * from \"./LogMor.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./LogMor.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Component from \"vue-class-component\";\nimport Vue from \"vue\";\nimport LogMor from \"./components/LogMor.vue\";\nimport CookieLaw from 'vue-cookie-law';\n\n@Component({\n    components: {\n        LogMor,\n        CookieLaw\n    }\n})\nexport default class App extends Vue {\n}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=4d8e5b0f&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue, {CreateElement, VNode} from \"vue\";\nimport VueMaterial from \"vue-material\";\nimport \"vue-material/dist/theme/default.css\";\nimport \"vue-material/dist/vue-material.min.css\";\nimport App from \"./App.vue\";\nimport VueCookies from 'vue-cookies';\n\nVue.use(VueMaterial);\nVue.use(VueCookies);\nVue.config.productionTip = false;\n\nVue.$cookies.config('30d');\n\nnew Vue({\n    render: (h: CreateElement): VNode => h(App)\n}).$mount(\"#app\");\n"],"sourceRoot":""}