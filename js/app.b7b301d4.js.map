{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?1dde","webpack:///./src/components/LogMor.vue?0f0f","webpack:///./src/App.vue?0a07","webpack:///./src/components/LogMor.vue?c140","webpack:///./src/Tokens.ts","webpack:///./src/cm_modes/lcc.js","webpack:///./src/Errors.ts","webpack:///./src/Parser.ts","webpack:///./src/Variable.ts","webpack:///./src/Interpreter.ts","webpack:///./src/components/Result.vue?5891","webpack:///./src/components/Result.vue","webpack:///./src/components/Result.vue?7f13","webpack:///./src/components/Result.vue?dcf5","webpack:///./src/components/Comp.vue?1e8f","webpack:///./src/components/Comp.vue","webpack:///./src/components/LogMor.vue","webpack:///./src/components/Comp.vue?90bd","webpack:///./src/components/Comp.vue?3fa0","webpack:///./src/components/LogMor.vue?4201","webpack:///./src/components/LogMor.vue?cc7d","webpack:///./src/App.vue","webpack:///./src/App.vue?c438","webpack:///./src/App.vue?bff9","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","staticStyle","_v","staticRenderFns","themeOptions","on","themeSelected","model","callback","$$v","theme","expression","isEvaluating","submitEvaluate","submitClear","logOutput","_l","str","idx","_s","_e","solverResults","compResults","$event","abortingEval","abortEval","allTokens","createChevToken","options","newToken","pattern","group","SKIPPED","line_breaks","TKeyword","NA","TLogicalOP","TBoolLit","TMoralLit","TSolverRuleOP","THyp","categories","TRule","TSolver","TDef","TPrimary","TRun","TCompare","TPrint","TSim","TIs","TNot","TOr","TXor","TAnd","TImpl","TEq","TLParen","TRParen","TDot","TID","TQUOTED_STRING","allKeywords","undefined","CATEGORIES","cat","PATTERN","source","keywordSet","Set","atoms","builtinKeywords","atomRegex","a","keywordRegex","kw","CodeMirror","defineSimpleMode","start","regex","token","next","indent","dedent","comment","stringtpt","meta","dontIndentStates","lineComment","defineMIME","msg","type","InterpreterJSError","id","op","symbs","Error","LMParserErrorProvider","buildMismatchTokenMessage","expected","ruleName","previous","startLine","image","tokenType","buildNotAllInputParsedMessage","firstRedundant","buildNoViableAltMessage","buildEarlyExitMessage","LLexer","errorMessageProvider","parenthesizedExpression","RULE","CONSUME","SUBRULE","logicalEQExpression","primaryExpression","OR","ALT","OPTION","logicalNOTExpression","logicalANDExpression","MANY","SUBRULE2","logicalXORExpression","logicalORExpression","logicalImplExpression","hypDeclaration","CONSUME2","ruleDeclaration","solverDeclaration","solverStatement","CONSUME3","compareStatement","program","MANY2","MANY3","MANY4","MANY5","script","lexResult","tokenize","input","tokens","cst","lexErrors","errors","parseErrors","parser","Parser","performSelfAnalysis","createParser","createHypVar","createRuleVar","createSolverVar","rules","pruned","solverResult","primaryHyp","ruleFromVar","vari","dummyToken","startOffset","startColumn","endOffset","endLine","endColumn","isInsertedInRecovery","tokenTypeIdx","aborted","BaseCstVisitor","getBaseCstVisitorConstructor","_keywords","_varTable","Map","_hyps","_po2","_solverResults","_compResults","_consoleMessages","_ec","validateVisitor","ctx","visit","ID","_getToken","getVariable","createVarDoesNotExist","BoolLit","bToken","bStr","ruleData","or","not","Not","And","vari2","and","XOr","xor","Or","Impl","implies","Eq","equiv","varIdToken","varId","metaToken","QUOTED_STRING","metaToken2","meta2","_checkVarName","addVariable","idToken","MoralLit","mlToken","ml","sVari","SolverRuleOP","ruleOP","idToken2","id2","rVari","Primary","hVari","Run","_runSolver","Print","res","results","sVari2","solverID1","solverMeta1","solverID2","solverMeta2","subtype","results2","Sim","goodStates","getArrsByComp","arrsAreEqual","badStates","neutralStates","numStates","Math","pow","similarity","formulaRes","fc1","formulaCon","fc2","hyps","val","numHyps","po2","Array","solverRes","Solver","solverCon","rule","require","solutionsRes","solve","solutionsCon","goodSolutions","set1","has","_computeAndAddResults","solverVar","neutralSolutions","solverID","solverMeta","numCases","numNeutralCases","numGoodBadCases","numGoodCases","numBadCases","aLevel","mBalance","mEntropy","mEntropyNorm","mEntropyScale","badVal","goodVal","log2","lowL","highL","ELow","lowH","highH","EHigh","bitSet","gs","bits","hypVar","isPrimary","add","cons","formulaToString","hypArr","hyp","hypID","hasVariable","createVarAlreadyExists","createReservedName","set","ec","pRes","parse","ret","err","console","log","e","errObj","eType","subType","line","isNaN","lineOffset","column","message","offset","messages","solver","solutions","done","curSol","getTrueVars","forbid","getFormula","s1","s2","size","arr1","arr2","comp","formulas","logic","operand","A","B","operands","goodState","state","idxInner","badState","neutralState","additionalInfo","round","toFixed","default","component","executionController","EDITOR_CONTENT_COOKIE","EDITOR_THEME_COOKIE","printingOutput","initTheme","THEME_OPTIONS","$cookies","label","ide","setOption","fromTextArea","document","getElementById","lineNumbers","tabSize","lineWrapping","that","setSize","cookieTxt","setValue","JERY_AND_GERGE","text","getValue","replace","evaluate","setTimeout","interpret","item","$nextTick","components","Comp","Result","vSelect","LogMor","CookieLaw","use","config","productionTip","render","h","$mount"],"mappings":"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","file":"js/app.b7b301d4.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LogMor.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LogMor.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page-container\",attrs:{\"id\":\"app\"}},[_c('md-app',{staticStyle:{\"background-color\":\"#f1ebe6\"}},[_c('md-app-toolbar',{staticClass:\"md-primary md-large\",attrs:{\"id\":\"toolbar\"}}),_c('md-app-content',{staticStyle:{\"background-color\":\"#eae3db\"}},[_c('LogMor',{staticStyle:{\"margin-bottom\":\"2em\",\"background-color\":\"#eae3db\"},attrs:{\"md-elevation-0\":\"\"}})],1)],1),_c('footer',[_c('md-bottom-bar',{staticStyle:{\"background-color\":\"#1f2430\"}},[_c('div',{staticClass:\"footeritem\"},[_c('a',{staticClass:\"footerlink\",attrs:{\"target\":\"_blank\",\"href\":\"https://github.com/androlo/logmor/blob/main/docs/tutorial.md\"}},[_vm._v(\"Tutorial\")])]),_c('div',{staticClass:\"footeritem\"},[_c('a',{staticClass:\"footerlink\",attrs:{\"target\":\"_blank\",\"href\":\"https://github.com/androlo/logmor/blob/main/docs/docs.md\"}},[_vm._v(\"Documentation\")])]),_c('div',{staticClass:\"footeritem\"},[_c('a',{staticClass:\"footerlink\",attrs:{\"target\":\"_blank\",\"href\":\"https://github.com/androlo/logmor/tree/main/script\"}},[_vm._v(\"Example Script\")])]),_c('div',{staticClass:\"footeritem\"},[_c('a',{staticClass:\"footerlink\",attrs:{\"target\":\"_blank\",\"href\":\"https://github.com/androlo/androlo.github.io\"}},[_vm._v(\"Project Page\")])]),_c('div',{staticClass:\"footeritem\"},[_c('a',{staticClass:\"footerlink\",attrs:{\"target\":\"_blank\",\"href\":\"https://github.com/androlo/logmor\"}},[_vm._v(\"Project Sources\")])])]),_c('cookie-law',{attrs:{\"theme\":\"base\",\"buttonText\":\"OK\",\"storageType\":\"cookies\",\"storageName\":\"LogMor.CookieAlert\",\"message\":\"This page uses cookies for Your convenience.\"}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('md-card',{staticStyle:{\"background-color\":\"#f8f8f8\",\"margin-bottom\":\"0.5em\"}},[_c('md-card-content',[_c('div',{staticClass:\"md-display-3 mainTitle\",staticStyle:{\"margin-bottom\":\"0.3em\",\"text-align\":\"center\",\"color\":\"#474747\"}},[_vm._v(\" Logical Morality \")]),_c('div',{staticClass:\"md-headline\",staticStyle:{\"margin-bottom\":\"0.3em\",\"text-align\":\"center\",\"color\":\"#474747\"}},[_vm._v(\" νερςιοη 0.1 (βετα) \")]),_c('div',{staticClass:\"md-layout\",staticStyle:{\"margin-bottom\":\"0.5em\"}},[_c('div',{staticClass:\"md-layout-item md-size-15\"},[_c('v-select',{attrs:{\"clearable\":false,\"id\":\"theme\",\"options\":_vm.themeOptions},on:{\"input\":_vm.themeSelected},model:{value:(_vm.theme),callback:function ($$v) {_vm.theme=$$v},expression:\"theme\"}})],1)]),_c('div',[_c('textarea',{attrs:{\"id\":\"ide\"}})]),_c('p',[_vm._v(\"Run the script by clicking the EVALUATE button or by pressing CTRL + ENTER (when the cursor is active in the editor).\")]),_c('p',[_vm._v(\"The CLEAR button clears the editor along with any printed output.\")])]),_c('md-card-actions',[_c('md-button',{attrs:{\"disabled\":_vm.isEvaluating,\"id\":\"ebutton\"},on:{\"click\":_vm.submitEvaluate}},[_vm._v(\"Evalute\")]),_c('md-button',{attrs:{\"disabled\":_vm.isEvaluating},on:{\"click\":_vm.submitClear}},[_vm._v(\"Clear\")])],1)],1),_c('md-card',{staticStyle:{\"background-color\":\"#f8f8f8\"}},[_c('md-card-header',[_c('div',{staticClass:\"md-display-1\"},[_vm._v(\"Output\")])]),_c('md-card-content',[(_vm.logOutput.length > 0)?_c('div',{staticClass:\"list\"},[_c('div',{staticClass:\"output\"},_vm._l((_vm.logOutput),function(str,idx){return _c('span',{key:idx,staticClass:\"outputItem\"},[_vm._v(\" : \"+_vm._s(str)+\" \")])}),0)]):_vm._e(),(_vm.solverResults.length > 0)?_c('div',{staticStyle:{\"padding-top\":\"1em\"}},_vm._l((_vm.solverResults),function(data,key){return _c('div',{key:key},[_c('Result',{staticStyle:{\"margin-bottom\":\"0.5em\"},attrs:{\"result\":data}})],1)}),0):_vm._e(),(_vm.compResults.length > 0)?_c('div',_vm._l((_vm.compResults),function(data,key){return _c('div',{key:key},[_c('Comp',{staticStyle:{\"margin-bottom\":\"0.5em\"},attrs:{\"result\":data}})],1)}),0):_vm._e()])],1),_c('md-dialog',{attrs:{\"md-active\":_vm.isEvaluating},on:{\"update:mdActive\":function($event){_vm.isEvaluating=$event},\"update:md-active\":function($event){_vm.isEvaluating=$event}}},[_c('md-dialog-title',[_vm._v(\"Evaluating Script\")]),_c('div',{staticStyle:{\"padding\":\"1em\"}},[(!_vm.abortingEval)?_c('p',[_vm._v(\"Running (may take a while) ... \")]):_vm._e(),(_vm.printingOutput)?_c('p',[_vm._v(\"Printing (may freeze the window for large datasets) ... \")]):_vm._e(),(_vm.abortingEval)?_c('p',[_vm._v(\"Aborting (may take a little while) ... \")]):_vm._e(),_c('md-progress-bar',{attrs:{\"md-mode\":\"indeterminate\"}})],1),_c('md-dialog-actions',[_c('md-button',{staticClass:\"md-primary\",on:{\"click\":function($event){return _vm.abortEval()}}},[_vm._v(\"Abort\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { ITokenConfig, Lexer, TokenType, createToken } from 'chevrotain';\r\n\r\nexport const allTokens: TokenType[] = [];\r\n\r\nfunction createChevToken (options: ITokenConfig) {\r\n    const newToken = createToken(options);\r\n    allTokens.push(newToken);\r\n    return newToken;\r\n}\r\n\r\ncreateChevToken({\r\n    name: 'WhiteSpace',\r\n    pattern: /\\s+/,\r\n    group: Lexer.SKIPPED,\r\n    line_breaks: true\r\n});\r\n\r\ncreateChevToken({\r\n    name: 'Comment',\r\n    pattern: /\\/\\/[^\\n]*/,\r\n    group: Lexer.SKIPPED\r\n});\r\n\r\ncreateChevToken({\r\n    name: 'MultiLineComment',\r\n    pattern: /\\/\\*[\\s\\S]*?\\*\\//,\r\n    group: Lexer.SKIPPED,\r\n    line_breaks: true\r\n});\r\n\r\n// Groups\r\nexport const TKeyword = createChevToken({ name: 'Keyword', pattern: Lexer.NA });\r\nexport const TLogicalOP = createChevToken({ name: 'LogicalOP', pattern: Lexer.NA });\r\nexport const TBoolLit = createChevToken({ name: 'BoolLit', pattern: Lexer.NA });\r\nexport const TMoralLit = createChevToken({ name: 'MoralLit', pattern: Lexer.NA });\r\nexport const TSolverRuleOP = createChevToken({ name: 'SolverRuleOP', pattern: Lexer.NA });\r\n\r\n// Declarations\r\nexport const THyp = createChevToken({ name: 'Hyp', pattern: /hyp/, categories: [TKeyword] });\r\nexport const TRule = createChevToken({ name: 'Rule', pattern: /rule/, categories: [TKeyword] });\r\nexport const TSolver = createChevToken({ name: 'Solver', pattern: /solver/, categories: [TKeyword] });\r\nexport const TDef = createChevToken({ name: 'Def', pattern: /=/, categories: [TKeyword] });\r\n\r\n// Rule members\r\nexport const TTrue = createChevToken({ name: 'True', pattern: /true/, categories: [TBoolLit] });\r\nexport const TPos = createChevToken({ name: 'Pos', pattern: /pos/, categories: [TBoolLit] });\r\nexport const TFalse = createChevToken({ name: 'False', pattern: /false/, categories: [TBoolLit] });\r\nexport const TNeg = createChevToken({ name: 'Neg', pattern: /neg/, categories: [TBoolLit] });\r\nexport const TEither = createChevToken({ name: 'Either', pattern: /either/, categories: [TBoolLit] });\r\n\r\n// Hyp modifiers\r\nexport const TPrimary = createChevToken({ name: 'Primary', pattern: /primary/, categories: [TKeyword] });\r\n\r\n// Solver ops\r\nexport const TApply = createChevToken({ name: 'Apply', pattern: /apply/, categories: [TKeyword, TSolverRuleOP] });\r\nexport const TOmit = createChevToken({ name: 'Omit', pattern: /omit/, categories: [TKeyword, TSolverRuleOP] });\r\nexport const TRun = createChevToken({ name: 'Run', pattern: /run/, categories: [TKeyword] });\r\nexport const TCompare = createChevToken({ name: 'Compare', pattern: /compare/, categories: [TKeyword] });\r\nexport const TPrint = createChevToken({ name: 'Print', pattern: /print/, categories: [TKeyword] });\r\n\r\n// Comparison ops\r\nexport const TSim = createChevToken({ name: 'Sim', pattern: /sim/, categories: [TKeyword] });\r\n//export const TDiff = createChevToken({ name: 'Diff', pattern: /diff/, categories: [TKeyword] });\r\n\r\n// Rules, moral modifiers\r\nexport const TIs = createChevToken({ name: 'Is', pattern: /is/, categories: [TKeyword] });\r\nexport const TGood = createChevToken({ name: 'Good', pattern: /good/, categories: [TKeyword, TMoralLit] });\r\nexport const TBad = createChevToken({ name: 'Bad', pattern: /bad/, categories: [TKeyword, TMoralLit] });\r\n\r\n// Logical operators\r\nexport const TNot = createChevToken({ name: 'Not', pattern: /not/, categories: [TKeyword, TLogicalOP] });\r\nexport const TOr = createChevToken({ name: 'Or', pattern: /or/, categories: [TKeyword, TLogicalOP] });\r\nexport const TXor = createChevToken({ name: 'XOr', pattern: /xor/, categories: [TKeyword, TLogicalOP] });\r\nexport const TAnd = createChevToken({ name: 'And', pattern: /and/, categories: [TKeyword, TLogicalOP] });\r\nexport const TImpl = createChevToken({ name: 'Impl', pattern: /impl/, categories: [TKeyword, TLogicalOP] });\r\nexport const TEq = createChevToken({ name: 'Eq', pattern: /eq/, categories: [TKeyword] });\r\n\r\n// Misc\r\nexport const TLParen = createChevToken({ name: 'LParen', pattern: /\\(/ });\r\nexport const TRParen = createChevToken({ name: 'RParen', pattern: /\\)/ });\r\nexport const TLCurly = createChevToken({ name: 'LCurly', pattern: /{/ });\r\nexport const TRCurly = createChevToken({ name: 'RCurly', pattern: /}/ });\r\nexport const TDot = createChevToken({ name: 'Dot', pattern: /\\./ });\r\n\r\n// ID\r\nexport const TID = createChevToken({ name: 'ID', pattern: /\\w+/ });\r\nexport const TQUOTED_STRING = createChevToken({ name: 'QUOTED_STRING', pattern: /\"([^\\n\\r\"])*\"/ });\r\n\r\nexport const allKeywords: string[] = [];\r\n\r\nfor (const token of allTokens) {\r\n    if (token.CATEGORIES !== undefined) {\r\n        for (const cat of token.CATEGORIES) {\r\n            if (cat.name === 'Keyword') {\r\n                allKeywords.push((token.PATTERN as any).source);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// TODO\r\nexport const keywordSet = (): ReadonlySet<string> => {\r\n    return new Set<string>(allKeywords);\r\n};\r\n","/* eslint-disable no-useless-escape, no-cond-assign, no-empty, no-prototype-builtins */\r\nimport CodeMirror from \"codemirror\";\r\nimport {allKeywords} from \"../Tokens\";\r\n\r\nimport 'codemirror/addon/mode/simple.js';\r\n\r\nconst atoms = [\r\n    'true',\r\n    'pos',\r\n    'false',\r\n    'neg',\r\n    'either'\r\n];\r\n\r\nconst builtinKeywords = [\r\n\r\n];\r\n\r\nlet atomRegex = () => {\r\n    let str = '';\r\n    for (const a of atoms) {\r\n        str += a + '|';\r\n    }\r\n    str = str.slice(0, str.length - 1);\r\n    return str;\r\n};\r\n\r\nlet keywordRegex = () => {\r\n    let str = '';\r\n    for (const kw of allKeywords) {\r\n        str += kw + '|';\r\n    }\r\n    for (const kw of builtinKeywords) {\r\n        str += kw + '|';\r\n    }\r\n    str = str.slice(0, str.length - 1);\r\n    return str;\r\n};\r\n\r\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\r\n// Distributed under an MIT license: https://codemirror.net/LICENSE\r\n\r\nCodeMirror.defineSimpleMode(\"lcc\", {\r\n    // The start state contains the rules that are intially used\r\n\r\n    start: [\r\n        // The regex matches the token, the token property contains the type\r\n        {regex: /\"(?:[^\\\\]|\\\\.)*?(?:\"|$)/, token: \"string\"},\r\n        {regex: /'(?:[^\\\\]|\\\\.)*?(?:'|$)/, token: \"string\"},\r\n        {regex: /`/, token: \"string\", next: \"stringtpt\"},\r\n\r\n        // Rules are matched in the order in which they appear, so there is\r\n        // no ambiguity between this one and the one above\r\n        {\r\n            regex: keywordRegex(),\r\n            token: \"keyword\"\r\n        },\r\n        {regex: atomRegex(), token: \"atom\"},\r\n        {\r\n            regex: /\\d+\\.?\\d*/,\r\n            token: \"number\"\r\n        },\r\n        {regex: /\\/\\/.*/, token: \"comment\"},\r\n        // A next property will cause the mode to move to a different state\r\n        {regex: /\\/\\*/, token: \"comment\", next: \"comment\"},\r\n        {regex: /[+\\-*&^%:=<>~!|\\/]+/, token: \"operator\"},\r\n        // indent and dedent properties guide autoindentation\r\n        {regex: /[\\{\\[\\(]/, indent: true},\r\n        {regex: /[\\}\\]\\)]/, dedent: true},\r\n        {regex: /[A-Za-z_]+\\w*/, token: \"variable\"},\r\n    ],\r\n    // The multi-line comment state.\r\n    comment: [\r\n        {regex: /.*?\\*\\//, token: \"comment\", next: \"start\"},\r\n        {regex: /.*/, token: \"comment\"}\r\n    ],\r\n    stringtpt: [\r\n        {regex: /`/, token: \"string\", next: \"start\"},\r\n        {regex: /[^`]*/, token: \"string\"}\r\n    ],\r\n    // The meta property contains global information about the mode. It\r\n    // can contain properties like lineComment, which are supported by\r\n    // all modes, and also directives like dontIndentStates, which are\r\n    // specific to simple modes.\r\n    meta: {\r\n        dontIndentStates: [\"comment\", \"stringtpt\"],\r\n        lineComment: \"//\"\r\n    }\r\n});\r\n\r\nCodeMirror.defineMIME(\"text/x-lcc\", \"lcc\");\r\n\r\n","import {defaultParserErrorProvider, IToken, TokenType} from 'chevrotain';\r\n\r\nexport type IErrorType =\r\n    'TypeError'\r\n    | 'UnsupportedError'\r\n    | 'OperatorError'\r\n    | 'EvalError'\r\n    | 'ContextError'\r\n    | 'AssignmentError'\r\n    | 'DefinitionError'\r\n    | 'MutabilityError'\r\n    | 'ArithmeticError'\r\n    | 'AssertionError'\r\n    | 'HypothesisError'\r\n    | 'RangeError'\r\n    | 'ArrayError';\r\n\r\nexport interface IErrorData {\r\n    type: IErrorType;\r\n    token: IToken;\r\n}\r\n\r\ntype NotAllInputParsedOpts = {\r\n    firstRedundant: IToken;\r\n    ruleName: string;\r\n};\r\n\r\ntype BuildMismatchTokenOpts = {\r\n    expected: TokenType;\r\n    actual: IToken;\r\n    previous: IToken;\r\n    ruleName: string;\r\n};\r\n\r\ntype NoViableAltOpts = {\r\n    expectedPathsPerAlt: TokenType[][][]\r\n    actual: IToken[]\r\n    previous: IToken\r\n    customUserDescription: string\r\n    ruleName: string\r\n};\r\n\r\ntype EarlyExitOpts = {\r\n    expectedIterationPaths: TokenType[][]\r\n    actual: IToken[]\r\n    previous: IToken\r\n    customUserDescription: string\r\n    ruleName: string\r\n};\r\n\r\nexport class InterpreterJSError extends Error {\r\n\r\n    public static create(msg: string, type: IErrorType, token: IToken): InterpreterJSError {\r\n        return new InterpreterJSError(msg, {type, token: token});\r\n    }\r\n\r\n    // Assignment, definition and evaluation\r\n\r\n    public static createVarDoesNotExist(id: string, token: IToken): InterpreterJSError {\r\n        return new InterpreterJSError(`A variable with id '${id}' does not exist.`, {\r\n            type: 'DefinitionError',\r\n            token: token\r\n        });\r\n    }\r\n\r\n    public static createVarAlreadyExists(id: string, token: IToken): InterpreterJSError {\r\n        return new InterpreterJSError(`A variable with id '${id}' already exists.`, {\r\n            type: 'DefinitionError',\r\n            token: token\r\n        });\r\n    }\r\n\r\n    public static createReservedName(id: string, token: IToken): InterpreterJSError {\r\n        return new InterpreterJSError(`'${id}' is a reserved name.`, {type: 'DefinitionError', token: token});\r\n    }\r\n\r\n    // General\r\n\r\n    public static createOpNotRecognized(op: string, symbs: string, token: IToken): InterpreterJSError {\r\n        return new InterpreterJSError(`(BUG) '${op}' operation not recognized: ${symbs}.`, {\r\n            type: 'OperatorError',\r\n            token: token\r\n        });\r\n    }\r\n\r\n    public static createOpNotSupportedForType(op: string, type: string, token: IToken): InterpreterJSError {\r\n        return new InterpreterJSError(`'${op}' operation is not supported for type: ${type}.`, {\r\n            type: 'OperatorError',\r\n            token: token\r\n        });\r\n    }\r\n\r\n    public readonly data: IErrorData;\r\n\r\n    constructor(msg: string, data: IErrorData) {\r\n        super(msg);\r\n        this.data = data;\r\n    }\r\n}\r\n\r\n// Need to clean this up.\r\nexport const LMParserErrorProvider = {\r\n\r\n    buildMismatchTokenMessage: function (options: BuildMismatchTokenOpts) {\r\n        switch (options.expected.name) {\r\n        case 'ID':\r\n            if (options.ruleName === 'hypDeclaration') {\r\n                return `Missing or malformed variable name in 'hyp' declaration on line '${options.previous.startLine}'.`;\r\n            } else if (options.ruleName === 'ruleDeclaration') {\r\n                return `Missing or malformed variable name in 'rule' declaration on line '${options.previous.startLine}'.`;\r\n            } else if (options.ruleName === 'solverStatement') {\r\n                if (options.previous.image === 'solver') {\r\n                    // Solver statement is tested first, and they look the same up to the third token.\r\n                    return `Missing or malformed solver variable name in 'solver' declaration on line '${options.previous.startLine}'.`;\r\n                } else if (options.previous.image === 'apply' || options.previous.image === 'omit') {\r\n                    // Solver statement is tested first, and they look the same up to the third token.\r\n                    return `Missing or malformed rule variable name in 'solver' declaration on line '${options.previous.startLine}'.`;\r\n                }\r\n            } else if (options.ruleName === 'compareStatement') {\r\n                if (options.previous.image === 'sim') {\r\n                    // Solver statement is tested first, and they look the same up to the third token.\r\n                    return `Missing or malformed solver variable name in 'compare' declaration on line '${options.previous.startLine}'.`;\r\n                } else {\r\n                    // Solver statement is tested first, and they look the same up to the third token.\r\n                    return `Missing or malformed solver variable name in 'compare' declaration on line '${options.previous.startLine}'.`;\r\n                }\r\n            }\r\n            break;\r\n        case 'Def':\r\n            return `Missing or malformed '=' in rule declaration on line '${options.previous.startLine}'. A rule must be on the form 'hyp X = ... ' where 'X' is the name, e.g. 'rule MyRule = ...'.`;\r\n        case 'QUOTED_STRING':\r\n            if (options.ruleName === 'hypDeclaration') {\r\n                if (options.previous.tokenType.name === 'ID') {\r\n                    return `Missing or malformed first quoted string parameter (positive statement) in 'hyp' statement on line ${options.previous.startLine}.`;\r\n                } else {\r\n                    return `Missing or malformed second quoted string parameter (negative statement) in 'hyp' statement on line ${options.previous.startLine}.`;\r\n                }\r\n            }\r\n            break;\r\n        case 'MoralLit':\r\n            return `Missing 'good' or 'bad' in rule declaration on line '${options.previous.startLine}'.`;\r\n        default:\r\n        }\r\n        return defaultParserErrorProvider.buildMismatchTokenMessage(options);\r\n    },\r\n\r\n    buildNotAllInputParsedMessage: function (options: NotAllInputParsedOpts) {\r\n        switch (options.firstRedundant.image) {\r\n        case 'hyp':\r\n            return `unexpected 'hyp'. Rule declarations must be between hyp declarations and solver declarations.`;\r\n        case 'rule':\r\n            return `unexpected 'rule'. Rule declarations must be between hyp declarations and solver declarations.`;\r\n        case 'solver':\r\n            return `unexpected 'solver'. Solver statements must be between rule declarations and comparisons, and solver declarations must come before solver statements.`;\r\n        case 'compare':\r\n            return `unexpected 'solver'. Solver statements must be between rule declarations and comparisons, and solver declarations must come before solver statements.`;\r\n        default:\r\n        }\r\n\r\n        return defaultParserErrorProvider.buildNotAllInputParsedMessage(options);\r\n    },\r\n\r\n    buildNoViableAltMessage: function (options: NoViableAltOpts) {\r\n        if (options.previous) {\r\n            switch (options.previous.tokenType.name) {\r\n            case 'Def':\r\n                return `Error in rule declaration on line '${options.previous.startLine}'. Rule declarations must be on the form 'rule <name> = <logic>' where logic is a formula.`;\r\n            case 'ID':\r\n                if (options.ruleName === 'solverStatement') {\r\n                    return `Error in solver declaration on line '${options.previous.startLine}'. Solver statements must be on the form 'solver <name>' followed by a quoted string (in declarations) or a solver operation. Additionally, solver declarations must come before solver statements.`;\r\n                }\r\n                break;\r\n            case 'Compare':\r\n                return `Error in comparison statement on line '${options.previous.startLine}'. 'compare' must be followed with a comparison keyword (e.g. 'sim').`;\r\n            default:\r\n            }\r\n        }\r\n        return defaultParserErrorProvider.buildNoViableAltMessage(options);\r\n    },\r\n\r\n    buildEarlyExitMessage: function (options: EarlyExitOpts) {\r\n        return defaultParserErrorProvider.buildEarlyExitMessage(options);\r\n    }\r\n\r\n};\r\n","import {\r\n    CstParser,\r\n    ILexingError,\r\n    IRecognitionException,\r\n    Lexer\r\n} from 'chevrotain';\r\n\r\nimport {\r\n    allTokens,\r\n    TAnd, TDef, TEq, TID, TImpl, TLParen,\r\n    TOr, TQUOTED_STRING, TRParen, TRule, TRun,\r\n    TSolver, TXor, TSim, TCompare, TDot, TBoolLit,\r\n    TIs, TMoralLit, THyp, TSolverRuleOP, TPrint, TNot, TPrimary\r\n} from './Tokens';\r\nimport {LMParserErrorProvider} from \"./Errors\";\r\n\r\nexport interface ParserResult {\r\n    cst: any;\r\n    lexErrors: ILexingError[];\r\n    parseErrors: IRecognitionException[];\r\n}\r\n\r\nconst LLexer = new Lexer(allTokens);\r\n\r\nexport class Parser extends CstParser {\r\n    public static createParser(): Parser {\r\n        const parser = new Parser();\r\n        parser.performSelfAnalysis();\r\n        return parser;\r\n    }\r\n\r\n    private constructor() {\r\n        super(allTokens, {\r\n            errorMessageProvider: LMParserErrorProvider\r\n        });\r\n    }\r\n\r\n    private readonly parenthesizedExpression = this.RULE('parenthesizedExpression', () => {\r\n        this.CONSUME(TLParen);\r\n        this.SUBRULE(this.logicalEQExpression);\r\n        this.CONSUME(TRParen);\r\n    });\r\n\r\n    private readonly primaryExpression = this.RULE('primaryExpression', () => {\r\n        this.OR([\r\n            {ALT: () => this.CONSUME(TID)},\r\n            {ALT: () => this.SUBRULE(this.parenthesizedExpression)}\r\n        ]);\r\n        this.OPTION(() => {\r\n            this.CONSUME(TDot);\r\n            this.CONSUME(TBoolLit);\r\n        });\r\n    });\r\n\r\n    private readonly logicalNOTExpression = this.RULE('logicalNOTExpression', () => {\r\n        this.OR([\r\n            {ALT: () => {\r\n                this.CONSUME(TNot);\r\n                this.SUBRULE(this.logicalEQExpression);\r\n            }},\r\n            {ALT: () => this.SUBRULE(this.primaryExpression)}\r\n        ]);\r\n    });\r\n\r\n    private readonly logicalANDExpression = this.RULE('logicalANDExpression', () => {\r\n        this.SUBRULE(this.logicalNOTExpression);\r\n        this.MANY(() => {\r\n            this.CONSUME(TAnd);\r\n            this.SUBRULE2(this.logicalNOTExpression);\r\n        });\r\n    });\r\n\r\n    private readonly logicalXORExpression = this.RULE('logicalXORExpression', () => {\r\n        this.SUBRULE(this.logicalANDExpression);\r\n        this.MANY(() => {\r\n            this.CONSUME(TXor);\r\n            this.SUBRULE2(this.logicalANDExpression);\r\n        });\r\n    });\r\n\r\n    private readonly logicalORExpression = this.RULE('logicalORExpression', () => {\r\n        this.SUBRULE(this.logicalXORExpression);\r\n        this.MANY(() => {\r\n            this.CONSUME(TOr);\r\n            this.SUBRULE2(this.logicalXORExpression);\r\n        });\r\n    });\r\n\r\n    private readonly logicalImplExpression = this.RULE('logicalImplExpression', () => {\r\n        this.SUBRULE(this.logicalORExpression);\r\n        this.MANY(() => {\r\n            this.CONSUME(TImpl);\r\n            this.SUBRULE2(this.logicalORExpression);\r\n        });\r\n    });\r\n\r\n    private readonly logicalEQExpression = this.RULE('logicalEQExpression', () => {\r\n        this.SUBRULE(this.logicalImplExpression);\r\n        this.MANY(() => {\r\n            this.CONSUME(TEq);\r\n            this.SUBRULE2(this.logicalImplExpression);\r\n        });\r\n    });\r\n\r\n    private readonly hypDeclaration = this.RULE('hypDeclaration', () => {\r\n        this.CONSUME(THyp);\r\n        this.CONSUME(TID);\r\n        this.CONSUME(TQUOTED_STRING);\r\n        this.CONSUME2(TQUOTED_STRING);\r\n    });\r\n\r\n    private readonly ruleDeclaration = this.RULE('ruleDeclaration', () => {\r\n        this.CONSUME(TRule);\r\n        this.CONSUME(TID);\r\n        this.CONSUME(TDef);\r\n        this.SUBRULE(this.logicalEQExpression);\r\n        this.OPTION(() => {\r\n            this.CONSUME(TIs);\r\n            this.CONSUME(TMoralLit);\r\n        });\r\n    });\r\n\r\n    private readonly solverDeclaration = this.RULE('solverDeclaration', () => {\r\n        this.CONSUME(TSolver);\r\n        this.CONSUME(TID);\r\n        this.CONSUME(TQUOTED_STRING);\r\n    });\r\n\r\n    private readonly solverStatement = this.RULE('solverStatement', () => {\r\n        this.CONSUME(TSolver);\r\n        this.CONSUME(TID);\r\n        this.OR([\r\n            {\r\n                ALT: () => {\r\n                    this.CONSUME(TSolverRuleOP);\r\n                    this.CONSUME2(TID);\r\n                }\r\n            },\r\n            {\r\n                ALT: () => {\r\n                    this.CONSUME(TRun);\r\n                }\r\n            },\r\n            {\r\n                ALT: () => {\r\n                    this.CONSUME(TPrint);\r\n                }\r\n            },\r\n            {\r\n                ALT: () => {\r\n                    this.CONSUME(TPrimary);\r\n                    this.CONSUME3(TID);\r\n                }\r\n            }\r\n        ]);\r\n\r\n    });\r\n\r\n    private readonly compareStatement = this.RULE('compareStatement', () => {\r\n        this.CONSUME(TCompare);\r\n        this.OR([\r\n            {ALT: () => this.CONSUME(TSim)}\r\n        ]);\r\n        this.CONSUME(TID);\r\n        this.CONSUME2(TID);\r\n    });\r\n\r\n    private readonly program = this.RULE('program', () => {\r\n\r\n        this.MANY(() => {\r\n            this.SUBRULE(this.hypDeclaration);\r\n        });\r\n\r\n        this.MANY2(() => {\r\n            this.SUBRULE(this.ruleDeclaration);\r\n        });\r\n\r\n        this.MANY3(() => {\r\n            this.SUBRULE(this.solverDeclaration);\r\n        });\r\n\r\n        this.MANY4(() => {\r\n            this.SUBRULE(this.solverStatement);\r\n        });\r\n\r\n        this.MANY5(() => {\r\n            this.SUBRULE(this.compareStatement);\r\n        });\r\n\r\n    });\r\n\r\n    parse(script: string): ParserResult {\r\n        const lexResult = LLexer.tokenize(script);\r\n\r\n        // setting a new input will RESET the parser instance's state.\r\n        this.input = lexResult.tokens;\r\n\r\n        // any top level rule may be used as an entry point\r\n        const cst = this.program();\r\n\r\n        return {\r\n            cst: cst,\r\n            lexErrors: lexResult.errors,\r\n            parseErrors: parser.errors\r\n        };\r\n    }\r\n}\r\n\r\nexport const parser = Parser.createParser();\r\n","import {ResultDataSolver} from \"./Interpreter\";\r\nimport {Operand, Operands, Solution} from \"logic-solver\";\r\n\r\nexport type TypeID = 'hyp' | 'rule' | 'solver';\r\n\r\nexport type VariableBase = {\r\n    readonly id: string;\r\n}\r\n\r\nexport type HypVariable = {\r\n    readonly type: 'hyp';\r\n    readonly meta: [string, string];\r\n} & VariableBase;\r\n\r\nexport type RuleVariable = {\r\n    readonly type: 'rule';\r\n    readonly data: Operand;\r\n} & VariableBase;\r\n\r\nexport type SolverResult = {\r\n    solverRes: Solution;\r\n    solverCon: Solution;\r\n    results: ResultDataSolver\r\n};\r\n\r\nexport type SolverVariable = {\r\n    readonly type: 'solver';\r\n    readonly meta: string;\r\n    rules: Operands[];\r\n    pruned: Operands[];\r\n    solverResult: SolverResult | undefined;\r\n    primaryHyp: string | undefined;\r\n} & VariableBase;\r\n\r\nexport type Variable = HypVariable | RuleVariable | SolverVariable;\r\n\r\nexport const createHypVar = (id: string, meta: [string, string]): HypVariable => {\r\n    return {\r\n        id,\r\n        type: 'hyp',\r\n        meta\r\n    };\r\n};\r\n\r\nexport const createRuleVar = (id: string, data: Operand): RuleVariable => {\r\n    return {\r\n        id,\r\n        type: 'rule',\r\n        data\r\n    };\r\n};\r\n\r\nexport const createSolverVar = (id: string, meta: string): SolverVariable => {\r\n    return {\r\n        id,\r\n        type: 'solver',\r\n        meta,\r\n        rules: [],\r\n        pruned: [],\r\n        solverResult: undefined,\r\n        primaryHyp: undefined\r\n    };\r\n};\r\n\r\nexport const ruleFromVar = (vari: Variable): Operand => {\r\n    if (vari.type === 'hyp') {\r\n        return vari.id;\r\n    } else if (vari.type === 'rule') {\r\n        return vari.data;\r\n    } else {\r\n        throw new Error(`BUG: Variable ${vari.id} is not an atom or rule variable.`);\r\n    }\r\n};\r\n","/* eslint @typescript-eslint/no-explicit-any: 0 */\r\n/* eslint @typescript-eslint/explicit-module-boundary-types: 0 */\r\nimport {parser} from './Parser';\r\n\r\nimport {IToken} from 'chevrotain';\r\nimport {keywordSet} from './Tokens';\r\nimport {InterpreterJSError} from './Errors';\r\nimport {\r\n    createHypVar,\r\n    createRuleVar,\r\n    createSolverVar, HypVariable,\r\n    ruleFromVar, RuleVariable,\r\n    SolverVariable,\r\n    Variable\r\n} from \"./Variable\";\r\n\r\nimport Logic from 'logic-solver';\r\n\r\nexport type IMessageType = 'warning' | 'error' | 'solver';\r\nexport type IErrorCType = 'LexerError' | 'ParserError' | 'InterpreterError' | 'JSError';\r\n\r\n// Returned from interpret method.\r\nexport interface InterpreterResult {\r\n    ret: boolean;\r\n    messages: ConsoleMessage[];\r\n    solverResults: ResultDataSolver[];\r\n    compResults: ResultDataComp[];\r\n}\r\n\r\n// A console message. Returned in interpret method.\r\nexport interface ConsoleMessage {\r\n    type: IMessageType;\r\n    message: string;\r\n    eType?: IErrorCType;\r\n    subType?: string;\r\n    line?: number;\r\n    lineOffset?: number;\r\n    column?: number;\r\n}\r\n\r\n// Comparisons. Only supports 'similarity' atm.\r\nexport type CompDataTypeID = 'similarity';\r\n\r\n// Result from running a solver.\r\nexport type ResultDataSolver = {\r\n    solverID: string;\r\n    solverMeta: string;\r\n    hyps: [string, string, string][];\r\n    numHyps: number;\r\n    numCases: number;\r\n    goodStates: [string, boolean][][];\r\n    badStates: [string, boolean][][];\r\n    neutralStates: [string, boolean][][];\r\n    aLevel: [number, number];\r\n    mBalance: [number, number] | undefined;\r\n    mEntropy: number | undefined;\r\n    mEntropyNorm: number | undefined;\r\n    mEntropyScale: [number, number] | undefined;\r\n    formulaRes: string;\r\n    formulaCon: string;\r\n};\r\n\r\n// Result from running a comparison.\r\nexport type ResultDataComp = {\r\n    subtype: CompDataTypeID;\r\n    solverID1: string;\r\n    solverMeta1: string;\r\n    solverID2: string;\r\n    solverMeta2: string;\r\n    goodStates: [string, boolean][][];\r\n    badStates: [string, boolean][][];\r\n    neutralStates: [string, boolean][][];\r\n    similarity: number;\r\n    formulaRes: string;\r\n    formulaCon: string;\r\n};\r\n\r\n// Dummy token for errors.\r\nexport const dummyToken = {\r\n    image: '',\r\n    startOffset: 0,\r\n    startLine: 0,\r\n    startColumn: 0,\r\n    endOffset: 0,\r\n    endLine: 0,\r\n    endColumn: 0,\r\n    isInsertedInRecovery: false,\r\n    tokenTypeIdx: 0,\r\n    tokenType: {\r\n        name: 'dummy'\r\n    }\r\n};\r\n\r\n// For aborting the execution of a solver.\r\nexport class ExecutionController {\r\n    public aborted = false;\r\n}\r\n\r\nconst BaseCstVisitor = parser.getBaseCstVisitorConstructor();\r\n\r\nexport default class Interpreter extends BaseCstVisitor {\r\n\r\n    private _keywords: ReadonlySet<string> = keywordSet();\r\n    private _varTable: Map<string, Variable> = new Map();\r\n    private _hyps: HypVariable[] = [];\r\n    private _po2: number[] = [];\r\n\r\n    private _solverResults: ResultDataSolver[] = [];\r\n    private _compResults: ResultDataComp[] = [];\r\n\r\n    private _consoleMessages: ConsoleMessage[] = [];\r\n\r\n    private _ec: ExecutionController = new ExecutionController();\r\n\r\n    constructor() {\r\n        super();\r\n        // This helper will detect any missing or redundant methods on this visitor\r\n        this.validateVisitor();\r\n    }\r\n\r\n    parenthesizedExpression(ctx: any): RuleVariable {\r\n        return this.visit(ctx.logicalEQExpression[0]) as RuleVariable;\r\n    }\r\n\r\n    primaryExpression(ctx: any): RuleVariable {\r\n        // A hypothetical or a rule\r\n        if (ctx.ID !== undefined) {\r\n            const token = this._getToken(ctx.ID[0]);\r\n            const id = token.image;\r\n            const vari = this.getVariable(id);\r\n            if (vari === undefined) {\r\n                throw InterpreterJSError.createVarDoesNotExist(id, token);\r\n            } else {\r\n                // Must be 'rule' or 'hyp'.\r\n                if (vari.type !== 'rule' && vari.type !== 'hyp') {\r\n                    throw InterpreterJSError.create(`Variable ${vari.id} is not a rule or a hypothetical.`, 'TypeError', token);\r\n                }\r\n                // If there is member access, i.e. \"var.member\".\r\n                if (ctx.BoolLit !== undefined) {\r\n                    const bToken = this._getToken(ctx.BoolLit[0]);\r\n                    const bStr = bToken.image;\r\n\r\n                    // This means \"P.pos or P.neg\".\r\n                    if (bStr === 'either') {\r\n                        // We turn the variable into a rule variable, meaning hypotheticals will be converted.\r\n                        // Same in all cases here.\r\n                        const ruleData = ruleFromVar(vari);\r\n                        return createRuleVar('', Logic.or(ruleData, Logic.not(ruleData)));\r\n                    } else if (bStr === 'false' || bStr === 'neg') {\r\n                        return createRuleVar('', Logic.not(ruleFromVar(vari)));\r\n                    } else {\r\n                        // 'pos' or 'true'\r\n                        return createRuleVar('', ruleFromVar(vari));\r\n                    }\r\n                } else {\r\n                    // Defaults to pos/true.\r\n                    return createRuleVar('', ruleFromVar(vari));\r\n                }\r\n            }\r\n        } else {\r\n            // Parenthesized expression is the only choice other than a variable ID.\r\n            return this.visit(ctx.parenthesizedExpression[0]) as RuleVariable;\r\n        }\r\n    }\r\n\r\n    logicalNOTExpression(ctx: any): RuleVariable {\r\n        // Get the first variable.\r\n        if (ctx.Not === undefined) {\r\n            return this.visit(ctx.primaryExpression[0]) as RuleVariable;\r\n        } else {\r\n            // const token = this._getToken(ctx.And[0]);\r\n            // for keeping all operands (Logic objects and variable names).\r\n            const vari = this.visit(ctx.logicalEQExpression[0]) as RuleVariable;\r\n            // Take all data and pass it to a Logic object.\r\n            return createRuleVar('', Logic.not(vari.data));\r\n        }\r\n    }\r\n\r\n    logicalANDExpression(ctx: any): RuleVariable {\r\n        // Get the first variable.\r\n        const vari = this.visit(ctx.logicalNOTExpression[0]) as RuleVariable;\r\n        // If there is at least one 'and', we gather all variables and 'and's and evaluate.\r\n        if (ctx.And !== undefined) {\r\n            // const token = this._getToken(ctx.And[0]);\r\n            // for keeping all operands (Logic objects and variable names).\r\n            const data = [];\r\n            data.push(ruleFromVar(vari));\r\n            for (let i = 0; i < ctx.And.length; i++) {\r\n                // Get all variables and push the rule to the array.\r\n                const vari2 = this.visit(ctx.logicalNOTExpression[i + 1]) as RuleVariable;\r\n                data.push(ruleFromVar(vari2));\r\n            }\r\n            // Take all data and pass it to a Logic object.\r\n            return createRuleVar('', Logic.and(data));\r\n        } else {\r\n            return vari;\r\n        }\r\n    }\r\n\r\n    logicalXORExpression(ctx: any): RuleVariable {\r\n        // See docs for 'and'\r\n        const vari = this.visit(ctx.logicalANDExpression[0]) as RuleVariable;\r\n        if (ctx.XOr !== undefined) {\r\n            // const token = this._getToken(ctx.XOr[0]);\r\n            const data = [];\r\n            data.push(ruleFromVar(vari));\r\n            for (let i = 0; i < ctx.XOr.length; i++) {\r\n                const vari2 = this.visit(ctx.logicalANDExpression[i + 1]) as RuleVariable;\r\n                data.push(ruleFromVar(vari2));\r\n            }\r\n            return createRuleVar('', Logic.xor(data));\r\n        } else {\r\n            return vari;\r\n        }\r\n    }\r\n\r\n    logicalORExpression(ctx: any): RuleVariable {\r\n        // See docs for 'and'\r\n        const vari = this.visit(ctx.logicalXORExpression[0]) as RuleVariable;\r\n        if (ctx.Or !== undefined) {\r\n            // const token = this._getToken(ctx.Or[0]);\r\n            const data = [];\r\n            data.push(ruleFromVar(vari));\r\n            for (let i = 0; i < ctx.Or.length; i++) {\r\n                const vari2 = this.visit(ctx.logicalXORExpression[i + 1]) as RuleVariable;\r\n                data.push(ruleFromVar(vari2));\r\n            }\r\n            return createRuleVar('', Logic.or(data));\r\n        } else {\r\n            return vari;\r\n        }\r\n    }\r\n\r\n    logicalImplExpression(ctx: any): RuleVariable {\r\n        // See docs for 'and', except we do these as nested \"(((A -> B) -> C) -> ... ) \".\r\n        let vari = this.visit(ctx.logicalORExpression[0]) as RuleVariable;\r\n        if (ctx.Impl !== undefined) {\r\n            // const token = this._getToken(ctx.Impl[0]);\r\n            for (let i = 0; i < ctx.Impl.length; i++) {\r\n                const vari2 = this.visit(ctx.logicalORExpression[i + 1]) as RuleVariable;\r\n                vari = createRuleVar('', Logic.implies(vari.data, vari2.data));\r\n            }\r\n        }\r\n        return vari;\r\n    }\r\n\r\n    logicalEQExpression(ctx: any): RuleVariable {\r\n        // See docs for 'and'\r\n        let vari = this.visit(ctx.logicalImplExpression[0]) as RuleVariable;\r\n        if (ctx.Eq !== undefined) {\r\n            // const token = this._getToken(ctx.Eq[0]);\r\n            for (let i = 0; i < ctx.Eq.length; i++) {\r\n                const vari2 = this.visit(ctx.logicalImplExpression[i + 1]) as RuleVariable;\r\n                vari = createRuleVar('', Logic.equiv(vari.data, vari2.data));\r\n            }\r\n        }\r\n        return vari;\r\n    }\r\n\r\n    hypDeclaration(ctx: any): void {\r\n        // Get the variable ID and check that it does not already exist.\r\n        const varIdToken = this._getToken(ctx.ID[0]);\r\n        const varId = varIdToken.image;\r\n        // The string for when the hypothetical is true\r\n        const metaToken = this._getToken(ctx.QUOTED_STRING[0]);\r\n        const meta = metaToken.image;\r\n        if (meta === '\"\"') {\r\n            throw InterpreterJSError.create(`The quoted strings in 'hyp' declarations must not be empty.`, 'DefinitionError', varIdToken);\r\n        }\r\n        // The string for when the hypothetical is false\r\n        const metaToken2 = this._getToken(ctx.QUOTED_STRING[1]);\r\n        const meta2 = metaToken2.image;\r\n        if (meta2 === '\"\"') {\r\n            throw InterpreterJSError.create(`The quoted strings in 'hyp' declarations must not be empty.`, 'DefinitionError', varIdToken);\r\n        }\r\n        // Check that the variable id is available.\r\n        this._checkVarName(varId, varIdToken);\r\n        const vari = createHypVar(varId, [meta.slice(1, -1), meta2.slice(1, -1)]);\r\n        // Add to variable table.\r\n        this.addVariable(varId, vari);\r\n    }\r\n\r\n    ruleDeclaration(ctx: any): void {\r\n        // Get the variable ID and check that it does not already exist.\r\n        const idToken = this._getToken(ctx.ID[0]);\r\n        const id = idToken.image;\r\n        this._checkVarName(id, idToken);\r\n        // Get the logical expression (everything after the '=' sign until optional 'is good/bad')\r\n        let vari = this.visit(ctx.logicalEQExpression[0]) as RuleVariable;\r\n        // If there is an 'is good' or 'is bad'.\r\n        if (ctx.MoralLit !== undefined) {\r\n            const mlToken = this._getToken(ctx.MoralLit[0]);\r\n            const ml = mlToken.image;\r\n            if (ml === 'bad') {\r\n                // Negate the rule.\r\n                vari = createRuleVar(vari.id, Logic.not(vari.data));\r\n            }\r\n            // 'is good' changes nothing.\r\n        } else {\r\n            // defaults to 'is good'.\r\n            vari = createRuleVar(vari.id, vari.data);\r\n        }\r\n        // Add to variable table.\r\n        this.addVariable(id, vari);\r\n    }\r\n\r\n    solverDeclaration(ctx: any): void {\r\n        // Get the variable ID and check that it does not already exist.\r\n        const varIdToken = this._getToken(ctx.ID[0]);\r\n        const varId = varIdToken.image;\r\n        // The description of the solver (as a quoted string).\r\n\r\n        const metaToken = this._getToken(ctx.QUOTED_STRING[0]);\r\n        const meta = metaToken.image;\r\n\r\n        // Check that the variable id is available.\r\n        this._checkVarName(varId, varIdToken);\r\n        this.addVariable(varId, createSolverVar(varId, meta.slice(1, -1)));\r\n    }\r\n\r\n    solverStatement(ctx: any): void {\r\n        // Get variable and make sure it is of type solver.\r\n        const idToken = this._getToken(ctx.ID[0]);\r\n        const id = idToken.image;\r\n        const sVari = this.getVariable(id);\r\n        if (sVari === undefined) {\r\n            throw InterpreterJSError.createVarDoesNotExist(id, idToken);\r\n        }\r\n        if (sVari.type !== 'solver') {\r\n            throw InterpreterJSError.create(`Variable ${sVari.id} is not a solver.`, 'TypeError', idToken);\r\n        }\r\n        // If the command is either 'apply' or 'omit', meaning it relates to a rule.\r\n        if (ctx.SolverRuleOP !== undefined) {\r\n            // Get var and check that it is a rule.\r\n            const ruleOP = this._getToken(ctx.SolverRuleOP[0]).image;\r\n            const idToken2 = this._getToken(ctx.ID[1]);\r\n            const id2 = idToken2.image;\r\n            const rVari = this.getVariable(id2);\r\n            if (rVari === undefined) {\r\n                throw InterpreterJSError.createVarDoesNotExist(id2, idToken2);\r\n            }\r\n            if (rVari.type !== 'rule') {\r\n                throw InterpreterJSError.create(`Variable ${rVari.id} is not a rule.`, 'TypeError', idToken2);\r\n            }\r\n            // If it is 'apply', add the rule to 'rules', otherwise for 'omit' add it to 'pruned'.\r\n            if (ruleOP === 'apply') {\r\n                sVari.rules.push(rVari.data);\r\n            } else {\r\n                sVari.pruned.push(rVari.data);\r\n            }\r\n        } else if (ctx.Primary !== undefined) {\r\n            // Get var and check that it is a rule.\r\n            const ruleOP = this._getToken(ctx.Primary[0]).image;\r\n            const idToken2 = this._getToken(ctx.ID[1]);\r\n            const id2 = idToken2.image;\r\n            const hVari = this.getVariable(id2);\r\n            if (hVari === undefined) {\r\n                throw InterpreterJSError.createVarDoesNotExist(id2, idToken2);\r\n            }\r\n            if (hVari.type !== 'hyp') {\r\n                throw InterpreterJSError.create(`Variable ${hVari.id} is not a hypothetical.`, 'TypeError', idToken2);\r\n            }\r\n            sVari.primaryHyp = hVari.id;\r\n        } else if (ctx.Run !== undefined) {\r\n            // Run.\r\n            this._runSolver(sVari, idToken);\r\n        } else if (ctx.Print !== undefined) {\r\n            // If the command is 'print', make sure that the solver has been run first,\r\n            // so there is something to print.\r\n            const res = sVari.solverResult;\r\n            if (res === undefined) {\r\n                throw InterpreterJSError.create(`Variable ${sVari.id} has no results. It must be run first: 'solver ${sVari.id} run'.`, 'TypeError', idToken);\r\n            }\r\n            // If the solver has been run, push the results to the result list.\r\n            this._solverResults.push(res.results);\r\n        }\r\n    }\r\n\r\n    compareStatement(ctx: any): void {\r\n        // Get first variable. Check that it exists, that the variable is a solver,\r\n        // and that the solutions has been computed.\r\n        const idToken = this._getToken(ctx.ID[0]);\r\n        const id = idToken.image;\r\n        const sVari = this.getVariable(id);\r\n        if (sVari === undefined) {\r\n            throw InterpreterJSError.createVarDoesNotExist(id, idToken);\r\n        }\r\n        if (sVari.type !== 'solver') {\r\n            throw InterpreterJSError.create(`Variable ${sVari.id} is not a solver.`, 'TypeError', idToken);\r\n        }\r\n        if (sVari.solverResult === undefined) {\r\n            throw InterpreterJSError.create(`Variable ${sVari.id} has no results, it must be run: 'solver ${sVari.id} run'.`, 'TypeError', idToken);\r\n        }\r\n\r\n        // Same thing for second variable.\r\n        const idToken2 = this._getToken(ctx.ID[1]);\r\n        const id2 = idToken2.image;\r\n        const sVari2 = this.getVariable(id2);\r\n        if (sVari2 === undefined) {\r\n            throw InterpreterJSError.createVarDoesNotExist(id2, idToken2);\r\n        }\r\n        if (sVari2.type !== 'solver') {\r\n            throw InterpreterJSError.create(`Variable ${sVari2.id} is not a solver.`, 'TypeError', idToken);\r\n        }\r\n        if (sVari2.solverResult === undefined) {\r\n            throw InterpreterJSError.create(`Variable ${sVari2.id} has no results. It must be run first: 'solver ${sVari2.id} run'.`, 'TypeError', idToken2);\r\n        }\r\n\r\n        // Solver variable names and meta.\r\n        const solverID1 = sVari.id;\r\n        const solverMeta1 = sVari.meta;\r\n        const solverID2 = sVari2.id;\r\n        const solverMeta2 = sVari2.meta;\r\n\r\n        // Subtype, e.g. 'similarity', 'difference' (only 'similarity' works for now).\r\n        let subtype: CompDataTypeID = 'similarity';\r\n\r\n        // The results from each solver.\r\n        const results = sVari.solverResult.results;\r\n        const results2 = sVari2.solverResult.results;\r\n\r\n        // if it is a 'similarity' (which it must be for now).\r\n        if (ctx.Sim !== undefined) {\r\n            subtype = 'similarity';\r\n\r\n            // Get all the good, bad, and netural states that are common to both solvers.\r\n            const goodStates = getArrsByComp(results.goodStates, results2.goodStates, arrsAreEqual);\r\n            const badStates = getArrsByComp(results.badStates, results2.badStates, arrsAreEqual);\r\n            const neutralStates = getArrsByComp(results.neutralStates, results2.neutralStates, arrsAreEqual);\r\n\r\n            const numGoodBadStates = goodStates.length + badStates.length;\r\n\r\n            const numStates = Math.pow(2, this._hyps.length);\r\n\r\n            const similarity = (goodStates.length + badStates.length + neutralStates.length) / numStates;\r\n\r\n            const formulaRes = sVari.solverResult.results.formulaRes + ' and ' + sVari2.solverResult.results.formulaRes;\r\n\r\n            const fc1 = sVari.solverResult.results.formulaCon;\r\n            const fc2 = sVari2.solverResult.results.formulaCon;\r\n            let formulaCon = '';\r\n\r\n            if (fc1 === '()') {\r\n                formulaCon = fc2;\r\n            } else if (fc2 === '()') {\r\n                formulaCon = fc1;\r\n            } else {\r\n                formulaCon = fc1 + ' and ' + fc2;\r\n            }\r\n\r\n\r\n            // push the data to the comparison list.\r\n            this._compResults.push({\r\n                subtype,\r\n                solverID1,\r\n                solverMeta1,\r\n                solverID2,\r\n                solverMeta2,\r\n                goodStates,\r\n                badStates,\r\n                neutralStates,\r\n                similarity,\r\n                formulaRes,\r\n                formulaCon\r\n            });\r\n        } else {\r\n            throw InterpreterJSError.create(`The only supported comparison type is similarity ('sim').`, 'UnsupportedError', idToken);\r\n        }\r\n    }\r\n\r\n    program(ctx: any): void {\r\n        // Get all hyp declarations and process them.\r\n        if (ctx.hypDeclaration !== undefined) {\r\n            for (let i = 0; i < ctx.hypDeclaration.length; i++) {\r\n                this.visit(ctx.hypDeclaration[i]);\r\n            }\r\n\r\n            // Create an array of all hyp variables for quick access.\r\n            const hyps = [];\r\n            for (const [key, val] of this._varTable) {\r\n                if (val.type === 'hyp') {\r\n                    hyps.push(val);\r\n                }\r\n            }\r\n\r\n            // Very unlikely that someone will use 30+ hypotheticals, and Bigints are annoying\r\n            // and slow, and doesn't go well with typescript, so we will restrict this to 30 hyps\r\n            // for now so that we can use safe bit operations.\r\n            // More notes about this in the methods 'this._runSolver' and\r\n            // 'this._computeAndAddResults' below.\r\n            if (hyps.length > 30) {\r\n                throw InterpreterJSError.create(`The maximum number of hypotheticals supported is 30`, 'UnsupportedError', dummyToken);\r\n            }\r\n\r\n            this._hyps = hyps;\r\n            const numHyps = hyps.length;\r\n            // Create power-of-two array for doing some math later on.\r\n            const po2: number[] = new Array(numHyps);\r\n            for (let i = 0; i < numHyps; i++) {\r\n                po2[i] = 1 << i;\r\n            }\r\n            this._po2 = po2;\r\n        } else {\r\n            // If there are no hyps, the system will not work.\r\n            throw InterpreterJSError.create(`A system must consist of at least one hypothetical.`, 'EvalError', dummyToken);\r\n        }\r\n\r\n        // Rule declarations.\r\n        if (ctx.ruleDeclaration !== undefined) {\r\n            for (let i = 0; i < ctx.ruleDeclaration.length; i++) {\r\n                this.visit(ctx.ruleDeclaration[i]);\r\n            }\r\n        }\r\n\r\n        // Solver declarations\r\n        if (ctx.solverDeclaration !== undefined) {\r\n            for (let i = 0; i < ctx.solverDeclaration.length; i++) {\r\n                this.visit(ctx.solverDeclaration[i]);\r\n            }\r\n        }\r\n\r\n        // Solver statements ('solver run', 'solver apply', etc.)\r\n        if (ctx.solverStatement !== undefined) {\r\n            for (let i = 0; i < ctx.solverStatement.length; i++) {\r\n                this.visit(ctx.solverStatement[i]);\r\n            }\r\n        }\r\n\r\n        // Comparison statements.\r\n        if (ctx.compareStatement !== undefined) {\r\n            for (let i = 0; i < ctx.compareStatement.length; i++) {\r\n                this.visit(ctx.compareStatement[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Run a solver. TODO split up better\r\n    _runSolver(vari: SolverVariable, token: IToken): void {\r\n        // Check that it hasn't already been run.\r\n        if (vari.solverResult !== undefined) {\r\n            throw InterpreterJSError.create(`Solver '${vari.id}' has already been run.`, 'OperatorError', token);\r\n        }\r\n\r\n        // Check that at least one rule has been applied.\r\n        if (vari.rules.length === 0) {\r\n            throw InterpreterJSError.create(`Solver '${vari.id}' has no applied rules.`, 'OperatorError', token);\r\n        }\r\n        // Instantiate two Solvers\r\n        const solverRes = new Logic.Solver();\r\n        const solverCon = new Logic.Solver();\r\n\r\n        // Add the list of rules.\r\n        for (let i = 0; i < vari.rules.length; i++) {\r\n            const rule = vari.rules[i];\r\n            solverRes.require(rule);\r\n        }\r\n\r\n        // If there are any neutral rules, load up the neutral solver as well.\r\n        if (vari.pruned.length > 0) {\r\n            for (let i = 0; i < vari.pruned.length; i++) {\r\n                const rule = vari.pruned[i];\r\n                solverCon.require(rule);\r\n            }\r\n        }\r\n\r\n        // First run the solver for the good/bad solutions unconstrained.\r\n        const solutionsRes = solve(solverRes, this._ec);\r\n        // TODO\r\n        if (this._ec.aborted) {\r\n            throw InterpreterJSError.create(`Execution of solver aborted`, 'EvalError', token);\r\n        }\r\n        // The run the one for the neutral constraints.\r\n        let solutionsCon: Set<string>[] = [];\r\n        if (vari.pruned.length > 0) {\r\n            solutionsCon = solve(solverCon, this._ec);\r\n        }\r\n\r\n        // TODO\r\n        if (this._ec.aborted) {\r\n            throw InterpreterJSError.create(`Execution of solver aborted`, 'EvalError', token);\r\n        }\r\n\r\n        // Now we figure out what the good solutions are within the given constraints.\r\n        // To get full information about which solutions are removed by the neutral\r\n        // rules we ran two solvers:\r\n        // 'solutionsRes' was run with the normal rules.\r\n        // 'solutionsCon' was run with the neutral rules.\r\n        //\r\n        // The reason is that if we ran it with normal rules using 'Solver.require' and added\r\n        // the neutral constraints using 'Solver.forbid' and we would not know how many\r\n        // states are actually neutral, and how many good/bad rules were actually filtered\r\n        // out by the neutral rules.\r\n        //\r\n        // By running a solver with the neutral rules only, we find all the states (solutions)\r\n        // that are produced by those rules. The set of those solutions we can call 'N'.\r\n        // Then we run a solver with the normal rules and see what those states are: 'R'.\r\n        // The good states that would be filtered out by the neutral states must then be the\r\n        // intersection of those two sets, meaning the good states that would remain after\r\n        // filtering is: 'G = R \\ (R ∩ N)'\r\n        // Finally, if the set of all possible states is 'U' we get the bad states as: 'B = U \\ G \\ N'\r\n        // (G and N always being disjoint because of how 'G' is computed).\r\n        //\r\n        // Some of these computations are done in this method, and some in a method that this\r\n        // method calls in turn.\r\n\r\n        let goodSolutions: Set<string>[] = [];\r\n\r\n        // If there are no neutral solutions, the good states will be\r\n        // exactly those produced from 'solutionsRes'.\r\n        if (solutionsCon.length === 0) {\r\n            goodSolutions = solutionsRes;\r\n        } else {\r\n            // Add all solutions from 'solutionsRes' to 'goodSolutions', except\r\n            // those that appear in 'solutionsCon' (i.e. the set of neutral constraints).\r\n            for (let i = 0; i < solutionsRes.length; i++) {\r\n                const set1 = solutionsRes[i];\r\n                let has = false;\r\n                for (let j = 0; j < solutionsCon.length; j++) {\r\n                    if (setsAreEqual(set1, solutionsCon[j])) {\r\n                        has = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!has) {\r\n                    goodSolutions.push(set1);\r\n                }\r\n            }\r\n        }\r\n\r\n        // The rest of the computation is done in a separate method. We pass it the\r\n        // solver variable, the two solver objects, and the good and neutral solutions.\r\n        this._computeAndAddResults(vari, solverRes, solverCon, goodSolutions, solutionsCon);\r\n    }\r\n\r\n    // TODO split up\r\n    private _computeAndAddResults(\r\n        solverVar: SolverVariable,\r\n        solverRes: any,\r\n        solverCon: any,\r\n        goodSolutions: Set<string>[],\r\n        // previously 'solutionsCon'.\r\n        neutralSolutions: Set<string>[]): void {\r\n\r\n        const hyps = this._hyps;\r\n\r\n        const solverID = solverVar.id;\r\n        const solverMeta = solverVar.meta;\r\n\r\n        // Total number of hypotheticals.\r\n        const numHyps = hyps.length;\r\n\r\n        // Total number of possible states/cases.\r\n        const numCases = Math.pow(2, numHyps);\r\n\r\n        const numNeutralCases = neutralSolutions.length;\r\n        const numGoodBadCases = numCases - numNeutralCases;\r\n        const numGoodCases = goodSolutions.length;\r\n        const numBadCases = numGoodBadCases - numGoodCases;\r\n\r\n        const aLevel: [number, number] = [numNeutralCases, numCases];\r\n        let mBalance: [number, number] | undefined = undefined;\r\n        let mEntropy: number | undefined = undefined;\r\n        let mEntropyNorm: number | undefined = undefined;\r\n        let mEntropyScale: [number, number] | undefined = undefined;\r\n\r\n        // Balance of good and bad, and entropy.\r\n\r\n        // 'numGoodBadCases === 0' is already taken care of by setting all values to 'undefined'\r\n        if (numGoodBadCases > 1) {\r\n            // This case automatically ensures that\r\n            mBalance = [numGoodCases, numGoodBadCases];\r\n\r\n            if (numGoodCases !== 0 && numBadCases !== 0) {\r\n                const badVal = numBadCases / numGoodBadCases;\r\n                const goodVal = numGoodCases / numGoodBadCases;\r\n                mEntropy = -badVal * Math.log2(badVal) - goodVal * Math.log2(goodVal);\r\n\r\n                const lowL = 1 / numGoodBadCases;\r\n                const highL = 1 - lowL;\r\n                const ELow = -lowL * Math.log2(lowL) - highL * Math.log2(highL);\r\n\r\n                if (numGoodBadCases % 2 === 0) {\r\n                    mEntropyScale = [ELow, 1];\r\n                } else {\r\n                    const lowH = (numGoodBadCases - 1) / 2 / numGoodBadCases;\r\n                    const highH = (numGoodBadCases + 1) / 2 / numGoodBadCases;\r\n                    const EHigh = -lowH * Math.log2(lowH) - highH * Math.log2(highH);\r\n                    mEntropyScale = [ELow, EHigh];\r\n                }\r\n\r\n                if (mEntropyScale[0] === mEntropyScale[1]) {\r\n                    mEntropyNorm = 0;\r\n                } else {\r\n                    mEntropyNorm = (mEntropy - mEntropyScale[0]) / (mEntropyScale[1] - mEntropyScale[0]);\r\n                }\r\n            }\r\n        }\r\n\r\n        // From here on we will convert the solutions (good and neutral) to 2d string\r\n        // arrays rather then arrays of sets of strings, and replace the variable names\r\n        // with their meta text (for true or false), which is how they will be presented.\r\n        // We will also use the good and neutral solutions to find what the bad solutions\r\n        // are.\r\n        const goodStates: [string, boolean][][] = [];\r\n        const neutralStates: [string, boolean][][] = [];\r\n        const badStates: [string, boolean][][] = [];\r\n\r\n        // Used to track which of the possible states are good or neutral, so we can find\r\n        // out which states are left (which would be the bad ones).\r\n        const bitSet: Set<number> = new Set();\r\n        // Pre-computed powers of 2\r\n        const po2 = this._po2;\r\n\r\n        // Create the good states from the hyp metas.\r\n        for (let i = 0; i < goodSolutions.length; i++) {\r\n            const res: [string, boolean][] = new Array(numHyps);\r\n            const gs = goodSolutions[i];\r\n            let bits = 0;\r\n            for (let j = 0; j < hyps.length; j++) {\r\n                const hypVar = hyps[j];\r\n                const isPrimary = !!solverVar.primaryHyp && solverVar.primaryHyp === hypVar.id;\r\n                if (gs.has(hypVar.id)) {\r\n                    res[j] = [hypVar.meta[0], isPrimary];\r\n                    // Also add this state to the bitset as occupied.\r\n                    bits |= po2[j];\r\n                } else {\r\n                    res[j] = [hypVar.meta[1], isPrimary];\r\n                }\r\n            }\r\n            bitSet.add(bits);\r\n            goodStates.push(res);\r\n        }\r\n\r\n        // Create the neutral cases. Same as for good states.\r\n        for (let i = 0; i < neutralSolutions.length; i++) {\r\n            const res: [string, boolean][] = new Array(numHyps);\r\n            const cons = neutralSolutions[i];\r\n            let bits = 0;\r\n            for (let j = 0; j < hyps.length; j++) {\r\n                const hypVar = hyps[j];\r\n                const isPrimary = !!solverVar.primaryHyp && solverVar.primaryHyp === hypVar.id;\r\n                if (cons.has(hypVar.id)) {\r\n                    res[j] = [hypVar.meta[0], isPrimary];\r\n                    bits |= po2[j];\r\n                } else {\r\n                    res[j] = [hypVar.meta[1], isPrimary];\r\n                }\r\n            }\r\n            neutralStates.push(res);\r\n            bitSet.add(bits);\r\n        }\r\n\r\n        // Create the bad cases. Just go over all possible states, check if\r\n        // the state is taken (i.e. good or neutral), and if not, add it to\r\n        // the list of bad states.\r\n        for (let i = 0; i < numCases; i++) {\r\n            const res: [string, boolean][] = [];\r\n            if (!bitSet.has(i)) {\r\n                for (let j = 0; j < numHyps; j++) {\r\n                    const hypVar = hyps[j];\r\n                    const isPrimary = !!solverVar.primaryHyp && solverVar.primaryHyp === hypVar.id;\r\n                    if (i & po2[j]) {\r\n                        res[j] = [hypVar.meta[0], isPrimary];\r\n                    } else {\r\n                        res[j] = [hypVar.meta[1], isPrimary];\r\n                    }\r\n                }\r\n                badStates.push(res);\r\n            }\r\n        }\r\n\r\n        // Get string representation of the rules - both ordinary rules and neutrals.\r\n        const formulaRes = formulaToString(solverVar.rules, 'and');\r\n        const formulaCon = formulaToString(solverVar.pruned, 'and');\r\n\r\n        // We convert the variable mappings to an array since the solver results\r\n        // is a presentation object, and we want it to map directly to JSON.\r\n        // Also we want the hyps themselves as a plain array of strings.\r\n        const hypArr: [string, string, string][] = new Array(hyps.length);\r\n        for (let i = 0; i < hyps.length; i++) {\r\n            const hyp = hyps[i];\r\n            const hypID = hyp.id;\r\n            hypArr[i] = [hypID, hyp.meta[0], hyp.meta[1]];\r\n        }\r\n\r\n        // Finally we create the results object.\r\n\r\n        const results: ResultDataSolver = {\r\n            solverID,\r\n            solverMeta,\r\n            mBalance,\r\n            aLevel,\r\n            mEntropy,\r\n            mEntropyNorm,\r\n            mEntropyScale,\r\n            numHyps,\r\n            numCases,\r\n            goodStates,\r\n            neutralStates,\r\n            badStates,\r\n            hyps: hypArr,\r\n            formulaRes,\r\n            formulaCon\r\n        };\r\n\r\n        solverVar.solverResult = {solverRes, solverCon, results};\r\n    }\r\n\r\n    private _checkVarName(varId: string, token: IToken): void {\r\n        if (this.hasVariable(varId)) {\r\n            throw InterpreterJSError.createVarAlreadyExists(varId, token);\r\n        }\r\n        if (this._keywords.has(varId)) {\r\n            throw InterpreterJSError.createReservedName(varId, token);\r\n        }\r\n    }\r\n\r\n    private _getToken(ctx: any): IToken {\r\n        if (ctx.tokenType === undefined) {\r\n            throw new Error('BUG: Trying to use a non-token as a token.');\r\n        }\r\n        return ctx;\r\n    }\r\n\r\n    public addVariable(id: string, vari: Variable): boolean {\r\n        if (this._varTable.has(id)) {\r\n            return false;\r\n        }\r\n        this._varTable.set(id, vari);\r\n        return true;\r\n    }\r\n\r\n    public getVariable(id: string): Variable | undefined {\r\n        return this._varTable.get(id);\r\n    }\r\n\r\n    public hasVariable(id: string): boolean {\r\n        return this._varTable.has(id);\r\n    }\r\n\r\n    public varTable(): Map<string, Variable> {\r\n        return this._varTable;\r\n    }\r\n\r\n    interpret(script: string, ec: ExecutionController): InterpreterResult {\r\n        this._varTable = new Map<string, Variable>();\r\n        this._consoleMessages = [];\r\n        this._hyps = [];\r\n        this._solverResults = [];\r\n        this._compResults = [];\r\n        this._ec = ec;\r\n\r\n        const pRes = parser.parse(script);\r\n        let ret = false;\r\n        if (pRes.parseErrors.length === 0 && pRes.lexErrors.length === 0) {\r\n            try {\r\n                ret = this.visit(pRes.cst) as boolean;\r\n            } catch (err) {\r\n                console.log(err);\r\n                if ('data' in err) {\r\n                    const e = err as InterpreterJSError;\r\n                    const errObj: ConsoleMessage = {\r\n                        type: 'error',\r\n                        eType: 'InterpreterError',\r\n                        subType: e.data.type,\r\n                        line: e.data.token && e.data.token.startLine && !isNaN(e.data.token.startLine) ? e.data.token.startLine : undefined,\r\n                        lineOffset: e.data.token && e.data.token.startOffset && !isNaN(e.data.token.startOffset) ? e.data.token.startOffset : undefined,\r\n                        column: e.data.token && e.data.token.startColumn && !isNaN(e.data.token.startColumn) ? e.data.token.startColumn : undefined,\r\n                        message: err.message\r\n                    };\r\n                    this._consoleMessages.push(errObj);\r\n                } else {\r\n                    const errObj: ConsoleMessage = {\r\n                        type: 'error',\r\n                        eType: 'JSError',\r\n                        subType: err.name,\r\n                        line: -1,\r\n                        lineOffset: -1,\r\n                        column: -1,\r\n                        message: err.message\r\n                    };\r\n                    this._consoleMessages.push(errObj);\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0; i < pRes.lexErrors.length; i++) {\r\n                const err = pRes.lexErrors[i];\r\n                const errObj: ConsoleMessage = {\r\n                    type: 'error',\r\n                    eType: 'LexerError',\r\n                    subType: 'TokenizationError',\r\n                    line: err.line,\r\n                    lineOffset: err.offset,\r\n                    column: err.column,\r\n                    message: err.message\r\n                };\r\n                this._consoleMessages.push(errObj);\r\n            }\r\n            for (let i = 0; i < pRes.parseErrors.length; i++) {\r\n                const err = pRes.parseErrors[i];\r\n                const errObj: ConsoleMessage = {\r\n                    type: 'error',\r\n                    eType: 'ParserError',\r\n                    subType: err.name,\r\n                    line: err.token.startLine,\r\n                    lineOffset: err.token.startOffset,\r\n                    column: err.token.startColumn,\r\n                    message: err.message\r\n                };\r\n                this._consoleMessages.push(errObj);\r\n            }\r\n        }\r\n        return {\r\n            ret,\r\n            messages: this._consoleMessages,\r\n            solverResults: this._solverResults,\r\n            compResults: this._compResults\r\n        };\r\n    }\r\n}\r\n\r\nconst solve = (solver: any, ec: ExecutionController): Set<string>[] => {\r\n\r\n    const solutions: Set<string>[] = [];\r\n    let done = false;\r\n    do {\r\n        const curSol = solver.solve();\r\n\r\n        if (curSol === null) {\r\n            done = true;\r\n        } else {\r\n            solutions.push(new Set(curSol.getTrueVars()));\r\n            solver.forbid(curSol.getFormula());\r\n        }\r\n    } while (!done && !ec.aborted);\r\n    return solutions;\r\n};\r\n\r\nexport const setsAreEqual = (s1: Set<string>, s2: Set<string>) => {\r\n    if (s1.size !== s2.size) {\r\n        return false;\r\n    }\r\n    for (const e of s1) {\r\n        if (!s2.has(e)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n\r\nexport const arrsAreEqual = (arr1: [string, boolean][], arr2: [string, boolean][]): boolean => {\r\n    if (arr1.length !== arr2.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < arr1.length; i++) {\r\n        if (arr1[i][0] !== arr2[i][0]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n\r\nexport const getArrsByComp = (arr1: [string, boolean][][], arr2: [string, boolean][][], comp: (a1: [string, boolean][], a2: [string, boolean][]) => boolean): [string, boolean][][] => {\r\n    const res: [string, boolean][][] = [];\r\n    for (let i = 0; i < arr1.length; i++) {\r\n        const e = arr1[i];\r\n        for (let j = 0; j < arr2.length; j++) {\r\n            if (comp(e, arr2[j])) {\r\n                res.push(e);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return res;\r\n};\r\n\r\nexport const formulaToString = (formulas: any, logic: string): string => {\r\n    let str = '(';\r\n\r\n    for (let i = 0; i < formulas.length; i++) {\r\n        let op = formulas[i];\r\n        if (typeof op === 'string') {\r\n            let idx = 0;\r\n            while (op[idx] === '-' && idx < op.length) {\r\n                idx++;\r\n            }\r\n            op = `${idx % 2 === 1 ? 'not ' : ''}${op.slice(idx)}`;\r\n            str += op;\r\n        } else if (op instanceof Array) {\r\n            str += ` ${formulaToString(op, 'and')} `;\r\n        } else { // Must be an object of type Logic.xxx\r\n            // TODO go over all cases.\r\n            if (op.type === 'not') {\r\n                str += 'not';\r\n                str += ` ${formulaToString([op.operand], 'not')} `;\r\n            } else if (op.type === 'implies' || op.type === 'equiv') {\r\n                str += `${formulaToString([op.A, op.B], op.type)}`;\r\n            } else {\r\n                str += `${formulaToString(op.operands, op.type)}`;\r\n            }\r\n        }\r\n\r\n        if (i + 1 < formulas.length) {\r\n            str += ` ${logic} `;\r\n        }\r\n\r\n    }\r\n\r\n    str += ')';\r\n    // Trim superfluous parantheses (TODO).\r\n    while (str.length >= 4 && str[0] === '(' && str[1] == '(' && str[str.length - 1] === ')' && str[str.length - 2] === ')') {\r\n        str = str.slice(1, -1);\r\n    }\r\n    return str;\r\n};\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('md-card',[_c('md-card-header',[_c('md-card-header-text',[_c('div',{staticClass:\"md-title\"},[_vm._v(_vm._s(_vm.result.solverID))]),_c('div',{staticClass:\"md-subhead\"},[_vm._v(_vm._s(_vm.result.solverMeta))])])],1),_c('md-card-content',[_c('div',{staticClass:\"md-body-2\"},[_vm._v(\"Morally Good States\")]),_c('md-list',{},_vm._l((_vm.result.goodStates),function(goodState,idx){return _c('md-list-item',{key:idx,staticClass:\"statelist\"},[_c('div',{staticClass:\"chiplist\"},_vm._l((goodState),function(state,idxInner){return _c('md-chip',{key:idxInner,staticClass:\"md-primary greenchip\"},[_vm._v(\" \"+_vm._s(state[0] + (state[1] ? ' (primary)' : ''))+\" \")])}),1)])}),1),_c('div',{staticClass:\"md-body-2\"},[_vm._v(\"Morally Bad States\")]),_c('md-list',_vm._l((_vm.result.badStates),function(badState,idx){return _c('md-list-item',{key:idx,staticClass:\"statelist\"},[_c('div',{staticClass:\"chiplist\"},_vm._l((badState),function(state,idxInner){return _c('md-chip',{key:idxInner,staticClass:\"md-primary redchip\"},[_vm._v(\" \"+_vm._s(state[0] + (state[1] ? ' (primary)' : ''))+\" \")])}),1)])}),1),_c('div',{staticClass:\"md-body-2\"},[_vm._v(\"Morally Neutral States\")]),_c('md-list',_vm._l((_vm.result.neutralStates),function(neutralState,idx){return _c('md-list-item',{key:idx,staticClass:\"statelist\"},[_c('div',{staticClass:\"chiplist\"},_vm._l((neutralState),function(state,idxInner){return _c('md-chip',{key:idxInner,staticClass:\"md-primary bluechip\"},[_vm._v(\" \"+_vm._s(state[0] + (state[1] ? ' (primary)' : ''))+\" \")])}),1)])}),1),_c('md-switch',{staticClass:\"md-primary\",model:{value:(_vm.additionalInfo),callback:function ($$v) {_vm.additionalInfo=$$v},expression:\"additionalInfo\"}},[_vm._v(\"Additional information\")])],1),(_vm.additionalInfo)?_c('div',[_c('md-card',{staticClass:\"datacard\"},[_c('md-card-header',[_c('md-card-header-text',[_c('div',{staticClass:\"md-title\"},[_vm._v(_vm._s(_vm.result.numCases))]),_c('div',{staticClass:\"md-subhead\"},[_vm._v(\"Total number of states\")])])],1),_c('md-card-content',[_c('p',[_vm._v(\" The total number of states is the number of possible combinations of hypotheticals. It is also the sum of the amount of good, bad, and neutral states. \")])])],1),_c('md-card',{staticClass:\"datacard\"},[_c('md-card-header',[_c('md-card-header-text',[_c('div',{staticClass:\"md-title\"},[_vm._v(_vm._s(Math.round(100 * (_vm.result.aLevel[0] / _vm.result.aLevel[1])) + '%')+\" \")]),_c('div',{staticClass:\"md-subhead\"},[_vm._v(\"Level of amorality \")])])],1),_c('md-card-content',[_c('p',[_vm._v(\" The level of amorality is the percentage of all states that are neutral. Here, \"+_vm._s(_vm.result.aLevel[0] + '/' + _vm.result.aLevel[1])+\" states are neutral. \")])])],1),_c('md-card',{staticClass:\"datacard\"},[_c('md-card-header',[_c('md-card-header-text',[_c('div',{staticClass:\"md-title\"},[_vm._v(_vm._s(_vm.result.mBalance === undefined ? '-' : Math.round(100 * (_vm.result.mBalance[0] / _vm.result.mBalance[1])) + '%')+\" \")]),_c('div',{staticClass:\"md-subhead\"},[_vm._v(\"Permissiveness \")])])],1),_c('md-card-content',[_c('p',[_vm._v(\" The permissiveness is the percentage of good cases among the total number of good and bad cases. Here, \"+_vm._s(_vm.result.mBalance === undefined ? \"the value can't be computed because there are 0 good or bad cases combined.\" : _vm.result.mBalance[0] + '/' + _vm.result.mBalance[1] + ' states are good.')+\". \")])])],1),_c('md-card',{staticClass:\"datacard\"},[_c('md-card-header',[_c('md-card-header-text',[_c('div',{staticClass:\"md-title\"},[_vm._v(_vm._s(_vm.result.mEntropyNorm === undefined ? '-' : Math.round(100 * (1 - _vm.result.mEntropyNorm) * (1 - _vm.result.aLevel[0] / _vm.result.aLevel[1])) + '%')+\" \")]),_c('div',{staticClass:\"md-subhead\"},[_vm._v(\"Moral sophistication\")])])],1),_c('md-card-content',[_c('p',[_vm._v(\" Moral sophistication is a measure of how selective a rule is about what's good and bad. An even 50/50 split between good and bad means 0 sophistication, and more uneven splits leads to higher values (although 0-to-all splits are regarded as special cases). A higher number of neutral cases will lead to a lower sophistication as well. \")]),_c('p',[_vm._v(\" Mathematically, the moral sophistication value 'S' is computed as 'S = (1 - E)*P' where 'E' is the normalized entropy value (found below), and 'P = N/T' is the number of non-neutral cases (N) divided by the total number of cases (T). \")])])],1),_c('md-card',{staticClass:\"datacard\"},[_c('md-card-header',[_c('md-card-header-text',[_c('div',{staticClass:\"md-title\"},[_vm._v(_vm._s(_vm.result.mEntropy === undefined ? '-' : _vm.result.mEntropy.toFixed(2))+\" \")]),_c('div',{staticClass:\"md-subhead\"},[_vm._v(\"Moral entropy\")])])],1),_c('md-card-content',[_c('p',[_vm._v(\" Moral entropy is a measure of the bias in the set of good and bad states, that also takes the total number of good and bad choices into account. A 50/50 split between good and bad choices will give the highest possible entropy, while a single good choice (or a single bad choice) gives the lowest possible entropy (0 good or bad states are considered special cases). Entropy also gets a larger spread the more possible states there are, meaning 1 good choice out of 5 total states has a higher entropy (less bias) than 1 good state out of 10. \")])])],1),_c('md-card',{staticClass:\"datacard\"},[_c('md-card-header',[_c('md-card-header-text',[_c('div',{staticClass:\"md-title\"},[_vm._v(_vm._s(_vm.result.mEntropyScale === undefined ? '-' : '[' + _vm.result.mEntropyScale[0].toFixed(2) + ', ' + _vm.result.mEntropyScale[1].toFixed(2) + ']')+\" \")]),_c('div',{staticClass:\"md-subhead\"},[_vm._v(\"Local entropy scale\")])])],1),_c('md-card-content',[_c('p',[_vm._v(\" The local entropy scale is the minimum and maximum possible entropy for this system. \")])])],1),_c('md-card',{staticClass:\"datacard\"},[_c('md-card-header',[_c('md-card-header-text',[_c('div',{staticClass:\"md-title\"},[_vm._v(_vm._s(_vm.result.mEntropyNorm === undefined ? '-' : _vm.result.mEntropyNorm.toFixed(2))+\" \")]),_c('div',{staticClass:\"md-subhead\"},[_vm._v(\"Normalized moral entropy\")])])],1),_c('md-card-content',[_c('p',[_vm._v(\" The normalized moral entropy is the moral entropy scaled to [0, 1] using the local scale. If the upper and lower end of the scale is the same number, the normalized moral entropy is set to 0. \")])])],1),_c('md-card',{staticClass:\"datacard\"},[_c('md-card-header',[_c('md-card-header-text',[_c('div',{staticClass:\"md-title\"},[_vm._v(\"Formulas\")])])],1),_c('md-card-content',[_c('h3',[_vm._v(\"Formula for Good/Bad\")]),_c('div',{staticStyle:{\"overflow-x\":\"auto\"}},[_vm._v(_vm._s(_vm.result.formulaRes))]),_c('h3',[_vm._v(\"Formula for Neutral\")]),_c('div',{staticStyle:{\"overflow-x\":\"auto\"}},[_vm._v(_vm._s(_vm.result.formulaCon))])])],1)],1):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Component from \"vue-class-component\";\r\nimport Vue from \"vue\";\r\nimport {Prop} from \"vue-property-decorator\";\r\nimport {ResultDataSolver} from \"../Interpreter\";\r\n\r\n@Component\r\nexport default class Result extends Vue {\r\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\n    @Prop({\r\n        default: () => {\r\n        }\r\n    }) result: ResultDataSolver | undefined;\r\n\r\n    private additionalInfo = false;\r\n}\r\n\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Result.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Result.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Result.vue?vue&type=template&id=8a306c1e&scoped=true&\"\nimport script from \"./Result.vue?vue&type=script&lang=ts&\"\nexport * from \"./Result.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8a306c1e\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('md-card',[_c('md-card-header',[_c('div',{staticClass:\"md-title\"},[_vm._v(\"Comparison\")]),_c('div',{staticClass:\"md-subhead\"},[_vm._v(_vm._s(_vm.result.subtype))])]),_c('md-card-content',[_c('h3',[_vm._v(\"Solver 1: \"+_vm._s(_vm.result.solverID1)+\" (\"+_vm._s(_vm.result.solverMeta1)+\")\")]),_c('h3',[_vm._v(\"Solver 2: \"+_vm._s(_vm.result.solverID2)+\" (\"+_vm._s(_vm.result.solverMeta2)+\")\")]),_c('div',{staticClass:\"md-body-2\"},[_vm._v(\"Morally Good States\")]),_c('md-list',_vm._l((_vm.result.goodStates),function(goodState,idx){return _c('md-list-item',{key:idx,staticClass:\"statelist\"},[_c('div',{staticClass:\"chiplist\"},_vm._l((goodState),function(state,idxInner){return _c('md-chip',{key:idxInner,staticClass:\"md-primary greenchip\"},[_vm._v(\" \"+_vm._s(state[0] + (state[1] ? ' (primary)' : ''))+\" \")])}),1)])}),1),_c('div',{staticClass:\"md-body-2\"},[_vm._v(\"Morally Bad States\")]),_c('md-list',_vm._l((_vm.result.badStates),function(badState,idx){return _c('md-list-item',{key:idx,staticClass:\"statelist\"},[_c('div',{staticClass:\"chiplist\"},_vm._l((badState),function(state,idxInner){return _c('md-chip',{key:idxInner,staticClass:\"md-primary redchip\"},[_vm._v(\" \"+_vm._s(state[0] + (state[1] ? ' (primary)' : ''))+\" \")])}),1)])}),1),_c('div',{staticClass:\"md-body-2\"},[_vm._v(\"Morally Neutral States\")]),_c('md-list',_vm._l((_vm.result.neutralStates),function(neutralState,idx){return _c('md-list-item',{key:idx,staticClass:\"statelist\"},[_c('div',{staticClass:\"chiplist\"},_vm._l((neutralState),function(state,idxInner){return _c('md-chip',{key:idxInner,staticClass:\"md-primary bluechip\"},[_vm._v(\" \"+_vm._s(state[0] + (state[1] ? ' (primary)' : ''))+\" \")])}),1)])}),1),_c('md-switch',{staticClass:\"md-primary\",model:{value:(_vm.additionalInfo),callback:function ($$v) {_vm.additionalInfo=$$v},expression:\"additionalInfo\"}},[_vm._v(\"Additional information\")])],1),(_vm.additionalInfo)?_c('div',[_c('md-card',{staticClass:\"datacard\"},[_c('md-card-header',[_c('md-card-header-text',[_c('div',{staticClass:\"md-title\"},[_vm._v(_vm._s(Math.round(100*_vm.result.similarity) + '%'))]),_c('div',{staticClass:\"md-subhead\"},[_vm._v(\"Similarity\")])])],1),_c('md-card-content',[_c('p',[_vm._v(\" The similiarity is the number of states that the two solvers has in common, divided by the number of total states. If the two solver has no states in common, the similarity would be 0%, and if a solver was compared to itself, the similiarity would be 100%. \")])])],1)],1):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Component from \"vue-class-component\";\r\nimport Vue from \"vue\";\r\nimport {Prop} from \"vue-property-decorator\";\r\nimport {ResultDataComp} from \"../Interpreter\";\r\n\r\n@Component\r\nexport default class Result extends Vue {\r\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\n    @Prop({\r\n        default: () => {\r\n        }\r\n    }) result: ResultDataComp | undefined;\r\n\r\n    private additionalInfo = false;\r\n}\r\n\r\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n\r\nimport Vue from 'vue';\r\nimport Component from \"vue-class-component\";\r\nimport CodeMirror from 'codemirror';\r\nimport '../cm_modes/lcc';\r\nimport Interpreter, {ResultDataSolver, ResultDataComp, ExecutionController} from \"../Interpreter\";\r\nimport Result from \"./Result.vue\";\r\nimport Comp from \"./Comp.vue\";\r\nimport vSelect from 'vue-select';\r\n\r\ntype Theme = {\r\n    name: string,\r\n    label: string\r\n}\r\n\r\nconst EDITOR_CONTENT_COOKIE = \"LogMor.EditorContent\";\r\nconst EDITOR_THEME_COOKIE = \"LogMor.EditorTheme\";\r\n\r\nlet executionController: ExecutionController | undefined;\r\n\r\n@Component({\r\n    components: {\r\n        Comp,\r\n        Result,\r\n        vSelect\r\n    }\r\n})\r\nexport default class LogMor extends Vue {\r\n\r\n    private logOutput: string[] = [];\r\n    private solverResults: ResultDataSolver[] = [];\r\n    private compResults: ResultDataComp[] = [];\r\n    private ide: any;\r\n    private isEvaluating = false;\r\n    private abortingEval = false;\r\n    private printingOutput = false;\r\n    private theme = this.initTheme();\r\n    readonly themeOptions = THEME_OPTIONS;\r\n\r\n    private initTheme(): Theme {\r\n        const theme = Vue.$cookies.get(EDITOR_THEME_COOKIE);\r\n        if (theme && 'name' in theme) {\r\n            return theme;\r\n        } else {\r\n            return {name: 'mbo', label: 'MBO'};\r\n        }\r\n    }\r\n\r\n    themeSelected(theme: Theme) {\r\n        this.ide.setOption('theme', theme.name);\r\n        Vue.$cookies.set(EDITOR_THEME_COOKIE, theme);\r\n    }\r\n\r\n    mounted() {\r\n        this.ide = CodeMirror.fromTextArea(document.getElementById(\"ide\"),\r\n            {\r\n                lineNumbers: true,\r\n                tabSize: 2,\r\n                lineWrapping: true,\r\n                theme: this.theme.name,\r\n                mode: \"lcc\"\r\n            });\r\n        const that = this;\r\n        this.ide.setOption(\"extraKeys\", {\r\n            'Ctrl-Enter': function () {\r\n                that.submitEvaluate();\r\n            }\r\n        });\r\n        this.ide.setSize(null, 500);\r\n        const cookieTxt = Vue.$cookies.get(EDITOR_CONTENT_COOKIE);\r\n        if (cookieTxt && typeof cookieTxt === 'string') {\r\n            this.ide.setValue(cookieTxt);\r\n        } else {\r\n            this.ide.setValue(JERY_AND_GERGE);\r\n            Vue.$cookies.set(EDITOR_CONTENT_COOKIE, JERY_AND_GERGE);\r\n        }\r\n    }\r\n\r\n    submitEvaluate() {\r\n        if (this.isEvaluating) {\r\n            return;\r\n        }\r\n        this.isEvaluating = true;\r\n        executionController = new ExecutionController();\r\n        this.abortingEval = false;\r\n\r\n        this.logOutput = [];\r\n        this.solverResults = [];\r\n        this.compResults = [];\r\n\r\n        const text = this.ide.getValue();\r\n        if (text.replace(/\\s/g, '') === '') {\r\n            return;\r\n        }\r\n        this.evaluate(text);\r\n        Vue.$cookies.set(EDITOR_CONTENT_COOKIE, this.ide.getValue());\r\n    }\r\n\r\n    evaluate(text: string) {\r\n        // TODO maybe include web-workers...\r\n        setTimeout(() => {\r\n            const ret = new Interpreter().interpret(text, executionController as ExecutionController);\r\n            let str: string[] = [];\r\n            for (const item of ret.messages) {\r\n                if (item.type === 'solver') {\r\n                    str.push(item.message);\r\n                } else {\r\n                    if (item.line) {\r\n                        str.push(`${item.subType} (line: ${item.line}): ${item.message}`);\r\n                    } else {\r\n                        str.push(`${item.subType}: ${item.message}`);\r\n                    }\r\n                }\r\n            }\r\n            this.logOutput = str;\r\n            this.solverResults = ret.solverResults;\r\n            this.compResults = ret.compResults;\r\n            this.printingOutput = true;\r\n            this.$nextTick(() => {\r\n                executionController = undefined;\r\n                this.abortingEval = false;\r\n                this.printingOutput = false;\r\n                this.isEvaluating = false;\r\n            });\r\n        }, 100);\r\n    }\r\n\r\n    submitClear() {\r\n        if (this.isEvaluating) {\r\n            return;\r\n        }\r\n        this.logOutput = [];\r\n        this.solverResults = [];\r\n        this.compResults = [];\r\n        this.ide.setValue('');\r\n        Vue.$cookies.set(EDITOR_CONTENT_COOKIE, '');\r\n    }\r\n\r\n    abortEval() {\r\n        if (this.isEvaluating && !this.abortingEval) {\r\n            console.log(\"(abort successful)\");\r\n            this.abortingEval = true;\r\n            (executionController as ExecutionController).aborted = true;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst THEME_OPTIONS = [\r\n    {name: '3024-day', label: '3024 (day)'},\r\n    {name: '3024-night', label: '3024 (night)'},\r\n    {name: 'abcdef', label: 'Abcdef'},\r\n    {name: 'ambiance', label: 'Ambiance'},\r\n    {name: 'ambiance-mobile', label: 'Ambiance (mobile)'},\r\n    {name: 'ayu-dark', label: 'Ayu (dark)'},\r\n    {name: 'ayu-mirage', label: 'Ayu (mirage)'},\r\n    {name: 'base16-dark', label: 'Base16 (dark)'},\r\n    {name: 'base16-light', label: 'Base16 (light)'},\r\n    {name: 'bespin', label: 'Bespin'},\r\n    {name: 'blackboard', label: 'Blackboard'},\r\n    {name: 'cobalt', label: 'Cobalt'},\r\n    {name: 'colorforth', label: 'Color-forth'},\r\n    {name: 'darcula', label: 'Darcula'},\r\n    {name: 'dracula', label: 'Dracula'},\r\n    {name: 'duotone-dark', label: 'Duotone (dark)'},\r\n    {name: 'duotone-light', label: 'Duotone (light)'},\r\n    {name: 'eclipe', label: 'Eclipse'},\r\n    {name: 'elegant', label: 'Elegant'},\r\n    {name: 'erlang-dark', label: 'Erlang (dark)'},\r\n    {name: 'gruvbox-dark', label: 'Gruvbox (dark)'},\r\n    {name: 'hopscotch', label: 'Hopscotch'},\r\n    {name: 'icecoder', label: 'Icecoder'},\r\n    {name: 'idea', label: 'IDEA'},\r\n    {name: 'isotope', label: 'Isotope'},\r\n    {name: 'lesser-dark', label: 'Lesser (dark)'},\r\n    {name: 'liquibyte', label: 'Liquibyte'},\r\n    {name: 'lucario', label: 'Lucario'},\r\n    {name: 'material', label: 'Material'},\r\n    {name: 'material-darker', label: 'Material (darker)'},\r\n    {name: 'material-ocean', label: 'Material (ocean)'},\r\n    {name: 'material-palenight', label: 'Material (pale night)'},\r\n    {name: 'mbo', label: 'MBO'},\r\n    {name: 'mdn-like', label: 'MDN-like'},\r\n    {name: 'midnight', label: 'Midnight'},\r\n    {name: 'monokai', label: 'Monokai'},\r\n    {name: 'moxer', label: 'Moxer'},\r\n    {name: 'neat', label: 'Neat'},\r\n    {name: 'neo', label: 'Neo'},\r\n    {name: 'night', label: 'Night'},\r\n    {name: 'nord', label: 'Nord'},\r\n    {name: 'oceanic-next', label: 'Oceanic Next'},\r\n    {name: 'panda-syntax', label: 'Panda Syntax'},\r\n    {name: 'paraiso-dark', label: 'Paraiso (dark)'},\r\n    {name: 'paraiso-light', label: 'Paraiso (light)'},\r\n    {name: 'pastel-on-dark', label: 'Pastel-on-dark'},\r\n    {name: 'railscasts', label: 'Railscasts'},\r\n    {name: 'rubyblue', label: 'Ruby Blue'},\r\n    {name: 'seti', label: 'SETI'},\r\n    {name: 'shadowfox', label: 'Shadowfox'},\r\n    {name: 'solarized', label: 'Solarized'},\r\n    {name: 'ssms', label: 'SSMS'},\r\n    {name: 'the-matrix', label: 'The Matrix'},\r\n    {name: 'tomorrow-night-bright', label: 'Tomorrow Night (bright)'},\r\n    {name: 'tomorrow-night-eighties', label: 'Tomorrow Night (eighties)'},\r\n    {name: 'ttcn', label: 'TTCN'},\r\n    {name: 'twilight', label: 'Twilight'},\r\n    {name: 'vibrant-ink', label: 'Vibrant Ink'},\r\n    {name: 'xq-dark', label: 'XQ (dark)'},\r\n    {name: 'xq-light', label: 'XQ (light)'},\r\n    {name: 'yeti', label: 'Yeti'},\r\n    {name: 'yonce', label: 'Yonce'},\r\n    {name: 'zenburn', label: 'Zenburn'}\r\n];\r\n\r\nconst JERY_AND_GERGE = `/*\r\n * This script implements a morality about fairness. Two people, Jery and Gerge, may or may not receive IPADs,\r\n * and the morality applies to Gerges mood when those IPADs are received. The morality states that Gerge should:\r\n *\\t\r\n *  1. be happy only if they both get an IPAD.\r\n *\\t2. be sad if only one of them gets an IPAD and not the other.\r\n *\r\n * If neither of them receives an IPAD the morality does not apply, meaning that case (or those cases, rather)\r\n * are flagged as neutral.\r\n */\r\n\r\n/* Hypothetical declarations */\r\n\r\n// 1. Gerge and Jery may or may not receive IPADS.\r\nhyp GergeIPAD \"Gerge get IPAD\" \"Gerge don't get IPAD\"\r\nhyp JeryIPAD \\t\"Jery get IPAD\"  \"Jery don't get IPAD\"\r\n\r\n// 2. Gerges reaction to him and Jery receiving, or not receiving, IPADs.\r\nhyp GergeMood \"Gerge becomes happy\" \"Gerge becomes sad\"\r\n\r\n/* Rule declarations */\r\n\r\n// If both gets an IPAD, Gerge should be happy.\r\nrule BothGetRule = GergeIPAD.pos and JeryIPAD.pos and GergeMood.pos is good\r\n\r\n// If one of them gets an IPAD but not the other, Gerge should be sad.\r\nrule MoodRuleOnlyOne = (GergeIPAD.pos xor JeryIPAD.pos) and not GergeMood is good\r\n\r\n// The two rules above combined into one.\r\nrule MoodRule = BothGetRule or MoodRuleOnlyOne\r\n\r\n// If neither of the two gets an IPAD we will be indifferent, regardless of\r\n// what Gerge's mood is.\r\nrule IPADIndifferenceRule = (GergeIPAD.neg and JeryIPAD.neg).neg and GergeMood.either\r\n\r\n/* Solver declaration */\r\n\r\nsolver GergeSolver \"My Gerge solver\"\r\n\r\n/* Solver operations */\r\n\r\n// Apply the fairness rule.\r\nsolver GergeSolver apply MoodRule\r\n\r\n// Omit the cases that we are indifferent to.\r\nsolver GergeSolver omit IPADIndifferenceRule\r\n\r\n// Run the solver\r\nsolver GergeSolver run\r\n\r\n// Print the results\r\nsolver GergeSolver print`;\r\n\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Comp.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Comp.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Comp.vue?vue&type=template&id=626b02d0&scoped=true&\"\nimport script from \"./Comp.vue?vue&type=script&lang=ts&\"\nexport * from \"./Comp.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"626b02d0\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LogMor.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LogMor.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./LogMor.vue?vue&type=template&id=0a7ecbc8&\"\nimport script from \"./LogMor.vue?vue&type=script&lang=ts&\"\nexport * from \"./LogMor.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./LogMor.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Component from \"vue-class-component\";\nimport Vue from \"vue\";\nimport LogMor from \"./components/LogMor.vue\";\nimport CookieLaw from 'vue-cookie-law';\n\n@Component({\n    components: {\n        LogMor,\n        CookieLaw\n    }\n})\nexport default class App extends Vue {\n}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=ba1a6d58&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue, {CreateElement, VNode} from \"vue\";\nimport VueMaterial from \"vue-material\";\nimport \"vue-material/dist/theme/default.css\";\nimport \"vue-material/dist/vue-material.min.css\";\nimport App from \"./App.vue\";\nimport VueCookies from 'vue-cookies';\n\nVue.use(VueMaterial);\nVue.use(VueCookies);\nVue.config.productionTip = false;\n\nVue.$cookies.config('30d');\n\nnew Vue({\n    render: (h: CreateElement): VNode => h(App)\n}).$mount(\"#app\");\n"],"sourceRoot":""}